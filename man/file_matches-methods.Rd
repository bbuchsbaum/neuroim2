% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generic.R, R/file_format.R
\name{file_matches}
\alias{file_matches}
\alias{file_matches,FileFormat,character-method}
\title{Generic function to test whether a file name conforms to the given \code{\linkS4class{FileFormat}} instance.
Will test for match to either header file or data file}
\usage{
file_matches(x, file_name)

\S4method{file_matches}{FileFormat,character}(x, file_name)
}
\arguments{
\item{x}{A \linkS4class{FileFormat} object specifying the format requirements}

\item{file_name}{A character string specifying the file name to validate}
}
\value{
TRUE for match, FALSE otherwise

A logical value: \code{TRUE} if the file matches the format and both header 
  and data files exist, \code{FALSE} otherwise
}
\description{
Validates whether a file name conforms to the specified FileFormat and verifies
the existence of both header and data files.
}
\details{
The function performs the following validation steps:
\enumerate{
  \item Checks if the file name matches either the header or data format
  \item Verifies the existence of the corresponding paired file
  \item Returns \code{FALSE} if either check fails
}

File names are validated using case-sensitive extension matching.
}
\examples{
\dontrun{
# Create a FileFormat for ANALYZE format
fmt <- new("FileFormat", header_extension = "hdr", data_extension = "img")

# Check if files exist and match format
file_matches(fmt, "brain_scan.hdr")  # TRUE if both .hdr and .img exist
file_matches(fmt, "brain_scan.nii")  # FALSE for wrong extension
}

}
\seealso{
\code{\link{header_file_matches}}, \code{\link{data_file_matches}} for individual
file type checking
}
