% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/binary_io.R
\name{BinaryWriter}
\alias{BinaryWriter}
\title{Create a BinaryWriter Object}
\usage{
BinaryWriter(
  output,
  byte_offset,
  data_type,
  bytes_per_element,
  endian = .Platform$endian
)
}
\arguments{
\item{output}{A file name (character string) to write to or a \code{connection} object.}

\item{byte_offset}{An integer specifying the number of bytes to skip at the start of output.}

\item{data_type}{A character string specifying the R data type of binary elements to be written.}

\item{bytes_per_element}{An integer specifying the number of bytes in each data element 
(e.g., 4 or 8 for floating point numbers).}

\item{endian}{A character string specifying the endianness of the binary output connection. 
Default is \code{.Platform$endian}.}
}
\value{
A new instance of the \code{\linkS4class{BinaryWriter}} class.
}
\description{
This function creates a new instance of the \code{\linkS4class{BinaryWriter}} class,
which supports writing of bulk binary data to a connection or file.
}
\details{
The \code{BinaryWriter} function creates an object for efficient writing of binary data.
It can work with both file names and existing connection objects. If a file name is provided,
it opens a new connection in binary write mode.
}
\examples{
\dontrun{
# Create a BinaryWriter for a file
writer <- BinaryWriter("output.bin", byte_offset = 0, data_type = "double", 
                       bytes_per_element = 8)

# Create a BinaryWriter for an existing connection
con <- file("output.bin", "wb")
writer <- BinaryWriter(con, byte_offset = 100, data_type = "integer", 
                       bytes_per_element = 4, endian = "little")
}

}
\seealso{
\code{\link{BinaryWriter-class}} for the class definition and available methods.
\code{\link{BinaryReader}} for reading binary data.
}
