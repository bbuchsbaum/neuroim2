% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generic.R, R/common.R
\name{split_reduce}
\alias{split_reduce}
\alias{split_reduce,matrix,integer,function-method}
\alias{split_reduce,matrix,factor,missing-method}
\alias{split_reduce,matrix,factor,function-method}
\alias{split_reduce,NeuroVec,factor,function-method}
\alias{split_reduce,NeuroVec,factor,missing-method}
\title{Summarize Subsets of an Object by Splitting by Row and Applying a Summary Function}
\usage{
split_reduce(x, fac, FUN)

\S4method{split_reduce}{matrix,integer,function}(x, fac, FUN)

\S4method{split_reduce}{matrix,factor,missing}(x, fac)

\S4method{split_reduce}{matrix,factor,function}(x, fac, FUN)

\S4method{split_reduce}{NeuroVec,factor,function}(x, fac, FUN)

\S4method{split_reduce}{NeuroVec,factor,missing}(x, fac, FUN)
}
\arguments{
\item{x}{A \linkS4class{NeuroVec} object}

\item{fac}{Factor for grouping}

\item{FUN}{Function to apply to each group}
}
\value{
A new matrix where the original values have been "reduced" by the supplied function.

Matrix of reduced values

Matrix of reduced values

Matrix of reduced values

Matrix of reduced values

Matrix of reduced values
}
\description{
This function summarizes subsets of a numeric matrix or matrix-like object by first splitting the object by row and then applying a summary function.

Implementation of split_reduce for matrix with integer factors.
See \code{\link{split_reduce}} for the generic definition and complete documentation.

Implementation of split_reduce for matrix with factor grouping.
See \code{\link{split_reduce}} for the generic definition and complete documentation.

Implementation of split_reduce for matrix with factor grouping.
See \code{\link{split_reduce}} for the generic definition and complete documentation.

Implementation of split_reduce for NeuroVec objects.
See \code{\link{split_reduce}} for the generic definition and complete documentation.

Implementation of split_reduce for NeuroVec objects.
See \code{\link{split_reduce}} for the generic definition and complete documentation.
}
\details{
If 'FUN' is supplied, it must take a vector and return a single scalar value. If it returns more than one value, an error will occur.

If 'x' is a NeuroVec instance, voxels (dimensions 1:3) are treated as columns and time-series (dimension 4) as rows.
The summary function is then applied to groups of voxels. However, if the goal is to apply a function to groups of time-points.

This method supports two types of splitting:
\itemize{
  \item By voxel: when length(fac) equals number of voxels
  \item By volume: when length(fac) equals number of volumes
}

This method supports two types of splitting:
\itemize{
  \item By voxel: when length(fac) equals number of voxels
  \item By volume: when length(fac) equals number of volumes
}
}
\examples{
mat = matrix(rnorm(100*100), 100, 100)
fac = factor(sample(1:3, nrow(mat), replace=TRUE))
## Compute column means of each sub-matrix
ms <- split_reduce(mat, fac)
all.equal(row.names(ms), levels(fac))

## Compute column medians of each sub-matrix
ms <- split_reduce(mat, fac, median)

## Compute time-series means grouped over voxels.
## Here, 'length(fac)' must equal the number of voxels: 'prod(dim(bvec)[1:3])'
bvec <- NeuroVec(array(rnorm(24*24*24*24), c(24,24,24,24)), NeuroSpace(c(24,24,24,24), c(1,1,1)))
fac <- factor(sample(1:3, prod(dim(bvec)[1:3]), replace=TRUE))
ms <- split_reduce(bvec, fac)
ms2 <- split_reduce(bvec, fac, mean)
all.equal(row.names(ms), levels(fac))
all.equal(ms, ms2)

}
\seealso{
\code{\link{split_reduce}}

\code{\link{split_reduce}}

\code{\link{split_reduce}}

\code{\link{split_reduce}}

\code{\link{split_reduce}}
}
