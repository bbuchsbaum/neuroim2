% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/all_generic.R, R/neurovec.R
\docType{methods}
\name{write_vec}
\alias{write_vec}
\alias{write_vec,NeuroVec,character,missing,missing-method}
\alias{write_vec,NeuroVec,character,character,missing-method}
\alias{write_vec,NeuroVec,character,missing,character-method}
\alias{write_vec,NeuroVec,character,missing,character,ANY-method}
\title{Generic function to write a 4D image vector to disk}
\usage{
write_vec(x, file_name, format, dataType)

\S4method{write_vec}{NeuroVec,character,missing,missing}(x, file_name)

\S4method{write_vec}{NeuroVec,character,character,missing}(x, file_name, format)

\S4method{write_vec}{NeuroVec,character,missing,character}(x, file_name,
  dataType)
}
\arguments{
\item{x}{an image object, typically a \code{NeuroVec} instance.}

\item{file_name}{output file name.}

\item{format}{file format string. Since "NIFTI" is the only currently supported format, this parameter can be safely ignored and omitted.}

\item{dataType}{the numeric data type. If specified should be a \code{character} vector of: "BINARY", "UBYTE", "SHORT", "INT", "FLOAT", "DOUBLE".
Otherwise output format will be inferred from R the datatype of the image.}
}
\description{
Generic function to write a 4D image vector to disk
}
\examples{

bvec <- NeuroVec(array(0, c(10,10,10,10)), NeuroSpace(c(10,10,10,10), c(1,1,1)))
\dontrun{
writeVector(bvol, "out.nii")
writeVector(bvol, "out.nii.gz")
writeVector(bvec, "out.nii")
writeVector(bvec, "out.nii.gz")
}
}
