% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/conncomp.R
\name{conn_comp_3D}
\alias{conn_comp_3D}
\title{Extract Connected Components from a 3D Mask}
\usage{
conn_comp_3D(mask, connect = c("26-connect", "18-connect", "6-connect"))
}
\arguments{
\item{mask}{A 3D binary array representing the mask. Must be a logical array.}

\item{connect}{A character string specifying the connectivity constraint. 
Options are "6-connect", "18-connect", or "26-connect". Default is "26-connect".}
}
\value{
A list with two elements:
  \item{index}{A 3D array containing the cluster index of the connected component for each voxel.}
  \item{size}{A 3D array containing the size of the connected component for each voxel.}
}
\description{
This function identifies and labels connected components in a 3D binary mask using
different connectivity constraints.
}
\details{
The function implements a two-pass algorithm to identify connected components:
\itemize{
  \item First pass: Assigns initial labels and establishes connectivity.
  \item Second pass: Resolves label conflicts and assigns final labels.
}

The connectivity options determine which voxels are considered neighbors:
\itemize{
  \item 6-connect: Only face-adjacent voxels
  \item 18-connect: Face and edge-adjacent voxels
  \item 26-connect: Face, edge, and vertex-adjacent voxels
}
}
\examples{
# Generate a random 3D binary mask
set.seed(123)
dat <- array(as.logical(runif(10*10*10) > 0.5), c(10, 10, 10))

# Extract connected components using different connectivity constraints
res1 <- conn_comp_3D(dat, connect = "6-connect")
res2 <- conn_comp_3D(dat, connect = "18-connect")
res3 <- conn_comp_3D(dat, connect = "26-connect")

# Compare the number of connected components
cat("Number of components (6-connect):", max(res1$index), "\n")
cat("Number of components (18-connect):", max(res2$index), "\n")
cat("Number of components (26-connect):", max(res3$index), "\n")

}
\seealso{
\code{\link{array}} for creating 3D arrays
}
