[{"path":"https://bbuchsbaum.github.io/neuroim2/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 neuroim2 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/ImageVolumes.html","id":"reading-a-nifti-formatted-image-volume","dir":"Articles","previous_headings":"","what":"Reading a NIFTI formatted image volume","title":"Working with Image Volumes","text":"way read volumetric image file use read_vol:","code":"library(neuroim2) #> Loading required package: Matrix     file_name <- system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\")     vol <- read_vol(file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/ImageVolumes.html","id":"working-with-image-volumes","dir":"Articles","previous_headings":"","what":"Working with image volumes","title":"Working with Image Volumes","text":"Information geometry image volume shown : read_vol returns object class NeuroVol object extends R array 3 dimensions (x,y,z). Arithmetic can performed images ordinary arrays: numeric image volume can converted binary image follows: can also create NeuroVol instance array numeric vector. First consruct standard R array: Now reate NeuroSpace instance describes geometry image including, minimum, dimensions voxel spacing. usually create NeuroSpace objects, geometric information image automatically determined information stored image file header. Thus, NeuroSpace objects usually copied existing images using space extractor function needed:","code":"print(vol) #> NeuroVol #>   Type           : DenseNeuroVol  #>   Dimension      : 64 64 25  #>   Spacing        : 3.5  X  3.5  X  3.7  #>   Origin         : 110  X  -110  X  -46.2  #>   Axes           : Right-to-Left Posterior-to-Anterior Inferior-to-Superior class(vol) #> [1] \"DenseNeuroVol\" #> attr(,\"package\") #> [1] \"neuroim2\"          is.array(vol) #> [1] TRUE          dim(vol) #> [1] 64 64 25          vol[1,1,1] #> [1] 0          vol[64,64,24] #> [1] 0 vol2 <- vol + vol     sum(vol2) == 2 * sum(vol) #> [1] TRUE          vol3 <- vol2 - 2*vol     all(vol3 == 0) #> [1] TRUE vol2 <- as.logical(vol)     class(vol2) #> [1] \"LogicalNeuroVol\" #> attr(,\"package\") #> [1] \"neuroim2\"     print(vol2[1,1,1]) #> [1] FALSE x <- array(0, c(64,64,64)) bspace <- NeuroSpace(dim=c(64,64,64), spacing=c(1,1,1))     vol <- NeuroVol(x, bspace)     vol #> NeuroVol #>   Type           : DenseNeuroVol  #>   Dimension      : 64 64 64  #>   Spacing        : 1  X  1  X  1  #>   Origin         : 0  X  0  X  0  #>   Axes           : Left-to-Right Posterior-to-Anterior Inferior-to-Superior vol2 <- NeuroVol((vol+1)*25, space(vol))     max(vol2) #> [1] 25     space(vol2) #> NeuroSpace #>   Type           : NeuroSpace  #>   Dimension      : 64 64 64  #>   Spacing        : 1  X  1  X  1  #>   Origin         : 0  X  0  X  0  #>   Coordinate Transform : 1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 1"},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/ImageVolumes.html","id":"writing-a-nifti-formatted-image-volume","dir":"Articles","previous_headings":"","what":"Writing a NIFTI formatted image volume","title":"Working with Image Volumes","text":"’re ready write image volume disk, use write_vol can also display NeuroVol instance. Lets download MNI image web plot . Now can display using plot command. show every 15th slice.","code":"write_vol(vol2, \"output.nii\")          ## adding a '.gz' extension results ina gzipped file.     write_vol(vol2, \"output.nii.gz\") temp <- tempfile()     uri = \"http://www.bic.mni.mcgill.ca/~vfonov/nihpd/obj1/nihpd_asym_07.5-13.5_nifti.zip\"     download.file(uri,temp)     cmd <- paste(\"unzip \", \"-d\", dirname(temp), temp)     system(cmd)     vol <- read_vol(paste0(dirname(temp), \"/nihpd_asym_07.5-13.5_t1w.nii\")) plot(vol, zlevels=seq(1, dim(vol)[3], by=15))"},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/NeuroVector.html","id":"working-with-neuroimaging-time-series-data","dir":"Articles","previous_headings":"","what":"Working with neuroimaging time-series data","title":"Four dimensional neuroimaging data","text":"neuroim2 package contains data structures functions reading, accessing, processing 4-dimensional neuroimaging data.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/NeuroVector.html","id":"reading-a-four-dimensional-nifti-image-with-read_vec","dir":"Articles","previous_headings":"Working with neuroimaging time-series data","what":"Reading a four-dimensional NifTI image with read_vec","title":"Four dimensional neuroimaging data","text":"read 4D image consisting 5 time points, Now imagine set 4d images. can read read_vec. (just using three versions file example). extract subset volumes can use sub_vector function:","code":"library(purrr)       library(ggplot2)       file_name <- system.file(\"extdata\", \"global_mask_v4.nii\", package=\"neuroim2\")       vec <- read_vec(file_name)       dim(vec) #> [1] 64 64 25  4 file_name <- system.file(\"extdata\", \"global_mask_v4.nii\", package=\"neuroim2\")       vec <- read_vec(c(file_name, file_name, file_name))       dim(vec) #> [1] 64 64 25 12              vec2 <- read_vec(rep(file_name, 10))       vec2 #> NeuroVecSeq  #>   Type           : NeuroVecSeq  #>   Dimension      : 64 64 25 40  #>   Spacing        : 3.5  X  3.5  X  3.7  #>   Origin         : 112  X  -108  X  -46.2  #>   Axes           : Right-to-Left Posterior-to-Anterior Inferior-to-Superior  #>   Coordinate Transform : -3.5 0 0 0 0 3.5 0 0 0 0 3.7 0 112 -108 -46.2 1 vec_1_6 <- sub_vector(vec, 1:6)       dim(vec_1_6) #> [1] 64 64 25  6"},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/NeuroVector.html","id":"extracting-time-series-data-using-the-series-and-series_roi-functions","dir":"Articles","previous_headings":"Working with neuroimaging time-series data","what":"Extracting time-series data using the series and series_roi functions","title":"Four dimensional neuroimaging data","text":"get time-series voxel (1,1,1) can use series function: can extract 4d region interest series_roi follows: can also extract ROI using 1d indices: can extract plain matrix using series function: can also use coordinate indexing using voxel coordinates. First load binary mask spatial dimensions NeuroVec: Now convert indices voxels extract matrix values specified locations: using series_roi:","code":"series(vec_1_6, 1,1,1) #> [1] 0 0 0 0 0 0 file_name <- system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\")       vol <- read_vol(file_name)       roi <- spherical_roi(vol, c(12,12,12), radius=8)       rvec1 <- series_roi(vec, roi)              ## or alternatively as a pipeline       rvec2 <- read_vol(file_name) %>% spherical_roi(c(12,12,12), radius=8) %>% series_roi(vec,.)       rvec2 #>  #>  #> ROIVec  #>   ncol:            49  #>   nrow:            12  #>   Parent Dim:      64 64 25 12  #>   Voxel Cen. Mass: 12 12 12              ## we can extract the ROI values with the `values` method.       assertthat::assert_that(all(values(rvec1) == values(rvec2))) #> [1] TRUE       assertthat::assert_that(all(coords(rvec1) == coords(rvec2))) #> [1] TRUE r1 <- series_roi(vec, 1:100) r1 #>  #>  #> ROIVec  #>   ncol:            100  #>   nrow:            12  #>   Parent Dim:      64 64 25 12  #>   Voxel Cen. Mass: 27.46 1.36 1 r2 <- series(vec, 1:100) dim(r2) #> [1]  12 100 mask <- read_vol(system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\")) vox <- index_to_grid(mask, 1:100)  r3 <- series(vec, vox) dim(r3) #> [1]  12 100 r4 <- series_roi(vec,vox) r4 #>  #>  #> ROIVec  #>   ncol:            100  #>   nrow:            12  #>   Parent Dim:      64 64 25 12  #>   Voxel Cen. Mass: 27.46 1.36 1"},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/neuroim.html","id":"the-neuroim2-package","dir":"Articles","previous_headings":"","what":"The neuroim2 package","title":"The neuroim2 package","text":"neuroim2 package library S4 classes functions supporting neuroimaigng analysis R. contains data structures 3D 4D images rotines reading writing NIFTI formatted images. currently experimental/limited support reading AFNI formatted images.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/pipelines.html","id":"pipelining-operations-using-a-functional-approach","dir":"Articles","previous_headings":"","what":"Pipelining operations using a functional approach","title":"Pipelines","text":"neuroim2 packages provides set functions allows one split image data various ways processing data split parts. breaking dataset pieces, can also easily parallelize certain operations.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/pipelines.html","id":"splitting-an-image-into-connected-components","dir":"Articles","previous_headings":"Pipelining operations using a functional approach","what":"Splitting an image into connected components","title":"Pipelines","text":"First load example volume, assign random values, find connected components threshold .9  Now want find average value connected components using split_clusters function. Since conn_comp returns ClusteredNeuroVol containing cluster indices, use split original volume list ROIVols compute mean one. Suppose want compute local standard deviation within 4mm radius voxel. can use searchlight function construct list spherical ROIs centered every voxel input set.  Another thing might compute k nearest neighbors searchlight replace center voxel average intensity neighbors:  need access searchlight coordinates (voxel space), can use searchlight_coords function. , simply replace center voxel average neighbors searchlight space:","code":"library(purrr)       library(ggplot2)       file_name <- system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\")       vol <- read_vol(file_name)       mask.idx <- which(vol>0)              vol2 <- vol       vol2[mask.idx] <- runif(length(mask.idx))       comp <- conn_comp(vol, threshold=.9) #> Warning in ClusteredNeuroVol(mask, clusters = comps$index[mask > 0]): clustered #> volume only contains 1 partition              plot(comp$index, zlevels=seq(1,25,by=3), cmap=rainbow(255)) mvals <- vol2 %>% split_clusters(comp$index) %>% map_dbl( ~ mean(.)) sdvol <- vol %>% searchlight(radius=5, eager=TRUE) %>% map_dbl( ~ sd(.))  sdvol <- NeuroVol(sdvol, space=space(vol), indices=which(vol!=0)) plot(sdvol, cmap=rainbow(255)) k <- 12 knnfvol <- vol %>% searchlight(radius=12, eager=TRUE) %>% map_dbl(function(x) {   ind <- order((x[x@center_index] - x)^2)[1:k]   mean(x[ind]) }) %>% NeuroVol(space=space(vol), indices=which(vol!=0)) plot(knnfvol, cmap=rainbow(255), zlevels=seq(1,25,by=3)) avgvol <- vol %>% searchlight_coords(radius=12) %>% map_dbl(function(x) {   vals <- vol[x]   mean(vals[vals!=0]) }) %>% NeuroVol(space=space(vol), indices=which(vol!=0)) plot(avgvol, cmap=rainbow(255), zlevels=seq(1,25,by=3))"},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/pipelines.html","id":"mapping-a-function-over-every-slice-of-a-neurovol","dir":"Articles","previous_headings":"Pipelining operations using a functional approach","what":"Mapping a function over every slice of a NeuroVol","title":"Pipelines","text":"Suppose want split image volume slice apply function slice. can use slices function achieve follows:","code":"slice_means <- vol %>% slices %>% map_dbl(~ mean(.)) plot(slice_means, type='l', ylab=\"mean intensity\", xlab=\"slice number\")"},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/pipelines.html","id":"mapping-a-function-over-each-volume-of-a-neurovec-object","dir":"Articles","previous_headings":"Pipelining operations using a functional approach","what":"Mapping a function over each volume of a NeuroVec object","title":"Pipelines","text":"","code":"vec <- concat(vol,vol,vol,vol,vol) mean_vec <- vec %>% vols %>% map_dbl(~ mean(.)) sd_vec <- vec %>% vols %>% map_dbl(~ sd(.)) assert_that(length(mean_vec) == dim(vec)[4]) #> [1] TRUE assert_that(length(sd_vec) == dim(vec)[4]) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/pipelines.html","id":"mapping-a-function-over-each-vector-of-a-neurovec-object","dir":"Articles","previous_headings":"Pipelining operations using a functional approach","what":"Mapping a function over each vector of a NeuroVec object","title":"Pipelines","text":"","code":"vec <- concat(vol,vol,vol,vol,vol) mean_vol <- vec %>% vectors() %>% map_dbl(~ mean(.)) %>% NeuroVol(., space=space(vol)) assert_that(all(dim(mean_vol) == dim(vol))) #> [1] TRUE"},{"path":[]},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/regionOfInterest.html","id":"creating-a-spherical-roi","dir":"Articles","previous_headings":"Regions of interest","what":"Creating a spherical ROI","title":"Regions of Interest","text":"neuroim2 basic support creating regions interest (ROI). create spherical ROI around central point, need existing object type NeuroVol NeuroSpace. create spherical region interest 5mm radius around central voxel =20, j=20, k=20, first read image. Next, create spherical ROI centered around voxel coordinates [20,20,20] 5mm radius, filling values ROI 100.","code":"library(neuroim2)               file_name <- system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\")       vol <- read_vol(file_name) sphere <- spherical_roi(vol, c(20,20,20), radius=5, fill=100, use_cpp=FALSE) #>  #>  #> ROIVol  #>   Size:            11  #>   Parent Dim:      64 64 25  #>   Num Data Cols:   1  #>   Voxel Cen. Mass: 20 20 20"},{"path":"https://bbuchsbaum.github.io/neuroim2/articles/regionOfInterest.html","id":"creating-a-spherical-roi-around-a-real-valued-coordinate","dir":"Articles","previous_headings":"Regions of interest","what":"Creating a Spherical ROI around a real-valued coordinate","title":"Regions of Interest","text":"create spherical ROI centered around real coordinate millimeters, need first convert real-valued coordinates voxel-based coordinate. Suppose real-world coordinate -50, -28, 10 coordinate space. function spherical_roi takes coordinate voxel units, need convert real-world coordinate (.e. millimeter units) voxel coordinates.","code":"rpoint <- c(-34,-28,10)"},{"path":"https://bbuchsbaum.github.io/neuroim2/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bradley R Buchsbaum. Author, maintainer.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Buchsbaum BR (2023). neuroim2: Data Structures IO Neuroimaging Data Emphasis FMRI Data. R package version 0.7.0,  https://bbuchsbaum.github.io/neuroim2/, https://github.com/bbuchsbaum/neuroim2.","code":"@Manual{,   title = {neuroim2: Data Structures and IO for Neuroimaging Data with an Emphasis on FMRI Data},   author = {Bradley R Buchsbaum},   year = {2023},   note = {R package version 0.7.0,  https://bbuchsbaum.github.io/neuroim2/},   url = {https://github.com/bbuchsbaum/neuroim2}, }"},{"path":"https://bbuchsbaum.github.io/neuroim2/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data Structures and IO for Neuroimaging Data with an Emphasis on FMRI Data","text":"can install development version neuroim2 (v. 0.1.0) Github :","code":"# install.packages(\"devtools\") devtools::install_github(\"bbuchsbaum/neuroim2\")"},{"path":"https://bbuchsbaum.github.io/neuroim2/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Data Structures and IO for Neuroimaging Data with an Emphasis on FMRI Data","text":"read volumetric NIFTI formatted image, use read_vol function: Now, vol can treated three-dimensional array: can create 4D image, concatenating several 3D volumes:","code":"library(neuroim2) ## Loading required package: Matrix fname <- system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\") vol <- read_vol(fname) v1 <- vol[1,1,1] vol2 <- vol + vol vol3 <- vol2 - vol all(vol == vol3) ## [1] TRUE vec <- concat(vol, vol, vol2) series1 <- vec[1,1,1,] length(series1) ## [1] 3"},{"path":"https://bbuchsbaum.github.io/neuroim2/index.html","id":"vignettes","dir":"","previous_headings":"","what":"Vignettes","title":"Data Structures and IO for Neuroimaging Data with an Emphasis on FMRI Data","text":"See examples use neuroim2 vignettes.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AFNIFormat-class.html","id":null,"dir":"Reference","previous_headings":"","what":"AFNIFormat — AFNIFormat-class","title":"AFNIFormat — AFNIFormat-class","text":"class supports AFNI file format","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AFNIMetaInfo-class.html","id":null,"dir":"Reference","previous_headings":"","what":"AFNIMetaInfo — AFNIMetaInfo","title":"AFNIMetaInfo — AFNIMetaInfo","text":"Constructor AFNIMetaInfo class","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AFNIMetaInfo-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AFNIMetaInfo — AFNIMetaInfo","text":"","code":"AFNIMetaInfo(descriptor, afni_header)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AFNIMetaInfo-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AFNIMetaInfo — AFNIMetaInfo","text":"descriptor instance class AFNIFormat afni_header list returned read_afni_header","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AFNIMetaInfo-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AFNIMetaInfo — AFNIMetaInfo","text":"instance class AFNIMetaInfo","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AbstractSparseNeuroVec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"AbstractSparseNeuroVec — AbstractSparseNeuroVec-class","title":"AbstractSparseNeuroVec — AbstractSparseNeuroVec-class","text":"AbstractSparseNeuroVec","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AbstractSparseNeuroVec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"AbstractSparseNeuroVec — AbstractSparseNeuroVec-class","text":"mask mask defining sparse domain map instance class IndexLookupVol used map spatial index/row coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Arith-NeuroVec-NeuroVol-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Arithmetic Operations for NeuroVec and NeuroVol — Arith,NeuroVec,NeuroVol-method","title":"Arithmetic Operations for NeuroVec and NeuroVol — Arith,NeuroVec,NeuroVol-method","text":"function performs arithmetic operations NeuroVec object NeuroVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Arith-NeuroVec-NeuroVol-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Arithmetic Operations for NeuroVec and NeuroVol — Arith,NeuroVec,NeuroVol-method","text":"","code":"# S4 method for NeuroVec,NeuroVol Arith(e1, e2)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Arith-NeuroVec-NeuroVol-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Arithmetic Operations for NeuroVec and NeuroVol — Arith,NeuroVec,NeuroVol-method","text":"e1 NeuroVec object. e2 NeuroVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Arith-NeuroVec-NeuroVol-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Arithmetic Operations for NeuroVec and NeuroVol — Arith,NeuroVec,NeuroVol-method","text":"DenseNeuroVec object resulting arithmetic operation.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Arith-ROIVol-ROIVol-method.html","id":null,"dir":"Reference","previous_headings":"","what":"This function performs arithmetic operations on two ROIVol objects. — Arith,ROIVol,ROIVol-method","title":"This function performs arithmetic operations on two ROIVol objects. — Arith,ROIVol,ROIVol-method","text":"function performs arithmetic operations two ROIVol objects.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Arith-ROIVol-ROIVol-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function performs arithmetic operations on two ROIVol objects. — Arith,ROIVol,ROIVol-method","text":"","code":"# S4 method for ROIVol,ROIVol Arith(e1, e2)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Arith-ROIVol-ROIVol-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function performs arithmetic operations on two ROIVol objects. — Arith,ROIVol,ROIVol-method","text":"e1 ROIVol object. e2 ROIVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Arith-ROIVol-ROIVol-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function performs arithmetic operations on two ROIVol objects. — Arith,ROIVol,ROIVol-method","text":"ROIVol object resulting arithmetic operation.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Arith-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform arithmetic operations between two SparseNeuroVol objects — Arith,SparseNeuroVol,SparseNeuroVol-method","title":"Perform arithmetic operations between two SparseNeuroVol objects — Arith,SparseNeuroVol,SparseNeuroVol-method","text":"method performs arithmetic operations two SparseNeuroVol objects (e1 e2) using generic arithmetic function. dimensions objects checked compatibility performing operation. method performs arithmetic operations two ROIVol objects (e1 e2) using generic arithmetic function. dimensions objects checked compatibility performing operation. Perform arithmetic operation two SparseNeuroVec objects. input SparseNeuroVec objects must dimensions NeuroSpace objects. method computes union masks performs arithmetic operation non-zero values. result returned new SparseNeuroVec object. Perform arithmetic operation SparseNeuroVol object NeuroVol object. input SparseNeuroVol NeuroVol objects must dimensions. method performs arithmetic operation non-zero values SparseNeuroVol corresponding values NeuroVol. result returned new DenseNeuroVol object. Perform arithmetic operation two SparseNeuroVec objects. input SparseNeuroVec objects must dimensions. method performs arithmetic operation non-zero values SparseNeuroVec objects. result returned new SparseNeuroVec object. Perform arithmetic operation two NeuroVec objects. input NeuroVec objects must dimensions. method performs arithmetic operation elements NeuroVec objects. result returned new DenseNeuroVec object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Arith-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform arithmetic operations between two SparseNeuroVol objects — Arith,SparseNeuroVol,SparseNeuroVol-method","text":"","code":"# S4 method for SparseNeuroVol,SparseNeuroVol Arith(e1, e2)  # S4 method for DenseNeuroVol,DenseNeuroVol Arith(e1, e2)  # S4 method for DenseNeuroVec,DenseNeuroVec Arith(e1, e2)  # S4 method for SparseNeuroVol,NeuroVol Arith(e1, e2)  # S4 method for SparseNeuroVec,SparseNeuroVec Arith(e1, e2)  # S4 method for NeuroVec,NeuroVec Arith(e1, e2)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Arith-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform arithmetic operations between two SparseNeuroVol objects — Arith,SparseNeuroVol,SparseNeuroVol-method","text":"e1 NeuroVec object. e2 NeuroVec object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Arith-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform arithmetic operations between two SparseNeuroVol objects — Arith,SparseNeuroVol,SparseNeuroVol-method","text":"SparseNeuroVol object containing result arithmetic operation e1 e2. ROIVol object containing result arithmetic operation e1 e2. SparseNeuroVec object representing result arithmetic operation. DenseNeuroVol object representing result arithmetic operation. SparseNeuroVec object representing result arithmetic operation. DenseNeuroVec object representing result arithmetic operation.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AxisSet-class.html","id":null,"dir":"Reference","previous_headings":"","what":"AxisSet — AxisSet-class","title":"AxisSet — AxisSet-class","text":"Virtual base class representing ordered set named axes.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AxisSet-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"AxisSet — AxisSet-class","text":"ndim number axes (dimensions)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AxisSet1D-class.html","id":null,"dir":"Reference","previous_headings":"","what":"AxisSet1D — AxisSet1D-class","title":"AxisSet1D — AxisSet1D-class","text":"one-dimensional axis set","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AxisSet1D-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"AxisSet1D — AxisSet1D-class","text":"first axis","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AxisSet2D-class.html","id":null,"dir":"Reference","previous_headings":"","what":"AxisSet2D — AxisSet2D-class","title":"AxisSet2D — AxisSet2D-class","text":"two-dimensional axis set","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AxisSet2D-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"AxisSet2D — AxisSet2D-class","text":"j second axis","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AxisSet3D-class.html","id":null,"dir":"Reference","previous_headings":"","what":"AxisSet3D — AxisSet3D-class","title":"AxisSet3D — AxisSet3D-class","text":"three-dimensional axis set","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AxisSet3D-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"AxisSet3D — AxisSet3D-class","text":"k third axis","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AxisSet4D-class.html","id":null,"dir":"Reference","previous_headings":"","what":"AxisSet4D — AxisSet4D-class","title":"AxisSet4D — AxisSet4D-class","text":"four-dimensional axis set","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AxisSet4D-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"AxisSet4D — AxisSet4D-class","text":"l fourth axis","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AxisSet5D-class.html","id":null,"dir":"Reference","previous_headings":"","what":"AxisSet5D — AxisSet5D-class","title":"AxisSet5D — AxisSet5D-class","text":"five-dimensional axis set","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/AxisSet5D-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"AxisSet5D — AxisSet5D-class","text":"m fifth axis","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/BigNeuroVec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"BigNeuroVec — BigNeuroVec-class","title":"BigNeuroVec — BigNeuroVec-class","text":"class representing sparse four-dimensional brain image backed disk-based big-matrix. BigNeuroVec objects designed efficient handling large-scale brain imaging data fit memory. class inherits NeuroVec, AbstractSparseNeuroVec, implements ArrayLike4D interface.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/BigNeuroVec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"BigNeuroVec — BigNeuroVec-class","text":"data instance class FBM bigstatsr package, contains time-series data. FBM (Filebacked Big Matrix) matrix-like structure stored disk, allowing efficient handling large-scale data.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/BinaryReader-class.html","id":null,"dir":"Reference","previous_headings":"","what":"BinaryReader — BinaryReader-class","title":"BinaryReader — BinaryReader-class","text":"Class supporting reading bulk binary data connection","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/BinaryReader-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"BinaryReader — BinaryReader-class","text":"input binary input connection byte_offset number bytes skip start input data_type dataType binary Elements bytes_per_element number bytes data element (e.g. 4 8 floating point numbers) endian endianness binary input connection signed logical indicating whether data type signed","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/BinaryReader.html","id":null,"dir":"Reference","previous_headings":"","what":"BinaryReader — BinaryReader","title":"BinaryReader — BinaryReader","text":"Constructor  BinaryReader class","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/BinaryReader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BinaryReader — BinaryReader","text":"","code":"BinaryReader(   input,   byte_offset,   data_type,   bytes_per_element,   endian = .Platform$endian,   signed = TRUE )"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/BinaryReader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BinaryReader — BinaryReader","text":"input file name read else connection object byte_offset number bytes skip start input data_type R data type binary elements bytes_per_element number bytes data element (e.g. 4 8 floating point numbers) endian endianness binary input connection signed whether element signed (TRUE) unsigned (FALSE)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/BinaryWriter-class.html","id":null,"dir":"Reference","previous_headings":"","what":"BinaryWriter — BinaryWriter-class","title":"BinaryWriter — BinaryWriter-class","text":"class supports writing bulk binary data connection Constructor  BinaryWriter class","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/BinaryWriter-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BinaryWriter — BinaryWriter-class","text":"","code":"BinaryWriter(   output,   byte_offset,   data_type,   bytes_per_element,   endian = .Platform$endian )"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/BinaryWriter-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BinaryWriter — BinaryWriter-class","text":"output file name write else connection object byte_offset number bytes skip start output data_type R data type binary elements bytes_per_element number bytes data element (e.g. 4 8 floating point numbers) endian endianness binary output connection","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/BinaryWriter-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"BinaryWriter — BinaryWriter-class","text":"output binary output connection byte_offset number bytes skip start input data_type dataType binary Elements bytes_per_element number bytes data element (e.g. 4 8 floating point numbers) endian endianness binary output connection","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ClusteredNeuroVol-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ClusteredNeuroVol Class — ClusteredNeuroVol-class","title":"ClusteredNeuroVol Class — ClusteredNeuroVol-class","text":"three-dimensional brain image divided N disjoint partitions clusters. Construct ClusteredNeuroVol instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ClusteredNeuroVol-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ClusteredNeuroVol Class — ClusteredNeuroVol-class","text":"","code":"ClusteredNeuroVol(mask, clusters, label_map = NULL, label = \"\")"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ClusteredNeuroVol-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ClusteredNeuroVol Class — ClusteredNeuroVol-class","text":"mask instance class LogicalNeuroVol clusters vector clusters ids length equal number nonzero voxels mask mask label_map optional list maps cluster id cluster label, e.g. (1 -> \"FFA\", 2 -> \"PPA\") label optional character string used label volume","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ClusteredNeuroVol-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ClusteredNeuroVol Class — ClusteredNeuroVol-class","text":"ClusteredNeuroVol instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ClusteredNeuroVol-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ClusteredNeuroVol Class — ClusteredNeuroVol-class","text":"use case ClusteredNeuroVol store volumetric data clustered discrete sets voxels, associated id. example, class can used represent parcellated neuroimaging volumes.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ClusteredNeuroVol-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ClusteredNeuroVol Class — ClusteredNeuroVol-class","text":"mask LogicalNeuroVol object representing logical mask indicating spatial domain set clusters. clusters integer vector representing cluster number voxel mask. label_map named list element represents cluster name. cluster_map environment object maps cluster id set 1D spatial indices belonging cluster.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ClusteredNeuroVol-class.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"ClusteredNeuroVol Class — ClusteredNeuroVol-class","text":"ClusteredNeuroVol class inherits methods SparseNeuroVol class.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ClusteredNeuroVol-class.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ClusteredNeuroVol Class — ClusteredNeuroVol-class","text":"ClusteredNeuroVol class useful representing brain image clustered regions, region disjoint partition.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ClusteredNeuroVol-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ClusteredNeuroVol Class — ClusteredNeuroVol-class","text":"","code":"bspace <- NeuroSpace(c(16,16,16), spacing=c(1,1,1)) grid <- index_to_grid(bspace, 1:(16*16*16)) kres <- kmeans(grid, centers=10) mask <- NeuroVol(rep(1, 16^3),bspace) clusvol <- ClusteredNeuroVol(mask, kres$cluster)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ClusteredNeuroVol-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion from ClusteredNeuroVol to LogicalNeuroVol — as,ClusteredNeuroVol,DenseNeuroVol","title":"Conversion from ClusteredNeuroVol to LogicalNeuroVol — as,ClusteredNeuroVol,DenseNeuroVol","text":"Conversion ClusteredNeuroVol LogicalNeuroVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ColumnReader-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ColumnReader — ColumnReader-class","title":"ColumnReader — ColumnReader-class","text":"class supports reading data matrix-like storage format, file database, column-wise manner.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ColumnReader-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ColumnReader — ColumnReader-class","text":"nrow integer representing number rows matrix-like storage. ncol integer representing number columns matrix-like storage. reader function takes set column indices input returns matrix containing requested columns storage.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ColumnReader.html","id":null,"dir":"Reference","previous_headings":"","what":"ColumnReader — ColumnReader","title":"ColumnReader — ColumnReader","text":"Constructor  ColumnReader class","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ColumnReader.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ColumnReader — ColumnReader","text":"","code":"ColumnReader(nrow, ncol, reader)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ColumnReader.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ColumnReader — ColumnReader","text":"nrow number rows ncol number columns reader function takes set column indices returns matrix","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Compare-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Compare a SparseNeuroVol object with a numeric value — Compare,SparseNeuroVol,numeric-method","title":"Compare a SparseNeuroVol object with a numeric value — Compare,SparseNeuroVol,numeric-method","text":"method compares data SparseNeuroVol object (e1) numeric value (e2) using generic comparison function. method compares numeric value (e1) data SparseNeuroVol object (e2) using generic comparison function.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Compare-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compare a SparseNeuroVol object with a numeric value — Compare,SparseNeuroVol,numeric-method","text":"","code":"# S4 method for SparseNeuroVol,numeric Compare(e1, e2)  # S4 method for numeric,SparseNeuroVol Compare(e1, e2)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Compare-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compare a SparseNeuroVol object with a numeric value — Compare,SparseNeuroVol,numeric-method","text":"e1 numeric value compare data SparseNeuroVol object. e2 SparseNeuroVol object containing data compared.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Compare-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compare a SparseNeuroVol object with a numeric value — Compare,SparseNeuroVol,numeric-method","text":"result comparison SparseNeuroVol object's data numeric value. result comparison numeric value SparseNeuroVol object's data.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVec-H5NeuroVec.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert DenseNeuroVec to H5NeuroVec — DenseNeuroVec,H5NeuroVec","title":"Convert DenseNeuroVec to H5NeuroVec — DenseNeuroVec,H5NeuroVec","text":"function converts DenseNeuroVec object H5NeuroVec object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVec-H5NeuroVec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert DenseNeuroVec to H5NeuroVec — DenseNeuroVec,H5NeuroVec","text":"DenseNeuroVec object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVec-H5NeuroVec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert DenseNeuroVec to H5NeuroVec — DenseNeuroVec,H5NeuroVec","text":"H5NeuroVec object resulting conversion.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"DenseNeuroVec — DenseNeuroVec-class","title":"DenseNeuroVec — DenseNeuroVec-class","text":"class representing four-dimensional brain image, backed array. DenseNeuroVec objects store data dense array format, useful cases elements brain image contain non-zero values. class inherits NeuroVec array classes. constructor function class DenseNeuroVec","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVec-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DenseNeuroVec — DenseNeuroVec-class","text":"","code":"DenseNeuroVec(data, space, label = \"\")"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVec-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DenseNeuroVec — DenseNeuroVec-class","text":"data 4-dimensional array 2-dimension matrix either nvoxels ntime-points ntime-points nvoxels space NeuroSpace object label label type character","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVec-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DenseNeuroVec — DenseNeuroVec-class","text":"DenseNeuroVec instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVol-H5NeuroVol.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert DenseNeuroVol to H5NeuroVol — DenseNeuroVol,H5NeuroVol","title":"Convert DenseNeuroVol to H5NeuroVol — DenseNeuroVol,H5NeuroVol","text":"function converts DenseNeuroVol object H5NeuroVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVol-H5NeuroVol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert DenseNeuroVol to H5NeuroVol — DenseNeuroVol,H5NeuroVol","text":"DenseNeuroVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVol-H5NeuroVol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert DenseNeuroVol to H5NeuroVol — DenseNeuroVol,H5NeuroVol","text":"H5NeuroVol object resulting conversion.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVol-class.html","id":null,"dir":"Reference","previous_headings":"","what":"DenseNeuroVol — DenseNeuroVol-class","title":"DenseNeuroVol — DenseNeuroVol-class","text":"Three-dimensional brain image, backed array Construct DenseNeuroVol instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVol-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DenseNeuroVol — DenseNeuroVol-class","text":"","code":"DenseNeuroVol(data, space, label = \"\", indices = NULL)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVol-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"DenseNeuroVol — DenseNeuroVol-class","text":"data three-dimensional array space instance class NeuroSpace label character string indices optional 1-d index vector","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/DenseNeuroVol-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"DenseNeuroVol — DenseNeuroVol-class","text":"DenseNeuroVol instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/FileBackedNeuroVec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"FileBackedNeuroVec — FileBackedNeuroVec-class","title":"FileBackedNeuroVec — FileBackedNeuroVec-class","text":"class representing four-dimensional brain image read memory \"demand\" using memory-mapped file access. FileBackedNeuroVec objects enable efficient handling large-scale brain imaging data loading required portions data memory needed.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/FileBackedNeuroVec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"FileBackedNeuroVec — FileBackedNeuroVec-class","text":"meta instance class FileMetaInfo containing file meta information, file path, format, associated metadata.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/FileBackedNeuroVec.html","id":null,"dir":"Reference","previous_headings":"","what":"FileBackedNeuroVec — FileBackedNeuroVec","title":"FileBackedNeuroVec — FileBackedNeuroVec","text":"Construct FileBackedNeuroVec instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/FileBackedNeuroVec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FileBackedNeuroVec — FileBackedNeuroVec","text":"","code":"FileBackedNeuroVec(file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/FileBackedNeuroVec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FileBackedNeuroVec — FileBackedNeuroVec","text":"file_name name image file","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/FileFormat-class.html","id":null,"dir":"Reference","previous_headings":"","what":"FileFormatDescriptor — FileFormat-class","title":"FileFormatDescriptor — FileFormat-class","text":"class represents neuroimaging file format","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/FileFormat-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"FileFormatDescriptor — FileFormat-class","text":"file_format name file format (e.g. NIfTI) header_encoding file encoding header file (e.g. 'raw' binary, 'gzip' gz compressed') header_extension file extension header file (e.g. 'nii' NIfTI single files) data_encoding file encoding data file data_extension file extension data file (e.g. 'nii' NIfTI single files)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/FileMetaInfo-class.html","id":null,"dir":"Reference","previous_headings":"","what":"FileMetaInfo — FileMetaInfo-class","title":"FileMetaInfo — FileMetaInfo-class","text":"class contains meta information image data file class contains meta information NIfTI image file class contains meta information AFNI image file.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/FileMetaInfo-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"FileMetaInfo — FileMetaInfo-class","text":"header_file name file containing meta information data_file name file containing data descriptor descriptor image file format endian byte order data ('little' 'big') data_offset number bytes preceding start image data data file bytes_per_element number bytes per element intercept constant value added image -- multiple values allowed (must equal numer sub-images) slope image multiplier -- multiple values allowed (must equal numer sub-images) header list format specific attributes nifti_header list attributes specific NIfTI file format afni_header list attributes specific AFNI file format afni_header list attributes specific AFNI file format","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/FileSource-class.html","id":null,"dir":"Reference","previous_headings":"","what":"FileSource — FileSource-class","title":"FileSource — FileSource-class","text":"Base class representing data source images. purpose class provide layer low level IO image loading functionality.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/FileSource-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"FileSource — FileSource-class","text":"meta_info meta information data source","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/H5Format-class.html","id":null,"dir":"Reference","previous_headings":"","what":"H5Format — H5Format-class","title":"H5Format — H5Format-class","text":"class supports AFNI file format","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/H5NeuroVec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"H5NeuroVec — H5NeuroVec-class","title":"H5NeuroVec — H5NeuroVec-class","text":"class representing four-dimensional brain image (NeuroVec) backed HDF5 file. H5NeuroVec objects facilitate efficient handling large-scale brain imaging data storing accessing data using HDF5 file format.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/H5NeuroVec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"H5NeuroVec — H5NeuroVec-class","text":"obj instance class H5File hdf5r package, representing underlying HDF5 file.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/H5NeuroVecSource-class.html","id":null,"dir":"Reference","previous_headings":"","what":"H5NeuroVecSource — H5NeuroVecSource-class","title":"H5NeuroVecSource — H5NeuroVecSource-class","text":"class used produce H5NeuroVecSource instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/H5NeuroVecSource-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"H5NeuroVecSource — H5NeuroVecSource-class","text":"file_name name hdf5 file.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/H5NeuroVol-class.html","id":null,"dir":"Reference","previous_headings":"","what":"H5NeuroVol — H5NeuroVol-class","title":"H5NeuroVol — H5NeuroVol-class","text":"class representing three-dimensional brain image backed HDF5 dataset. H5NeuroVol objects facilitate efficient handling large-scale brain imaging data storing accessing data using HDF5 file format.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/H5NeuroVol-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"H5NeuroVol — H5NeuroVol-class","text":"h5obj instance class H5File hdf5r package, representing underlying HDF5 dataset.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/IndexLookupVol-class.html","id":null,"dir":"Reference","previous_headings":"","what":"IndexLookupVol Class — IndexLookupVol-class","title":"IndexLookupVol Class — IndexLookupVol-class","text":"three-dimensional brain image class serves map 1D grid indices table values. primarily used SparseNeuroVec class.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/IndexLookupVol-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"IndexLookupVol Class — IndexLookupVol-class","text":"","code":"IndexLookupVol(space, indices)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/IndexLookupVol-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"IndexLookupVol Class — IndexLookupVol-class","text":"space NeuroSpace object representing 3D space brain image. indices integer vector containing 1D indices voxels grid.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/IndexLookupVol-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"IndexLookupVol Class — IndexLookupVol-class","text":"object class IndexLookupVol representing index lookup volume. object class IndexLookupVol representing index lookup volume.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/IndexLookupVol-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"IndexLookupVol Class — IndexLookupVol-class","text":"space: NeuroSpace object representing 3D space brain image. indices: integer vector containing 1D indices voxels grid. map: integer vector containing mapping 1D indices table values.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/IndexLookupVol-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"IndexLookupVol Class — IndexLookupVol-class","text":"","code":"# Create a NeuroSpace object space <- NeuroSpace(c(2, 2, 2, 10), c(1, 1, 1))  # Create a 3D mask mask <- array(rnorm(2 * 2 * 2) > -100, c(2, 2, 2))  # Create indices and map for the IndexLookupVol indices <- which(mask) map <- seq_along(indices)  # Create an IndexLookupVol object ilv <- new(\"IndexLookupVol\", space=space, indices=as.integer(indices))"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Kernel-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Kernel — Kernel-class","title":"Kernel — Kernel-class","text":"class representing image kernel image processing, convolution filtering operations brain images.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Kernel-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"Kernel — Kernel-class","text":"width numeric value representing width kernel voxels. width typically odd number maintain symmetry. weights numeric vector containing weights associated voxel kernel. voxels matrix containing relative voxel coordinates kernel. row represents voxel coordinate (x, y, z). coords matrix containing relative real-world coordinates kernel, corresponding voxel coordinates.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Kernel.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Kernel object from a function of distance from kernel center — Kernel","title":"Create a Kernel object from a function of distance from kernel center — Kernel","text":"function creates Kernel object using kernel function (FUN) takes distance center kernel first argument.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Kernel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Kernel object from a function of distance from kernel center — Kernel","text":"","code":"Kernel(kerndim, vdim, FUN = dnorm, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Kernel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Kernel object from a function of distance from kernel center — Kernel","text":"kerndim numeric vector representing dimensions voxels kernel. vdim numeric vector representing dimensions voxels real units. FUN kernel function taking first argument representing distance center kernel (default: dnorm). ... Additional parameters kernel function, FUN.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Kernel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Kernel object from a function of distance from kernel center — Kernel","text":"Kernel object specified dimensions, voxel dimensions, kernel function.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Kernel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Kernel object from a function of distance from kernel center — Kernel","text":"","code":"kdim <- c(3, 3, 3) vdim <- c(1, 1, 1) k <- Kernel(kerndim = kdim, vdim = vdim, FUN = dnorm, sd = 1)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LatentNeuroVec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LatentNeuroVec — LatentNeuroVec-class","title":"LatentNeuroVec — LatentNeuroVec-class","text":"class stores represents 4-dimensional array set basis functions (dictionary) corresponding set loadings (coefficients). function constructs LatentNeuroVec object basis, associated loadings, NeuroSpace instance, mask, optional offset.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LatentNeuroVec-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LatentNeuroVec — LatentNeuroVec-class","text":"","code":"LatentNeuroVec(basis, loadings, space, mask, offset = NULL)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LatentNeuroVec-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LatentNeuroVec — LatentNeuroVec-class","text":"basis numeric n--k matrix containing latent vectors forming reduced space. loadings numeric p--k matrix p loadings. space NeuroSpace instance defining dimensions, spacing, origin, axes, transformation neuroimaging space. mask 3D logical array, 1D logical vector, instance LogicalNeuroVol class representing brain mask. offset optional numeric 1--p offset vector. provided, defaults zero vector.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LatentNeuroVec-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LatentNeuroVec — LatentNeuroVec-class","text":"new LatentNeuroVec instance representing latent neuroimaging vectors.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LatentNeuroVec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"LatentNeuroVec — LatentNeuroVec-class","text":"basis matrix bases, column basis vector. loadings sparseMatrix loadings offset offset vector","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LatentNeuroVec-class.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LatentNeuroVec — LatentNeuroVec-class","text":"","code":"LatentNeuroVec(basis, loadings, space, mask, offset = NULL)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LatentNeuroVec-class.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LatentNeuroVec — LatentNeuroVec-class","text":"","code":"bspace <- NeuroSpace(c(2,2,2,10), c(1,1,1)) mask <- array(rnorm(2*2*2) > -100, c(2,2,2)) mat <- matrix(rnorm(sum(mask)), 10, sum(mask)) pres <- prcomp(mat) svec <- LatentNeuroVec(pres$x, pres$rotation, bspace, mask, offset=colMeans(mat)) svec2 <- SparseNeuroVec(mat, bspace, mask) length(indices(svec)) == sum(mask)  all.equal(svec2[1:prod(dim(mask))], svec[1:prod(dim(mask))])"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LatentNeuroVecSource-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LatentNeuroVecSource — LatentNeuroVecSource-class","title":"LatentNeuroVecSource — LatentNeuroVecSource-class","text":"class used produce LatentNeuroVecSource instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LatentNeuroVecSource-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"LatentNeuroVecSource — LatentNeuroVecSource-class","text":"file_name name file.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LogicalNeuroVol-class.html","id":null,"dir":"Reference","previous_headings":"","what":"LogicalNeuroVol — LogicalNeuroVol-class","title":"LogicalNeuroVol — LogicalNeuroVol-class","text":"S4 class represents three-dimensional brain image, values either TRUE FALSE. particularly useful creating managing binary masks brain images. function constructs LogicalNeuroVol instance.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LogicalNeuroVol-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LogicalNeuroVol — LogicalNeuroVol-class","text":"","code":"LogicalNeuroVol(data, space, label = \"\", indices = NULL)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LogicalNeuroVol-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"LogicalNeuroVol — LogicalNeuroVol-class","text":"data three-dimensional array, 1D vector length equal prod(dim(space)), set indices elements TRUE. space instance class NeuroSpace. label character string. indices optional 1-d index vector.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LogicalNeuroVol-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"LogicalNeuroVol — LogicalNeuroVol-class","text":"LogicalNeuroVol instance.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/LogicalNeuroVol-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LogicalNeuroVol — LogicalNeuroVol-class","text":"","code":"# Load an example brain mask brain_mask <- read_vol(system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\"))  # Convert the brain mask to a LogicalNeuroVol logical_vol <- LogicalNeuroVol(brain_mask, space(brain_mask))"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/MappedNeuroVec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MappedNeuroVec — MappedNeuroVec-class","title":"MappedNeuroVec — MappedNeuroVec-class","text":"class representing four-dimensional brain image, backed memory-mapped file. MappedNeuroVec objects store data memory-mapped file, providing efficient access large brain images without loading entire dataset memory. class inherits NeuroVec implements ArrayLike4D interface. constructs MappedNeuroVec object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/MappedNeuroVec-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MappedNeuroVec — MappedNeuroVec-class","text":"","code":"MappedNeuroVec(file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/MappedNeuroVec-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MappedNeuroVec — MappedNeuroVec-class","text":"file_name name 4D image file containing memory-mapped data source.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/MappedNeuroVec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"MappedNeuroVec — MappedNeuroVec-class","text":"filemap instance mmap class representing memory-mapped file containing brain image data. offset integer representing offset (bytes) within memory-mapped file brain image data starts.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/MappedNeuroVecSource-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MappedNeuroVecSource — MappedNeuroVecSource-class","title":"MappedNeuroVecSource — MappedNeuroVecSource-class","text":"class used produce MappedNeuroVec instance constructs MappedNeuroVecSource object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/MappedNeuroVecSource-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MappedNeuroVecSource — MappedNeuroVecSource-class","text":"","code":"MappedNeuroVecSource(file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/MappedNeuroVecSource-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MappedNeuroVecSource — MappedNeuroVecSource-class","text":"file_name name image file memory mapped","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/MetaInfo-class.html","id":null,"dir":"Reference","previous_headings":"","what":"MetaInfo — MetaInfo-class","title":"MetaInfo — MetaInfo-class","text":"class contains meta information image data type","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/MetaInfo-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MetaInfo — MetaInfo-class","text":"","code":"MetaInfo(   Dim,   spacing,   origin = rep(0, length(spacing)),   data_type = \"FLOAT\",   label = \"\",   spatial_axes = OrientationList3D$AXIAL_LPI,   additional_axes = NullAxis )"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/MetaInfo-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MetaInfo — MetaInfo-class","text":"Dim image dimensions spacing voxel dimensions origin coordinate origin data_type type data (e.g. \"FLOAT\") label name(s) images spatial_axes image axes spatial dimensions (x,y,z) additional_axes axes dimensions > 3 (e.g. time, color band, direction)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/MetaInfo-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MetaInfo — MetaInfo-class","text":"instance class MetaInfo","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/MetaInfo-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"MetaInfo — MetaInfo-class","text":"data_type data type code, e.g. FLOAT dims image dimensions spatial_axes image axes spatial dimensions (x,y,z) additional_axes axes dimensions > 3 (e.g. time, color band, direction) spacing voxel dimensions origin coordinate origin label name(s) images","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NIFTIFormat-class.html","id":null,"dir":"Reference","previous_headings":"","what":"NIFTIFormat — NIFTIFormat-class","title":"NIFTIFormat — NIFTIFormat-class","text":"class supports NIFTI file format","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NIFTIMetaInfo-class.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor for NIFTIMetaInfo class — NIFTIMetaInfo","title":"Constructor for NIFTIMetaInfo class — NIFTIMetaInfo","text":"Constructor NIFTIMetaInfo class","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NIFTIMetaInfo-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor for NIFTIMetaInfo class — NIFTIMetaInfo","text":"","code":"NIFTIMetaInfo(descriptor, nifti_header)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NIFTIMetaInfo-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor for NIFTIMetaInfo class — NIFTIMetaInfo","text":"descriptor instance class NIFTIFormat nifti_header list returned readNIftiHeader","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NIFTIMetaInfo-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor for NIFTIMetaInfo class — NIFTIMetaInfo","text":"instance class NIFTIMetaInfo","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NamedAxis-class.html","id":null,"dir":"Reference","previous_headings":"","what":"NamedAxis — NamedAxis-class","title":"NamedAxis — NamedAxis-class","text":"class represents axis name attribute","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NamedAxis-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"NamedAxis — NamedAxis-class","text":"axis name axis direction axis (-1,+1)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroBucket-class.html","id":null,"dir":"Reference","previous_headings":"","what":"NeuroBucket — NeuroBucket-class","title":"NeuroBucket — NeuroBucket-class","text":"four-dimensional image conists sequence labeled image volumes backed list","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroBucket-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"NeuroBucket — NeuroBucket-class","text":"labels names sub-volumes contained bucket data list NeuroVol instances names corresponding volume labels","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroHyperVec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"NeuroHyperVec — NeuroHyperVec-class","title":"NeuroHyperVec — NeuroHyperVec-class","text":"Five-dimensional brain image","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroObj-class.html","id":null,"dir":"Reference","previous_headings":"","what":"NeuroObj\nBase class for all data objects with a cartesion spatial represenetation — NeuroObj-class","title":"NeuroObj\nBase class for all data objects with a cartesion spatial represenetation — NeuroObj-class","text":"NeuroObj Base class data objects cartesion spatial represenetation","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroObj-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"NeuroObj\nBase class for all data objects with a cartesion spatial represenetation — NeuroObj-class","text":"space geometry image object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroSlice-class.html","id":null,"dir":"Reference","previous_headings":"","what":"NeuroSlice — NeuroSlice-class","title":"NeuroSlice — NeuroSlice-class","text":"two-dimensional brain image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroSlice.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a NeuroSlice object — NeuroSlice","title":"Construct a NeuroSlice object — NeuroSlice","text":"Construct NeuroSlice object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroSlice.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a NeuroSlice object — NeuroSlice","text":"","code":"NeuroSlice(data, space, indices = NULL)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroSlice.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a NeuroSlice object — NeuroSlice","text":"data data vector matrix space instance class NeuroSpace indices linear indices corresponding used data 1D vector.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroSlice.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a NeuroSlice object — NeuroSlice","text":"","code":"bspace <- NeuroSpace(c(64,64), spacing=c(1,1)) dat <- array(rnorm(64*64), c(64,64)) bslice <- NeuroSlice(dat,bspace) bslice #> NeuroSlice #>   Type           : NeuroSlice  #>   Dimension      : 64 64  #>   Spacing        : 1  X  1  #>   Origin         : 0  X  0  #>   Axes           : Left-to-Right Posterior-to-Anterior"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroSpace-class.html","id":null,"dir":"Reference","previous_headings":"","what":"NeuroSpace Class — NeuroSpace-class","title":"NeuroSpace Class — NeuroSpace-class","text":"Represents geometry brain image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroSpace-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"NeuroSpace Class — NeuroSpace-class","text":"dim integer vector representing grid dimensions image. origin numeric vector representing coordinates spatial origin. spacing numeric vector representing dimensions (mm) grid units (voxels). axes named AxisSet object representing set spatial axes untransformed native grid space. trans matrix representing affine transformation converts grid coordinates real-world coordinates. inverse matrix representing inverse transformation converts real-world coordinates grid coordinates.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroSpace-class.html","id":"validity","dir":"Reference","previous_headings":"","what":"Validity","title":"NeuroSpace Class — NeuroSpace-class","text":"NeuroSpace object considered valid :   - length @dim slot equal lengths @spacing, @origin, number axes @axes slots.   - @dim slot contains non-negative values.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroSpace-class.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NeuroSpace Class — NeuroSpace-class","text":"NeuroSpace class used store manipulate geometric properties brain image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroSpace-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NeuroSpace Class — NeuroSpace-class","text":"","code":"# Create a NeuroSpace object space <- NeuroSpace(dim=as.integer(c(64, 64, 64)), origin=c(0, 0, 0), spacing=c(1, 1, 1))"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"NeuroVec — NeuroVec-class","title":"NeuroVec — NeuroVec-class","text":"S4 class represents four-dimensional brain image, can used store process time series data fMRI 4D functional connectivity maps. class extends basic functionality NeuroObj. Constructor function NeuroVec class. function used create instance NeuroVec object, represents four-dimensional brain image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVec-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NeuroVec — NeuroVec-class","text":"","code":"NeuroVec(data, space = NULL, mask = NULL, label = \"\")"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVec-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NeuroVec — NeuroVec-class","text":"data image data, can matrix, 4D array, list NeuroVol objects. latter, geometric space data (NeuroSpace) inferred constituent volumes, must identical. space optional NeuroSpace object. need included data argument list NeuroVol objects. mask optional array type logical. label label type character.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVec-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NeuroVec — NeuroVec-class","text":"concrete instance NeuroVec class. mask provided, function returns SparseNeuroVec object; otherwise, returns DenseNeuroVec object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVec-class.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NeuroVec — NeuroVec-class","text":"create NeuroVec object, use constructor function NeuroVec().","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVec-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NeuroVec — NeuroVec-class","text":"","code":"# Load an example 4D brain image example_4d_image <- read_vec(system.file(\"extdata\", \"global_mask_v4.nii\", package=\"neuroim2\"))  # Create a NeuroVec object by copying the @.Data field (not advised in practice) neuro_vec <- NeuroVec(data=example_4d_image@.Data, space=space(example_4d_image))  # Load an example 4D brain image example_4d_image <- read_vec(system.file(\"extdata\", \"global_mask_v4.nii\", package=\"neuroim2\"))  # Create a NeuroVec object neuro_vec <- NeuroVec(data=example_4d_image@.Data, space=space(example_4d_image))"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVec-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"[[ — [[,NeuroVec,numeric-method","title":"[[ — [[,NeuroVec,numeric-method","text":"[[","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVec-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"[[ — [[,NeuroVec,numeric-method","text":"","code":"# S4 method for NeuroVec,numeric [[(x, i)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVec-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"[[ — [[,NeuroVec,numeric-method","text":"x object volume index","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVec.html","id":null,"dir":"Reference","previous_headings":"","what":"H5NeuroVec — H5NeuroVec","title":"H5NeuroVec — H5NeuroVec","text":"Construct H5NeuroVec object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"H5NeuroVec — H5NeuroVec","text":"","code":"H5NeuroVec(file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"H5NeuroVec — H5NeuroVec","text":"file_name name 4-dimensional image neuroim2 hdf5 format","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"H5NeuroVec — H5NeuroVec","text":"H5NeuroVec instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSeq-class.html","id":null,"dir":"Reference","previous_headings":"","what":"NeuroVecSeq — NeuroVecSeq-class","title":"NeuroVecSeq — NeuroVecSeq-class","text":"concatenated sequence NeuroVec instances.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSeq-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"NeuroVecSeq — NeuroVecSeq-class","text":"vecs sequences NeuroVec instances lens number volumes NeuroVec sequence","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSeq-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"#' @rdname series-methods\n#' @export\nsetMethod(","title":"#' @rdname series-methods\n#' @export\nsetMethod(","text":"#' @rdname series-methods #' @export setMethod(\"series\", signature(x=\"NeuroVecSeq\", =\"numeric\"),           def=function(x, , j, k)              map(x@vecs, ~ series(., .integer(),.integer(j),.integer(k)))            )","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSeq-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"#' @rdname series-methods\n#' @export\nsetMethod(","text":"","code":"# S4 method for NeuroVecSeq,numeric [[(x, i)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSeq-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"#' @rdname series-methods\n#' @export\nsetMethod(","text":"x object indices","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSeq-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"#' @rdname series-methods\n#' @export\nsetMethod(","text":"#' @rdname series-methods #' @export setMethod(\"series\", signature(x=\"NeuroVecSeq\", =\"matrix\"),           def=function(x,)              .call(rbind, map(x@vecs, ~ series(., )))           ) #' @rdname series-methods #' @export setMethod(\"series_roi\", signature(x=\"NeuroVecSeq\", =\"matrix\"),           def=function(x,)              rois <- map(x@vecs, ~ series_roi(., ))             (length(rois) == 1)                rois[[1]]              else (length(rois) == 2)                concat(rois[[1]], rois[[2]])              else                f <- partial(concat, rois[[1]], rois[[2]])               .call(f, rois[3:length(rois)])          ) [[","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSeq.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a NeuroVecSeq Instance — NeuroVecSeq","title":"Create a NeuroVecSeq Instance — NeuroVecSeq","text":"Constructs NeuroVecSeq object represent variable-length list NeuroVec objects.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSeq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a NeuroVecSeq Instance — NeuroVecSeq","text":"","code":"NeuroVecSeq(...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSeq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a NeuroVecSeq Instance — NeuroVecSeq","text":"... One instances type NeuroVec.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSeq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a NeuroVecSeq Instance — NeuroVecSeq","text":"NeuroVecSeq object containing provided NeuroVec objects, along associated space length information.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSeq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a NeuroVecSeq Instance — NeuroVecSeq","text":"","code":"v1 <- NeuroVec(array(0, c(5, 5, 5, 2)), space = NeuroSpace(dim = c(5, 5, 5, 2))) v2 <- NeuroVec(array(0, c(5, 5, 5, 4)), space = NeuroSpace(dim = c(5, 5, 5, 4))) v3 <- NeuroVec(array(0, c(5, 5, 5, 6)), space = NeuroSpace(dim = c(5, 5, 5, 6))) vs <- NeuroVecSeq(v1, v2, v3) blks <- split_blocks(vs, rep(1:3, each = 4)) # res <- blks %>% purrr::map(~ dim(.))"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSource-class.html","id":null,"dir":"Reference","previous_headings":"","what":"NeuroVecSource — NeuroVecSource-class","title":"NeuroVecSource — NeuroVecSource-class","text":"class used produce NeuroVec instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSource-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"NeuroVecSource — NeuroVecSource-class","text":"indices index vector volumes loaded","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSource.html","id":null,"dir":"Reference","previous_headings":"","what":"NeuroVecSource — NeuroVecSource","title":"NeuroVecSource — NeuroVecSource","text":"Construct NeuroVecSource object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSource.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NeuroVecSource — NeuroVecSource","text":"","code":"NeuroVecSource(file_name, indices = NULL, mask = NULL)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSource.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NeuroVecSource — NeuroVecSource","text":"file_name name 4-dimensional image file indices subset integer volume indices load -- NULL volumes loaded mask image volume indicating subset voxels loaded. provided, function returns SparseNeuroVecSource","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSource.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"NeuroVecSource — NeuroVecSource","text":"instance deriving NeuroVecSource","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVecSource.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"NeuroVecSource — NeuroVecSource","text":"mask supplied LogicalNeuroVol NeuroVol instance. latter, mask defined nonzero elements volume.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVol-class.html","id":null,"dir":"Reference","previous_headings":"","what":"NeuroVol — NeuroVol-class","title":"NeuroVol — NeuroVol-class","text":"Base class image representing 3D volumetric data.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVol.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a NeuroVol object — NeuroVol","title":"Construct a NeuroVol object — NeuroVol","text":"Construct NeuroVol instance, using default (dense) implementation","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a NeuroVol object — NeuroVol","text":"","code":"NeuroVol(data, space, label = \"\", indices = NULL)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a NeuroVol object — NeuroVol","text":"data three-dimensional array space instance class NeuroSpace label character string identify volume indices 1D vector gives linear indices associated data vector","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a NeuroVol object — NeuroVol","text":"DenseNeuroVol instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a NeuroVol object — NeuroVol","text":"","code":"bspace <- NeuroSpace(c(64,64,64), spacing=c(1,1,1)) dat <- array(rnorm(64*64*64), c(64,64,64)) bvol <- NeuroVol(dat,bspace, label=\"test\")"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVolSource-class.html","id":null,"dir":"Reference","previous_headings":"","what":"NeuroVolSource — NeuroVolSource-class","title":"NeuroVolSource — NeuroVolSource-class","text":"class used produce NeuroVol instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVolSource-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NeuroVolSource — NeuroVolSource-class","text":"","code":"NeuroVolSource(input, index = 1)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVolSource-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"NeuroVolSource — NeuroVolSource-class","text":"input input file name index image subvolume index","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/NeuroVolSource-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"NeuroVolSource — NeuroVolSource-class","text":"index index volume read -- must length 1.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROI-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ROI — ROI-class","title":"ROI — ROI-class","text":"Base marker class region interest (ROI)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROICoords-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ROICoords — ROICoords-class","title":"ROICoords — ROICoords-class","text":"class representing region interest (ROI) brain image, defined set coordinates. class stores geometric space image coordinates voxels within ROI.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROICoords-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ROICoords — ROICoords-class","text":"space instance class NeuroSpace representing geometric space image data. coords matrix containing coordinates voxels within ROI. row represents coordinate , e.g. (,   j,  k).","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ROIVec — ROIVec-class","title":"ROIVec — ROIVec-class","text":"class representing vector-valued volumetric region interest (ROI) brain image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ROIVec — ROIVec-class","text":"coords matrix containing 3D coordinates voxels within ROI. row represents voxel coordinate (x, y, z). .Data matrix containing data values associated voxel ROI. row corresponds unique vector value, number rows match number rows coords matrix.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVec-class.html","id":"validity","dir":"Reference","previous_headings":"","what":"Validity","title":"ROIVec — ROIVec-class","text":"object class ROIVec considered valid : - coords slot matrix 3 columns. - .Data slot matrix. - number rows .Data matrix equal number rows coords matrix.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVec.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an instance of class ROIVec — ROIVec","title":"Create an instance of class ROIVec — ROIVec","text":"function constructs instance ROIVec class, represents region interest (ROI) 4D volume. class stores NeuroSpace object, voxel coordinates, data values ROI.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an instance of class ROIVec — ROIVec","text":"","code":"ROIVec(vspace, coords, data = rep(nrow(coords), 1))"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an instance of class ROIVec — ROIVec","text":"vspace instance class NeuroSpace four dimensions, represents dimensions, voxel spacing, time points 4D volume. coords 3-column matrix voxel coordinates region interest. data matrix data values associated region interest, row representing voxel column representing time point. default, matrix number rows equal number rows `coords` matrix single column filled ones.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an instance of class ROIVec — ROIVec","text":"instance class ROIVec, containing NeuroSpace object,   voxel coordinates, data values region interest.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVec.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an instance of class ROIVec — ROIVec","text":"","code":"# Create a NeuroSpace object vspace <- NeuroSpace(dim = c(5, 5, 5, 10), spacing = c(1, 1, 1))  # Define voxel coordinates for the ROI coords <- matrix(c(1, 2, 3, 2, 2, 2, 3, 3, 3), ncol = 3)  # Create a data matrix for the ROI data <- matrix(rnorm(30), nrow = 10, ncol = 3)  # Create a ROIVec object roi_vec <- ROIVec(vspace, coords, data)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVecWindow-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ROIVecWindow — ROIVecWindow-class","title":"ROIVecWindow — ROIVecWindow-class","text":"class representing spatially windowed, vector-valued volumetric region interest (ROI) brain image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVecWindow-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ROIVecWindow — ROIVecWindow-class","text":"coords matrix containing 3D coordinates voxels within ROI. row represents voxel coordinate (x, y, z). .Data matrix containing data values associated voxel ROI. row corresponds unique vector value, number rows match number rows coords matrix. parent_index integer representing 1D index center voxel parent space. center_index integer representing location coordinate matrix center voxel window.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVecWindow-class.html","id":"validity","dir":"Reference","previous_headings":"","what":"Validity","title":"ROIVecWindow — ROIVecWindow-class","text":"object class ROIVecWindow considered valid : - coords slot matrix 3 columns. - .Data slot matrix. - number rows .Data matrix equal number rows coords matrix.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVol-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ROIVol — ROIVol-class","title":"ROIVol — ROIVol-class","text":"class representing volumetric region interest (ROI) brain image, defined set coordinates associated data values.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVol-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ROIVol — ROIVol-class","text":"coords matrix containing 3D coordinates voxels within ROI. row represents voxel coordinate (x, y, z). .Data numeric vector containing data values associated voxel ROI. length vector match number rows coords matrix.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVol-class.html","id":"validity","dir":"Reference","previous_headings":"","what":"Validity","title":"ROIVol — ROIVol-class","text":"object class ROIVol considered valid : - coords slot matrix 3 columns. - .Data slot numeric vector. - length .Data vector equal number rows coords matrix.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVol.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an instance of class ROIVol — ROIVol","title":"Create an instance of class ROIVol — ROIVol","text":"function constructs instance ROIVol class, represents region interest (ROI) 3D volume. class stores NeuroSpace object, voxel coordinates, data values ROI.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an instance of class ROIVol — ROIVol","text":"","code":"ROIVol(vspace, coords, data = rep(1, nrow(coords)))"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an instance of class ROIVol — ROIVol","text":"vspace instance class NeuroSpace three dimensions, represents dimensions voxel spacing 3D volume. coords 3-column matrix voxel coordinates region interest. data data values associated region interest, provided numeric vector. default, vector ones length equal number rows `coords` matrix.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an instance of class ROIVol — ROIVol","text":"instance class ROIVol, containing NeuroSpace object,   voxel coordinates, data values region interest.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an instance of class ROIVol — ROIVol","text":"","code":"# Create a NeuroSpace object vspace <- NeuroSpace(dim = c(5, 5, 5), spacing = c(1, 1, 1))  # Define voxel coordinates for the ROI coords <- matrix(c(1, 2, 3, 2, 2, 2, 3, 3, 3), ncol = 3)  # Create a ROIVol object roi_vol <- ROIVol(vspace, coords)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVolWindow-class.html","id":null,"dir":"Reference","previous_headings":"","what":"ROIVolWindow — ROIVolWindow-class","title":"ROIVolWindow — ROIVolWindow-class","text":"class representing spatially windowed volumetric region interest (ROI) brain image, derived larger parent ROI.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVolWindow-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"ROIVolWindow — ROIVolWindow-class","text":"parent_index integer representing 1D index center voxel parent space. center_index integer representing location coordinate matrix center voxel window. coords matrix containing 3D coordinates voxels within ROI. row represents voxel coordinate (x, y, z). .Data numeric vector containing data values associated voxel ROI. length vector match number rows coords matrix.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ROIVolWindow-class.html","id":"validity","dir":"Reference","previous_headings":"","what":"Validity","title":"ROIVolWindow — ROIVolWindow-class","text":"object class ROIVolWindow considered valid : - coords slot matrix 3 columns. - .Data slot numeric vector. - length .Data vector equal number rows coords matrix.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVec-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SparseNeuroVec — SparseNeuroVec-class","title":"SparseNeuroVec — SparseNeuroVec-class","text":"class representing sparse four-dimensional brain image, backed matrix, column represents non-zero vector spanning fourth dimension (e.g., time) defined volumetric mask. SparseNeuroVec objects store data compressed format, providing efficient storage access sparse brain images. class inherits NeuroVec, AbstractSparseNeuroVec, implements ArrayLike4D interface. Constructs SparseNeuroVec object efficient representation manipulation sparse neuroimaging data many zero missing values.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVec-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SparseNeuroVec — SparseNeuroVec-class","text":"","code":"SparseNeuroVec(data, space, mask)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVec-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SparseNeuroVec — SparseNeuroVec-class","text":"data matrix 4-D array containing neuroimaging data. dimensions data consistent dimensions provided NeuroSpace object mask. space NeuroSpace object representing dimensions voxel spacing neuroimaging data. mask 3D array, 1D vector type logical, instance type LogicalNeuroVol, specifies locations non-zero values data.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVec-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SparseNeuroVec — SparseNeuroVec-class","text":"SparseNeuroVec object, containing sparse neuroimaging data, mask, associated NeuroSpace information.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVec-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"SparseNeuroVec — SparseNeuroVec-class","text":"data matrix series, rows span across voxel space columns span fourth dimension. column represents non-zero vector 4D space, matrix stores non-zero values save memory.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVec-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SparseNeuroVec — SparseNeuroVec-class","text":"","code":"bspace <- NeuroSpace(c(10,10,10,100), c(1,1,1)) mask <- array(rnorm(10*10*10) > .5, c(10,10,10)) mat <- matrix(rnorm(sum(mask)), 100, sum(mask)) svec <- SparseNeuroVec(mat, bspace, mask) length(indices(svec)) == sum(mask) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVec-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"[[ — [[,LatentNeuroVec,numeric-method","title":"[[ — [[,LatentNeuroVec,numeric-method","text":"[[ [[","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVec-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"[[ — [[,LatentNeuroVec,numeric-method","text":"","code":"# S4 method for LatentNeuroVec,numeric [[(x, i)  # S4 method for SparseNeuroVec,numeric [[(x, i)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVec-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"[[ — [[,LatentNeuroVec,numeric-method","text":"x object volume index","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVecSource-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SparseNeuroVecSource — SparseNeuroVecSource-class","title":"SparseNeuroVecSource — SparseNeuroVecSource-class","text":"class used produce SparseNeuroVec instance constructs SparseNeuroVecSource object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVecSource-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SparseNeuroVecSource — SparseNeuroVecSource-class","text":"","code":"SparseNeuroVecSource(meta_info, indices = NULL, mask)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVecSource-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SparseNeuroVecSource — SparseNeuroVecSource-class","text":"meta_info object class MetaInfo indices optional vector 1D indices subset volumes load mask logical 3D array,  logical 1D vector LogicalNeuroVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVecSource-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"SparseNeuroVecSource — SparseNeuroVecSource-class","text":"mask subset voxels stored memory","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVol-array.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SparseNeuroVol to array — SparseNeuroVol,array","title":"Convert SparseNeuroVol to array — SparseNeuroVol,array","text":"function converts SparseNeuroVol object array object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVol-array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SparseNeuroVol to array — SparseNeuroVol,array","text":"SparseNeuroVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVol-array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert SparseNeuroVol to array — SparseNeuroVol,array","text":"array object resulting conversion.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVol-class.html","id":null,"dir":"Reference","previous_headings":"","what":"SparseNeuroVol — SparseNeuroVol-class","title":"SparseNeuroVol — SparseNeuroVol-class","text":"S4 class represents three-dimensional brain image, stored using sparse data representation, backed sparseVector Matrix package. Sparse representations beneficial storing processing large brain images high proportion zero missing values. Construct SparseNeuroVol instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVol-class.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SparseNeuroVol — SparseNeuroVol-class","text":"","code":"SparseNeuroVol(data, space, indices = NULL, label = \"\")"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVol-class.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SparseNeuroVol — SparseNeuroVol-class","text":"data numeric vector space instance class NeuroSpace indices index vector indicating 1-d coordinates data values label character string","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVol-class.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SparseNeuroVol — SparseNeuroVol-class","text":"SparseNeuroVol instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVol-class.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"SparseNeuroVol — SparseNeuroVol-class","text":"Image data backed Matrix::sparseVector.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVol-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"SparseNeuroVol — SparseNeuroVol-class","text":"data sparseVector instance Matrix package, stores image volume data sparse format.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVol-class.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SparseNeuroVol — SparseNeuroVol-class","text":"","code":"data <- 1:10 indices <- seq(1,1000, length.out=10) bspace <- NeuroSpace(c(64,64,64), spacing=c(1,1,1)) sparsevol <- SparseNeuroVol(data,bspace,indices=indices) densevol <- NeuroVol(data,bspace,indices=indices) sum(sparsevol) == sum(densevol) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVol-numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SparseNeuroVol to numeric — SparseNeuroVol,numeric","title":"Convert SparseNeuroVol to numeric — SparseNeuroVol,numeric","text":"function converts SparseNeuroVol object numeric object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVol-numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SparseNeuroVol to numeric — SparseNeuroVol,numeric","text":"SparseNeuroVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/SparseNeuroVol-numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert SparseNeuroVol to numeric — SparseNeuroVol,numeric","text":"numeric object resulting conversion.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Summary-SparseNeuroVec-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of SparseNeuroVec — Summary,SparseNeuroVec-method","title":"Summary of SparseNeuroVec — Summary,SparseNeuroVec-method","text":"function computes summary SparseNeuroVec object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Summary-SparseNeuroVec-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of SparseNeuroVec — Summary,SparseNeuroVec-method","text":"","code":"# S4 method for SparseNeuroVec Summary(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Summary-SparseNeuroVec-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of SparseNeuroVec — Summary,SparseNeuroVec-method","text":"x SparseNeuroVec object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Summary-SparseNeuroVec-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of SparseNeuroVec — Summary,SparseNeuroVec-method","text":"summary input SparseNeuroVec object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Summary-SparseNeuroVol-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary of SparseNeuroVol — Summary,SparseNeuroVol-method","title":"Summary of SparseNeuroVol — Summary,SparseNeuroVol-method","text":"function computes summary SparseNeuroVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Summary-SparseNeuroVol-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary of SparseNeuroVol — Summary,SparseNeuroVol-method","text":"","code":"# S4 method for SparseNeuroVol Summary(x, ..., na.rm = FALSE)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Summary-SparseNeuroVol-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary of SparseNeuroVol — Summary,SparseNeuroVol-method","text":"x SparseNeuroVol object. ... Additional arguments (currently ignored). na.rm logical value indicating whether NA values removed computation.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/Summary-SparseNeuroVol-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary of SparseNeuroVol — Summary,SparseNeuroVol-method","text":"summary input SparseNeuroVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/add_dim-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a Dimension to an Object — add_dim","title":"Add a Dimension to an Object — add_dim","text":"function adds new dimension given object, matrix array.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/add_dim-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a Dimension to an Object — add_dim","text":"","code":"add_dim(x, n)  # S4 method for NeuroSpace,numeric add_dim(x, n)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/add_dim-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a Dimension to an Object — add_dim","text":"x dimensioned object, matrix, array, NeuroSpace object. n integer representing size dimension add.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/add_dim-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a Dimension to an Object — add_dim","text":"updated dimensioned object new dimension added.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/add_dim-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a Dimension to an Object — add_dim","text":"","code":"# Create a NeuroSpace object x <- NeuroSpace(c(10, 10, 10), c(1, 1, 1))  # Add a new dimension with size 10 x1 <- add_dim(x, 10)  # Check the new dimension ndim(x1) == 4 #> [1] TRUE dim(x1)[4] == 10 #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as-DenseNeuroVol-array.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert DenseNeuroVol to array — as,DenseNeuroVol,array","title":"Convert DenseNeuroVol to array — as,DenseNeuroVol,array","text":"function converts DenseNeuroVol object array.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as-DenseNeuroVol-array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert DenseNeuroVol to array — as,DenseNeuroVol,array","text":"DenseNeuroVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as-DenseNeuroVol-array.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert DenseNeuroVol to array — as,DenseNeuroVol,array","text":"array resulting conversion.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.dense-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Coerce ROIVol to DenseNeuroVol using as.dense method — as.dense,ClusteredNeuroVol-method","title":"Coerce ROIVol to DenseNeuroVol using as.dense method — as.dense,ClusteredNeuroVol-method","text":"function provides method coerce object class ROIVol DenseNeuroVol using .dense method.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.dense-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coerce ROIVol to DenseNeuroVol using as.dense method — as.dense,ClusteredNeuroVol-method","text":"","code":"# S4 method for ClusteredNeuroVol as.dense(x)  # S4 method for ROIVol as.dense(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.dense-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coerce ROIVol to DenseNeuroVol using as.dense method — as.dense,ClusteredNeuroVol-method","text":"x object class ROIVol coerced DenseNeuroVol.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.dense-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coerce ROIVol to DenseNeuroVol using as.dense method — as.dense,ClusteredNeuroVol-method","text":"DenseNeuroVol object obtained coercing ROIVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.dense.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to dense representation — as.dense","title":"Convert to dense representation — as.dense","text":"Convert dense representation","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.dense.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to dense representation — as.dense","text":"","code":"as.dense(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.dense.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to dense representation — as.dense","text":"x object densify","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.html","id":null,"dir":"Reference","previous_headings":"","what":"conversion from NeuroVol to LogicalNeuroVol — as","title":"conversion from NeuroVol to LogicalNeuroVol — as","text":"function provides method coerce object class ROIVec matrix. function provides method coerce object class ROIVol DenseNeuroVol.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"conversion from NeuroVol to LogicalNeuroVol — as","text":"object class ROIVol coerced DenseNeuroVol.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"conversion from NeuroVol to LogicalNeuroVol — as","text":"matrix obtained coercing ROIVec object. DenseNeuroVol object obtained coercing ROIVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.list-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"as.list — as.list,FileBackedNeuroVec-method","title":"as.list — as.list,FileBackedNeuroVec-method","text":"convert FileBackedNeuroVec list DenseNeuroVol objects. convert SparseNeuroVec list DenseNeuroVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.list-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as.list — as.list,FileBackedNeuroVec-method","text":"","code":"# S4 method for FileBackedNeuroVec as.list(x)  # S4 method for NeuroVec as.list(x)  # S4 method for SparseNeuroVec as.list(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.list-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as.list — as.list,FileBackedNeuroVec-method","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.logical-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"as.logical — as.logical,NeuroVol-method","title":"as.logical — as.logical,NeuroVol-method","text":"Convert NeuroVol LogicalNeuroVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.logical-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"as.logical — as.logical,NeuroVol-method","text":"","code":"# S4 method for NeuroVol as.logical(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.logical-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"as.logical — as.logical,NeuroVol-method","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.logical-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"as.logical — as.logical,NeuroVol-method","text":"instance LogicalNeuroVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.logical-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"as.logical — as.logical,NeuroVol-method","text":"image values converted using R base function .logical wrapped LogicalNeuroVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.mask-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert NeuroVol to a mask — as.mask,NeuroVol,missing-method","title":"Convert NeuroVol to a mask — as.mask,NeuroVol,missing-method","text":"method converts NeuroVol object mask setting positive values TRUE non-positive values FALSE. method converts NeuroVol object mask setting specified indices TRUE remaining elements FALSE.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.mask-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert NeuroVol to a mask — as.mask,NeuroVol,missing-method","text":"","code":"# S4 method for NeuroVol,missing as.mask(x)  # S4 method for NeuroVol,numeric as.mask(x, indices)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.mask-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert NeuroVol to a mask — as.mask,NeuroVol,missing-method","text":"x NeuroVol object convert mask. indices numeric vector containing indices input NeuroVol set TRUE resulting mask.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.mask-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert NeuroVol to a mask — as.mask,NeuroVol,missing-method","text":"LogicalNeuroVol object representing mask created input NeuroVol. LogicalNeuroVol object representing mask created input NeuroVol specified indices.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to a LogicalNeuroVol — as.mask","title":"Convert to a LogicalNeuroVol — as.mask","text":"Convert LogicalNeuroVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to a LogicalNeuroVol — as.mask","text":"","code":"as.mask(x, indices)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to a LogicalNeuroVol — as.mask","text":"x object binarize indices indices set TRUE","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.matrix-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"convert a NeuroVec to a matrix — as.matrix,FileBackedNeuroVec-method","title":"convert a NeuroVec to a matrix — as.matrix,FileBackedNeuroVec-method","text":"convert SparseNeuroVec matrix","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.matrix-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert a NeuroVec to a matrix — as.matrix,FileBackedNeuroVec-method","text":"","code":"# S4 method for FileBackedNeuroVec as.matrix(x)  # S4 method for NeuroVec as.matrix(x)  # S4 method for ROIVec as.matrix(x)  # S4 method for SparseNeuroVec as.matrix(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.matrix-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert a NeuroVec to a matrix — as.matrix,FileBackedNeuroVec-method","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.numeric-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SparseNeuroVol to numeric — as.numeric,SparseNeuroVol-method","title":"Convert SparseNeuroVol to numeric — as.numeric,SparseNeuroVol-method","text":"Convert SparseNeuroVol numeric","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.numeric-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SparseNeuroVol to numeric — as.numeric,SparseNeuroVol-method","text":"","code":"# S4 method for SparseNeuroVol as.numeric(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.numeric-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert SparseNeuroVol to numeric — as.numeric,SparseNeuroVol-method","text":"x object convert","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.sparse-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert DenseNeuroVec to sparse representation using mask — as.sparse,DenseNeuroVec,LogicalNeuroVol-method","title":"Convert DenseNeuroVec to sparse representation using mask — as.sparse,DenseNeuroVec,LogicalNeuroVol-method","text":"method converts DenseNeuroVec object sparse representation using given LogicalNeuroVol mask. method converts DenseNeuroVec object sparse representation using given numeric mask.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.sparse-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert DenseNeuroVec to sparse representation using mask — as.sparse,DenseNeuroVec,LogicalNeuroVol-method","text":"","code":"# S4 method for DenseNeuroVec,LogicalNeuroVol as.sparse(x, mask)  # S4 method for DenseNeuroVec,numeric as.sparse(x, mask)  # S4 method for DenseNeuroVol,LogicalNeuroVol as.sparse(x, mask)  # S4 method for DenseNeuroVol,numeric as.sparse(x, mask)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.sparse-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert DenseNeuroVec to sparse representation using mask — as.sparse,DenseNeuroVec,LogicalNeuroVol-method","text":"x DenseNeuroVec object convert sparse representation. mask numeric vector representing mask apply conversion.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.sparse-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert DenseNeuroVec to sparse representation using mask — as.sparse,DenseNeuroVec,LogicalNeuroVol-method","text":"SparseNeuroVec object resulting conversion. SparseNeuroVec object resulting conversion.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.sparse.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert to from dense to sparse representation — as.sparse","title":"Convert to from dense to sparse representation — as.sparse","text":"Convert dense sparse representation","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.sparse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert to from dense to sparse representation — as.sparse","text":"","code":"as.sparse(x, mask, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.sparse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert to from dense to sparse representation — as.sparse","text":"x object make sparse, e.g. DenseNeuroVol DenseNeuroVec mask elements retain ... additional arguments","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.sparse.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Convert to from dense to sparse representation — as.sparse","text":"mask can integer vector 1D indices mask volume class LogicalNeuroVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/as.sparse.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert to from dense to sparse representation — as.sparse","text":"","code":"bvol <- NeuroVol(array(runif(24*24*24), c(24,24,24)), NeuroSpace(c(24,24,24), c(1,1,1))) indmask <- sort(sample(1:(24*24*24), 100)) svol <- as.sparse(bvol, indmask)   mask <- LogicalNeuroVol(runif(length(indmask)), space=space(bvol), indices=indmask) sum(mask) == 100 #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/axes-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Image Axes — axes","title":"Extract Image Axes — axes","text":"Extract Image Axes","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/axes-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Image Axes — axes","text":"","code":"axes(x)  # S4 method for NeuroSpace axes(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/axes-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Image Axes — axes","text":"x object set axes","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/axes-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Image Axes — axes","text":"`axes` associated object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/axes-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Image Axes — axes","text":"","code":"x <- NeuroSpace(c(10,10,10), spacing=c(1,1,1)) class(axes(x)) == \"AxisSet3D\" #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/bootstrap_searchlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a spherical searchlight iterator that samples regions from within a mask — bootstrap_searchlight","title":"Create a spherical searchlight iterator that samples regions from within a mask — bootstrap_searchlight","text":"function generates spherical searchlight iterator sampling regions within brain mask. creates searchlight spheres around random center voxels, allowing surround voxel belong multiple searchlight samples.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/bootstrap_searchlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a spherical searchlight iterator that samples regions from within a mask — bootstrap_searchlight","text":"","code":"bootstrap_searchlight(mask, radius = 8, iter = 100)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/bootstrap_searchlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a spherical searchlight iterator that samples regions from within a mask — bootstrap_searchlight","text":"mask NeuroVol object representing brain mask. radius numeric value specifying radius searchlight sphere voxel units (default 8). iter integer specifying total number searchlights sample (default 100).","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/bootstrap_searchlight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a spherical searchlight iterator that samples regions from within a mask — bootstrap_searchlight","text":"deferred_list object containing ROIVolWindow objects,         representing spherical searchlight region sampled within mask.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/bootstrap_searchlight.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a spherical searchlight iterator that samples regions from within a mask — bootstrap_searchlight","text":"Searchlight centers sampled without replacement, surround voxel can belong multiple searchlight samples.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/bootstrap_searchlight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a spherical searchlight iterator that samples regions from within a mask — bootstrap_searchlight","text":"","code":"# Load an example brain mask mask <- read_vol(system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\"))  # Generate a bootstrap searchlight iterator with a radius of 6 voxels if (FALSE) { searchlights <- bootstrap_searchlight(mask, radius = 6) }"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/bounds-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Spatial Bounds of an Image — bounds","title":"Extract Spatial Bounds of an Image — bounds","text":"function extracts spatial bounds (origin + dim * spacing) image represented input object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/bounds-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Spatial Bounds of an Image — bounds","text":"","code":"bounds(x)  # S4 method for NeuroSpace bounds(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/bounds-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Spatial Bounds of an Image — bounds","text":"x object `bounds` property, typically image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/bounds-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Spatial Bounds of an Image — bounds","text":"matrix row contains min (column 1) max (column 2) bounds image dimension 1 `ndim(image)`.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/bounds-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Spatial Bounds of an Image — bounds","text":"","code":"bspace <- NeuroSpace(c(10, 10, 10), c(2, 2, 2)) b <- bounds(bspace) nrow(b) == ndim(bspace) #> [1] TRUE ncol(b) == 2 #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/centroid-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"return the centroid of an object — centroid","title":"return the centroid of an object — centroid","text":"return centroid object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/centroid-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return the centroid of an object — centroid","text":"","code":"centroid(x, ...)  # S4 method for NeuroSpace centroid(x)  # S4 method for ROICoords centroid(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/centroid-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"return the centroid of an object — centroid","text":"x object centroid ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/centroid-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"return the centroid of an object — centroid","text":"centroid object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/centroid-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"return the centroid of an object — centroid","text":"","code":"bspace <- NeuroSpace(c(10,10,10), c(2,2,2)) centroid(bspace) #> [1] 10 10 10"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/centroids-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a matrix of centroids of an object — centroids","title":"Return a matrix of centroids of an object — centroids","text":"Return matrix centroids object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/centroids-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a matrix of centroids of an object — centroids","text":"","code":"centroids(x, ...)  # S4 method for ClusteredNeuroVol centroids(x, type = c(\"center_of_mass\", \"medoid\"))"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/centroids-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a matrix of centroids of an object — centroids","text":"x object multiple centroids (e.g. ClusteredNeuroVol) ... extra args type type center mass: one \"center_of_mass\" \"medoid\"","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/close-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"close — close,BinaryReader-method","title":"close — close,BinaryReader-method","text":"close","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/close-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"close — close,BinaryReader-method","text":"","code":"# S4 method for BinaryReader close(con)  # S4 method for BinaryWriter close(con)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/close-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"close — close,BinaryReader-method","text":"con object close","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/concat-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Concatenate two objects in the time dimension — concat","title":"Concatenate two objects in the time dimension — concat","text":"Concatenate two objects time dimension","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/concat-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concatenate two objects in the time dimension — concat","text":"","code":"concat(x, y, ...)  # S4 method for LatentNeuroVec,LatentNeuroVec concat(x, y, ...)  # S4 method for NeuroVec,NeuroVol concat(x, y, ...)  # S4 method for NeuroVol,NeuroVec concat(x, y, ...)  # S4 method for NeuroVec,NeuroVec concat(x, y, ...)  # S4 method for ROIVec,ROIVec concat(x, y, ...)  # S4 method for DenseNeuroVol,missing concat(x, y, ...)  # S4 method for DenseNeuroVol,DenseNeuroVol concat(x, y, ...)  # S4 method for AbstractSparseNeuroVec,missing concat(x, y, ...)  # S4 method for SparseNeuroVec,SparseNeuroVec concat(x, y, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/concat-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concatenate two objects in the time dimension — concat","text":"x first object, typically NeuroVol NeuroVec y second object, typically NeuroVol NeuroVec ... additional objects","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/concat-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concatenate two objects in the time dimension — concat","text":"temporally concatenated object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/concat-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Concatenate two objects in the time dimension — concat","text":"x y images must compatible dimensions. NeuroVol can concatenated NeuroVec, vice versa. See examples.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/concat-methods.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Concatenate two objects in the time dimension — concat","text":"dimensions x y must equal","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/concat-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concatenate two objects in the time dimension — concat","text":"","code":"bv1 <- NeuroVol(rep(1,1000), NeuroSpace(c(10,10,10), c(1,1,1))) bv2 <- NeuroVol(rep(2,1000), NeuroSpace(c(10,10,10), c(1,1,1))) bv3 <- concat(bv1,bv2) inherits(bv3, \"NeuroVec\") #> [1] TRUE  bv4 <- concat(bv3, bv1) dim(bv4)[4] == 3 #> [1] TRUE bv5 <- concat(bv1, bv3) dim(bv4)[4] == 3 #> [1] TRUE  bv6 <- concat(bv4,bv5) dim(bv6)[4] == 6 #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/conn_comp-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Connected components — conn_comp","title":"Connected components — conn_comp","text":"Find connected components image","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/conn_comp-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connected components — conn_comp","text":"","code":"conn_comp(x, ...)  # S4 method for NeuroVol conn_comp(   x,   threshold = 0,   cluster_table = TRUE,   local_maxima = TRUE,   local_maxima_dist = 15,   ... )"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/conn_comp-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connected components — conn_comp","text":"x image object ... additional arguments threshold threshold defining lower intensity bound image mask cluster_table return cluster_table local_maxima return table local maxima local_maxima_dist distance used define minum distance local maxima","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/conn_comp_3D.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract connected components from a 3D mask — conn_comp_3D","title":"Extract connected components from a 3D mask — conn_comp_3D","text":"Extract connected components 3D mask","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/conn_comp_3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract connected components from a 3D mask — conn_comp_3D","text":"","code":"conn_comp_3D(mask, connect = c(\"26-connect\", \"18-connect\", \"6-connect\"))"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/conn_comp_3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract connected components from a 3D mask — conn_comp_3D","text":"mask 3D binary array connect connectiivty constraint: \"6-connect\", \"18-connect\", \"26-connect\"","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/conn_comp_3D.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract connected components from a 3D mask — conn_comp_3D","text":"two-element list connected components (cluster index cluster size) first element index 3D array containing cluster index connected component voxel. second element size 3D array consisting size connected component inhabited voxel. two-element list connected components (cluster index cluster size) first element index 3D array containing cluster index connected component voxel. second element size 3D array consisting size connected component inhabited voxel.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/conn_comp_3D.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract connected components from a 3D mask — conn_comp_3D","text":"","code":"dat <- array(as.logical(rnorm(10*10*10)>.5), c(10, 10, 10)) res1 <- conn_comp_3D(dat, connect=\"6-connect\") res2 <- conn_comp_3D(dat, connect=\"18-connect\") res3 <- conn_comp_3D(dat, connect=\"26-connect\")"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coord_to_grid-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"convert n-dimensional real world coordinates to grid coordinates — coord_to_grid","title":"convert n-dimensional real world coordinates to grid coordinates — coord_to_grid","text":"convert n-dimensional real world coordinates grid coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coord_to_grid-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert n-dimensional real world coordinates to grid coordinates — coord_to_grid","text":"","code":"coord_to_grid(x, coords)  # S4 method for NeuroSpace,matrix coord_to_grid(x, coords)  # S4 method for NeuroSpace,numeric coord_to_grid(x, coords)  # S4 method for NeuroVol,matrix coord_to_grid(x, coords)  # S4 method for NeuroVol,numeric coord_to_grid(x, coords)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coord_to_grid-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert n-dimensional real world coordinates to grid coordinates — coord_to_grid","text":"x object coords matrix real world coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coord_to_grid-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert n-dimensional real world coordinates to grid coordinates — coord_to_grid","text":"matrix grid coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coord_to_index-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"convert n-dimensional real world coordinates to 1D indices — coord_to_index","title":"convert n-dimensional real world coordinates to 1D indices — coord_to_index","text":"convert n-dimensional real world coordinates 1D indices","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coord_to_index-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert n-dimensional real world coordinates to 1D indices — coord_to_index","text":"","code":"coord_to_index(x, coords)  # S4 method for NeuroSpace,matrix coord_to_index(x, coords)  # S4 method for NeuroSpace,numeric coord_to_index(x, coords)  # S4 method for NeuroVol,matrix coord_to_index(x, coords)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coord_to_index-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert n-dimensional real world coordinates to 1D indices — coord_to_index","text":"x object coords matrix real world coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coord_to_index-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert n-dimensional real world coordinates to 1D indices — coord_to_index","text":"vector indices","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coords-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract coordinates from an IndexLookupVol object — coords,IndexLookupVol-method","title":"Extract coordinates from an IndexLookupVol object — coords,IndexLookupVol-method","text":"method extracts coordinates IndexLookupVol object based given index.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coords-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract coordinates from an IndexLookupVol object — coords,IndexLookupVol-method","text":"","code":"# S4 method for IndexLookupVol coords(x, i)  # S4 method for ROICoords coords(x, real = FALSE)  # S4 method for AbstractSparseNeuroVec coords(x, i)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coords-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract coordinates from an IndexLookupVol object — coords,IndexLookupVol-method","text":"x IndexLookupVol object extract coordinates . index lookup volume. real TRUE, return coordinates real world units","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coords-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract coordinates from an IndexLookupVol object — coords,IndexLookupVol-method","text":"extracted coordinates corresponding provided index. index found, returns NA.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract coordinates from an object — coords","title":"Extract coordinates from an object — coords","text":"function extracts coordinates input object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract coordinates from an object — coords","text":"","code":"coords(x, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract coordinates from an object — coords","text":"x object extract coordinates . ... Additional arguments (used generic function).","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract coordinates from an object — coords","text":"extracted coordinates.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/cuboid_roi.html","id":null,"dir":"Reference","previous_headings":"","what":"Create A Cuboid Region of Interest — cuboid_roi","title":"Create A Cuboid Region of Interest — cuboid_roi","text":"Create Cuboid Region Interest","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/cuboid_roi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create A Cuboid Region of Interest — cuboid_roi","text":"","code":"cuboid_roi(bvol, centroid, surround, fill = NULL, nonzero = FALSE)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/cuboid_roi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create A Cuboid Region of Interest — cuboid_roi","text":"bvol NeuroVol NeuroSpace instance centroid center cube voxel coordinates surround number voxels either side central voxel. vector length 3. fill optional value(s) assign data slot. nonzero keep nonzero elements bvol. bvol NeuroSpace argument ignored.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/cuboid_roi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create A Cuboid Region of Interest — cuboid_roi","text":"instance class ROIVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/cuboid_roi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create A Cuboid Region of Interest — cuboid_roi","text":"","code":"sp1 <- NeuroSpace(c(10,10,10), c(1,1,1))  cube <- cuboid_roi(sp1, c(5,5,5), 3)  vox <- coords(cube)  cube2 <- cuboid_roi(sp1, c(5,5,5), 3, fill=5)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/data_file-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to get the name of the data file, given a file name and a FileFormat instance. — data_file","title":"Generic function to get the name of the data file, given a file name and a FileFormat instance. — data_file","text":"Generic function get name data file, given file name FileFormat instance.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/data_file-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to get the name of the data file, given a file name and a FileFormat instance. — data_file","text":"","code":"data_file(x, file_name)  # S4 method for FileFormat,character data_file(x, file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/data_file-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to get the name of the data file, given a file name and a FileFormat instance. — data_file","text":"x descriptor instance file_name file name stripped extension","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/data_file-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to get the name of the data file, given a file name and a FileFormat instance. — data_file","text":"correct header name","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/data_file_matches-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to test whether a file name conforms to the given a FileFormat instance.\nWill test for match to data file only — data_file_matches","title":"Generic function to test whether a file name conforms to the given a FileFormat instance.\nWill test for match to data file only — data_file_matches","text":"Generic function test whether file name conforms given FileFormat instance. test match data file ","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/data_file_matches-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to test whether a file name conforms to the given a FileFormat instance.\nWill test for match to data file only — data_file_matches","text":"","code":"data_file_matches(x, file_name)  # S4 method for FileFormat,character data_file_matches(x, file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/data_file_matches-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to test whether a file name conforms to the given a FileFormat instance.\nWill test for match to data file only — data_file_matches","text":"x object file name matched file_name file name matched","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/data_file_matches-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to test whether a file name conforms to the given a FileFormat instance.\nWill test for match to data file only — data_file_matches","text":"TRUE match, FALSE otherwise","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/data_reader-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to create data reader — data_reader","title":"Generic function to create data reader — data_reader","text":"Generic function create data reader","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/data_reader-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to create data reader — data_reader","text":"","code":"data_reader(x, offset)  # S4 method for NIFTIMetaInfo data_reader(x, offset = 0)  # S4 method for AFNIMetaInfo data_reader(x, offset = 0)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/data_reader-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to create data reader — data_reader","text":"x object specifying infromation required produce reader offset byte offset (number bytes skip reading)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/deferred_list.html","id":null,"dir":"Reference","previous_headings":"","what":"deferred_list — deferred_list","title":"deferred_list — deferred_list","text":"deferred_list","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/deferred_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deferred_list — deferred_list","text":"","code":"deferred_list(fs)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/deferred_list2.html","id":null,"dir":"Reference","previous_headings":"","what":"deferred_list2 — deferred_list2","title":"deferred_list2 — deferred_list2","text":"deferred_list2","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/deferred_list2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deferred_list2 — deferred_list2","text":"","code":"deferred_list2(f, len = 1)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim-FileMetaInfo-method.html","id":null,"dir":"Reference","previous_headings":"","what":"dim of FileMetaInfo — dim,FileMetaInfo-method","title":"dim of FileMetaInfo — dim,FileMetaInfo-method","text":"dim FileMetaInfo","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim-FileMetaInfo-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dim of FileMetaInfo — dim,FileMetaInfo-method","text":"","code":"# S4 method for FileMetaInfo dim(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim-FileMetaInfo-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dim of FileMetaInfo — dim,FileMetaInfo-method","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim-NeuroSpace-method.html","id":null,"dir":"Reference","previous_headings":"","what":"dim — dim,NeuroSpace-method","title":"dim — dim,NeuroSpace-method","text":"dim","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim-NeuroSpace-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dim — dim,NeuroSpace-method","text":"","code":"# S4 method for NeuroSpace dim(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim-NeuroSpace-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dim — dim,NeuroSpace-method","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"dim of NeuroObj object — dim,NeuroObj-method","title":"dim of NeuroObj object — dim,NeuroObj-method","text":"dim NeuroObj object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"dim of NeuroObj object — dim,NeuroObj-method","text":"","code":"# S4 method for NeuroObj dim(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"dim of NeuroObj object — dim,NeuroObj-method","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim_of-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the length of a given dimension of an object — dim_of","title":"Get the length of a given dimension of an object — dim_of","text":"function returns length given axis (dimension) object. axis can specified using position name.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim_of-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the length of a given dimension of an object — dim_of","text":"","code":"dim_of(x, axis)  # S4 method for NeuroSpace,NamedAxis dim_of(x, axis)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim_of-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the length of a given dimension of an object — dim_of","text":"x object whose axis query axis integer character string indicating axis query","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim_of-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the length of a given dimension of an object — dim_of","text":"integer representing length specified axis.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/dim_of-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get the length of a given dimension of an object — dim_of","text":"","code":"x <- NeuroSpace(c(10,10,10), spacing=c(1,1,1)) stopifnot(dim_of(x, x@axes@i) == 10)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/drop-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"drop — drop,NeuroVec-method","title":"drop — drop,NeuroVec-method","text":"drop","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/drop-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"drop — drop,NeuroVec-method","text":"","code":"# S4 method for NeuroVec drop(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/drop-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"drop — drop,NeuroVec-method","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/drop_dim-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Drop a Dimension from an Object — drop_dim","title":"Drop a Dimension from an Object — drop_dim","text":"function removes specified dimension given object, matrix array.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/drop_dim-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Drop a Dimension from an Object — drop_dim","text":"","code":"drop_dim(x, dimnum)  # S4 method for AxisSet2D,numeric drop_dim(x, dimnum)  # S4 method for AxisSet2D,missing drop_dim(x, dimnum)  # S4 method for AxisSet3D,numeric drop_dim(x, dimnum)  # S4 method for AxisSet3D,missing drop_dim(x, dimnum)  # S4 method for NeuroSpace,numeric drop_dim(x, dimnum)  # S4 method for NeuroSpace,missing drop_dim(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/drop_dim-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Drop a Dimension from an Object — drop_dim","text":"x dimensioned object, NeuroSpace object. dimnum integer representing index dimension drop.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/drop_dim-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Drop a Dimension from an Object — drop_dim","text":"updated dimensioned object specified dimension removed.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/drop_dim-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Drop a Dimension from an Object — drop_dim","text":"","code":"# Create a NeuroSpace object with dimensions (10, 10, 10) x <- NeuroSpace(c(10, 10, 10), c(1, 1, 1))  # Drop the first dimension x1 <- drop_dim(x, 1)  # Check the new dimensions ndim(x1) == 2 #> [1] TRUE dim(x1)[1] == 10 #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/embed_kernel-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to position kernel in a postion in image space — embed_kernel","title":"Generic function to position kernel in a postion in image space — embed_kernel","text":"Generic function position kernel postion image space","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/embed_kernel-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to position kernel in a postion in image space — embed_kernel","text":"","code":"embed_kernel(x, sp, center_voxel, ...)  # S4 method for Kernel,NeuroSpace,numeric embed_kernel(x, sp, center_voxel, weight = 1)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/embed_kernel-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to position kernel in a postion in image space — embed_kernel","text":"x kernel object sp space embed kernel center_voxel voxel marking center kernel embedded space ... extra args weight multiply kernel weights value","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/extractor3d.html","id":null,"dir":"Reference","previous_headings":"","what":"Array-like access for 3-dimensional data structures — extractor3d","title":"Array-like access for 3-dimensional data structures — extractor3d","text":"Array-like access 3-dimensional data structures","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/extractor3d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Array-like access for 3-dimensional data structures — extractor3d","text":"","code":"# S4 method for ArrayLike3D,numeric,missing,ANY [(x, i, j, k, ..., drop = TRUE)  # S4 method for ArrayLike3D,matrix,missing,ANY [(x, i, j, k, ..., drop = TRUE)  # S4 method for ArrayLike3D,missing,missing,ANY [(x, i, j, k, ..., drop = TRUE)  # S4 method for ArrayLike3D,missing,numeric,ANY [(x, i, j, k, ..., drop = TRUE)  # S4 method for NeuroVol,ROICoords,missing,ANY [(x, i, j, k, ..., drop = TRUE)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/extractor3d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Array-like access for 3-dimensional data structures — extractor3d","text":"x object first index j second index k third index ... additional args drop dimension","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/extractor4d.html","id":null,"dir":"Reference","previous_headings":"","what":"Array-like access for 4-dimensional data structures — extractor4d","title":"Array-like access for 4-dimensional data structures — extractor4d","text":"Array-like access 4-dimensional data structures","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/extractor4d.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Array-like access for 4-dimensional data structures — extractor4d","text":"","code":"# S4 method for ArrayLike4D,matrix,missing,ANY [(x, i, j, k, m, ..., drop = TRUE)  # S4 method for ArrayLike4D,numeric,numeric,ANY [(x, i, j, k, m, ..., drop = TRUE)  # S4 method for ArrayLike4D,numeric,missing,ANY [(x, i, j, k, m, ..., drop = TRUE)  # S4 method for ArrayLike4D,missing,missing,ANY [(x, i, j, k, m, ..., drop = TRUE)  # S4 method for ArrayLike4D,missing,numeric,ANY [(x, i, j, k, m, ..., drop = TRUE)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/extractor4d.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Array-like access for 4-dimensional data structures — extractor4d","text":"x object first index j second index k third index m fourth index ... additional args drop dimension","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/file_matches-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to test whether a file name conforms to the given FileFormat instance.\nWill test for match to either header file or data file — file_matches","title":"Generic function to test whether a file name conforms to the given FileFormat instance.\nWill test for match to either header file or data file — file_matches","text":"Generic function test whether file name conforms given FileFormat instance. test match either header file data file","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/file_matches-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to test whether a file name conforms to the given FileFormat instance.\nWill test for match to either header file or data file — file_matches","text":"","code":"file_matches(x, file_name)  # S4 method for FileFormat,character file_matches(x, file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/file_matches-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to test whether a file name conforms to the given FileFormat instance.\nWill test for match to either header file or data file — file_matches","text":"x object file name matched file_name file name matched","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/file_matches-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to test whether a file name conforms to the given FileFormat instance.\nWill test for match to either header file or data file — file_matches","text":"TRUE match, FALSE otherwise","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/gaussian_blur.html","id":null,"dir":"Reference","previous_headings":"","what":"Blur a volumetric image with an isotropic discrete Gaussian kernel — gaussian_blur","title":"Blur a volumetric image with an isotropic discrete Gaussian kernel — gaussian_blur","text":"function smooths volumetric image (3D brain MRI data) applying isotropic discrete Gaussian kernel. blurring performed within specified image mask, kernel's standard deviation window size can customized.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/gaussian_blur.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Blur a volumetric image with an isotropic discrete Gaussian kernel — gaussian_blur","text":"","code":"gaussian_blur(vol, mask, sigma = 2, window = 1)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/gaussian_blur.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Blur a volumetric image with an isotropic discrete Gaussian kernel — gaussian_blur","text":"vol NeuroVol object representing image volume smoothed. mask optional LogicalNeuroVol object representing image mask defines region blurring applied. provided, entire volume considered. sigma numeric value specifying standard deviation Gaussian kernel (default 2). window integer specifying number voxels around center voxel include side. example, window=1 3x3x3 kernel (default 1).","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/gaussian_blur.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Blur a volumetric image with an isotropic discrete Gaussian kernel — gaussian_blur","text":"smoothed image class NeuroVol.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/gaussian_blur.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Blur a volumetric image with an isotropic discrete Gaussian kernel — gaussian_blur","text":"","code":"brain_mask <- read_vol(system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\"))  # Apply Gaussian blurring to the brain volume blurred_vol <- gaussian_blur(brain_mask, brain_mask, sigma = 2, window = 1)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/grid_to_coord-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to convert N-dimensional grid coordinate coordinates to real world coordinates — grid_to_coord","title":"Generic function to convert N-dimensional grid coordinate coordinates to real world coordinates — grid_to_coord","text":"Generic function convert N-dimensional grid coordinate coordinates real world coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/grid_to_coord-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to convert N-dimensional grid coordinate coordinates to real world coordinates — grid_to_coord","text":"","code":"grid_to_coord(x, coords)  # S4 method for NeuroSpace,matrix grid_to_coord(x, coords)  # S4 method for NeuroSpace,numeric grid_to_coord(x, coords)  # S4 method for NeuroVol,matrix grid_to_coord(x, coords)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/grid_to_coord-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to convert N-dimensional grid coordinate coordinates to real world coordinates — grid_to_coord","text":"x object coords matrix grid coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/grid_to_coord-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to convert N-dimensional grid coordinate coordinates to real world coordinates — grid_to_coord","text":"matrix real coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/grid_to_grid-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to convert voxel coordinates in the reference space (LPI) to native array space. — grid_to_grid","title":"Generic function to convert voxel coordinates in the reference space (LPI) to native array space. — grid_to_grid","text":"Generic function convert voxel coordinates reference space (LPI) native array space.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/grid_to_grid-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to convert voxel coordinates in the reference space (LPI) to native array space. — grid_to_grid","text":"","code":"grid_to_grid(x, vox)  # S4 method for NeuroSpace,matrix grid_to_grid(x, vox)  # S4 method for matrix,matrix grid_to_grid(x, vox)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/grid_to_grid-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to convert voxel coordinates in the reference space (LPI) to native array space. — grid_to_grid","text":"x object vox matrix LPI voxel coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/grid_to_grid-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to convert voxel coordinates in the reference space (LPI) to native array space. — grid_to_grid","text":"matrix native voxel coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/grid_to_index-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to convert N-dimensional grid coordinate to 1D indices — grid_to_index","title":"Generic function to convert N-dimensional grid coordinate to 1D indices — grid_to_index","text":"Generic function convert N-dimensional grid coordinate 1D indices","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/grid_to_index-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to convert N-dimensional grid coordinate to 1D indices — grid_to_index","text":"","code":"grid_to_index(x, coords)  # S4 method for NeuroSlice,matrix grid_to_index(x, coords)  # S4 method for NeuroSlice,numeric grid_to_index(x, coords)  # S4 method for NeuroSpace,matrix grid_to_index(x, coords)  # S4 method for NeuroSpace,numeric grid_to_index(x, coords)  # S4 method for NeuroVol,matrix grid_to_index(x, coords)  # S4 method for NeuroVol,numeric grid_to_index(x, coords)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/grid_to_index-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to convert N-dimensional grid coordinate to 1D indices — grid_to_index","text":"x object, typically NeuroVol NeuroSpace instance. coords matrix row coordinate vector length equal ndim(x)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/grid_to_index-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to convert N-dimensional grid coordinate to 1D indices — grid_to_index","text":"vector indices","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/guided_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter a volumetric image with an edge-preserving ","title":"Filter a volumetric image with an edge-preserving ","text":"function applies guided filter volumetric image (3D brain MRI data) perform edge-preserving smoothing. guided filter edge-preserving filter smooths image preserving edges, providing balance noise reduction edge preservation.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/guided_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter a volumetric image with an edge-preserving ","text":"","code":"guided_filter(vol, radius = 4, epsilon = 0.7^2)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/guided_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter a volumetric image with an edge-preserving ","text":"vol NeuroVol object representing image volume filtered. radius integer specifying spatial radius filter (default 4). epsilon numeric value specifying variance constant, controls degree smoothing (default .7^2).","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/guided_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter a volumetric image with an edge-preserving ","text":"filtered image class NeuroVol.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/guided_filter.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Filter a volumetric image with an edge-preserving ","text":"Guided Image Filtering: Kaiming , Jian Sun, Xiaoou Tang, \"Guided Image Filtering,\" IEEE Transactions Pattern Analysis Machine Intelligence, Vol. 35, . 6, pp. 1397-1409, June, 2013. https://en.wikipedia.org/wiki/Guided_filter","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/guided_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter a volumetric image with an edge-preserving ","text":"","code":"# Load an example brain volume brain_vol <- read_vol(system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\"))  # Apply guided filtering to the brain volume if (FALSE) { filtered_vol <- guided_filter(brain_vol, radius = 4, epsilon = .7^2) }"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/header_file-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to get the name of the header file, given a file name and a FileFormat instance. — header_file","title":"Generic function to get the name of the header file, given a file name and a FileFormat instance. — header_file","text":"Generic function get name header file, given file name FileFormat instance.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/header_file-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to get the name of the header file, given a file name and a FileFormat instance. — header_file","text":"","code":"header_file(x, file_name)  # S4 method for FileFormat,character header_file(x, file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/header_file-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to get the name of the header file, given a file name and a FileFormat instance. — header_file","text":"x descriptor instance file_name file name stripped extension","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/header_file-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to get the name of the header file, given a file name and a FileFormat instance. — header_file","text":"correct header name","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/header_file_matches-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to test whether a file name conforms to the given FileFormat instance.\nWill test for match to header file only — header_file_matches","title":"Generic function to test whether a file name conforms to the given FileFormat instance.\nWill test for match to header file only — header_file_matches","text":"Generic function test whether file name conforms given FileFormat instance. test match header file ","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/header_file_matches-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to test whether a file name conforms to the given FileFormat instance.\nWill test for match to header file only — header_file_matches","text":"","code":"header_file_matches(x, file_name)  # S4 method for FileFormat,character header_file_matches(x, file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/header_file_matches-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to test whether a file name conforms to the given FileFormat instance.\nWill test for match to header file only — header_file_matches","text":"x object file name matched file_name file name matched","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/header_file_matches-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to test whether a file name conforms to the given FileFormat instance.\nWill test for match to header file only — header_file_matches","text":"TRUE match, FALSE otherwise","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/index_to_coord-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"convert 1d indices to n-dimensional real world coordinates — index_to_coord","title":"convert 1d indices to n-dimensional real world coordinates — index_to_coord","text":"convert 1d indices n-dimensional real world coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/index_to_coord-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"convert 1d indices to n-dimensional real world coordinates — index_to_coord","text":"","code":"index_to_coord(x, idx)  # S4 method for NeuroSpace,numeric index_to_coord(x, idx)  # S4 method for NeuroSpace,integer index_to_coord(x, idx)  # S4 method for NeuroVol,integer index_to_coord(x, idx)  # S4 method for NeuroVec,integer index_to_coord(x, idx)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/index_to_coord-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"convert 1d indices to n-dimensional real world coordinates — index_to_coord","text":"x object idx 1D indices","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/index_to_coord-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"convert 1d indices to n-dimensional real world coordinates — index_to_coord","text":"matrix real coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/index_to_coord-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"convert 1d indices to n-dimensional real world coordinates — index_to_coord","text":"","code":"bvol <- NeuroVol(array(0, c(10,10,10)), NeuroSpace(c(10,10,10), c(1,1,1))) idx <- 1:10 g <- index_to_coord(bvol, idx) idx2 <- coord_to_index(bvol, g) all.equal(idx, idx2) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/index_to_grid-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert 1d indices to n-dimensional grid coordinates — index_to_grid","title":"Convert 1d indices to n-dimensional grid coordinates — index_to_grid","text":"Convert 1d indices n-dimensional grid coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/index_to_grid-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert 1d indices to n-dimensional grid coordinates — index_to_grid","text":"","code":"index_to_grid(x, idx)  # S4 method for NeuroSlice,numeric index_to_grid(x, idx)  # S4 method for NeuroSpace,numeric index_to_grid(x, idx)  # S4 method for NeuroVec,index index_to_grid(x, idx)  # S4 method for NeuroVec,integer index_to_grid(x, idx)  # S4 method for NeuroVol,index index_to_grid(x, idx)  # S4 method for NeuroVol,integer index_to_grid(x, idx)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/index_to_grid-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert 1d indices to n-dimensional grid coordinates — index_to_grid","text":"x object idx 1d vector indices","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/index_to_grid-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert 1d indices to n-dimensional grid coordinates — index_to_grid","text":"matrix grid coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/index_to_grid-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert 1d indices to n-dimensional grid coordinates — index_to_grid","text":"","code":"bvol <- NeuroVol(array(0, c(10,10,10)), NeuroSpace(c(10,10,10), c(1,1,1)))  idx <- 1:10  g <- index_to_grid(bvol, idx)  bvol[g] #>  [1] 0 0 0 0 0 0 0 0 0 0"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/indices-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"indices — indices,IndexLookupVol-method","title":"indices — indices,IndexLookupVol-method","text":"indices","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/indices-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"indices — indices,IndexLookupVol-method","text":"","code":"# S4 method for IndexLookupVol indices(x)  # S4 method for ROIVol indices(x)  # S4 method for ROIVec indices(x)  # S4 method for AbstractSparseNeuroVec indices(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract indices — indices","title":"Extract indices — indices","text":"Extract indices","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract indices — indices","text":"","code":"indices(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract indices — indices","text":"x object extract indices","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/internal-methods.html","id":null,"dir":"Reference","previous_headings":"","what":".isExtension — .isExtension","title":".isExtension — .isExtension","text":".isExtension .concat4D .gridToIndex3D .gridToIndex .indexToGrid .getRStorage .getDataStorage .getDataCode .getDataSize .getEndian","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/internal-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".isExtension — .isExtension","text":"","code":".isExtension(fname, extension)  .concat4D(x, y, ...)  .gridToIndex3D(dimensions, voxmat)  .gridToIndex(dimensions, vmat)  .indexToGrid(idx, array.dim)  .getRStorage(data_type)  .getMMapMode(code)  .getDataStorage(code)  .getDataCode(data_type)  .getDataSize(data_type)  .getEndian(conn)  .niftiExt(filetype)  .matrixToQuatern(mat)  .quaternToMatrix(quat, origin, stepSize, qfac)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/inverse_trans-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract inverse image coordinate transformation — inverse_trans","title":"Extract inverse image coordinate transformation — inverse_trans","text":"Extract inverse image coordinate transformation","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/inverse_trans-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract inverse image coordinate transformation — inverse_trans","text":"","code":"inverse_trans(x)  # S4 method for NeuroSpace inverse_trans(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/inverse_trans-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract inverse image coordinate transformation — inverse_trans","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/inverse_trans-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract inverse image coordinate transformation — inverse_trans","text":"","code":"bspace <- NeuroSpace(c(10,10,10), c(2,2,2)) itrans <- inverse_trans(bspace) identical(trans(bspace) %*% inverse_trans(bspace), diag(4)) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/length-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Get length of NeuroVec. This is the number of volumes in the volume vector (e.g. the 4th image dimension) — length,NeuroVec-method","title":"Get length of NeuroVec. This is the number of volumes in the volume vector (e.g. the 4th image dimension) — length,NeuroVec-method","text":"Get length NeuroVec. number volumes volume vector (e.g. 4th image dimension)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/length-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get length of NeuroVec. This is the number of volumes in the volume vector (e.g. the 4th image dimension) — length,NeuroVec-method","text":"","code":"# S4 method for NeuroVec length(x)  # S4 method for NeuroVecSeq length(x)  # S4 method for ROIVol length(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/length-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get length of NeuroVec. This is the number of volumes in the volume vector (e.g. the 4th image dimension) — length,NeuroVec-method","text":"x object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/linear_access-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract values from an array-like object using linear indexing. — linear_access","title":"Extract values from an array-like object using linear indexing. — linear_access","text":"function extracts values elements array-like object using linear indexing. Linear indexing way indexing array single index computed multiple indices using formula.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/linear_access-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract values from an array-like object using linear indexing. — linear_access","text":"","code":"linear_access(x, i, ...)  # S4 method for FileBackedNeuroVec,numeric linear_access(x, i)  # S4 method for H5NeuroVec,numeric linear_access(x, i)  # S4 method for LatentNeuroVec,numeric linear_access(x, i)  # S4 method for MappedNeuroVec,numeric linear_access(x, i)  # S4 method for NeuroVecSeq,numeric linear_access(x, i)  # S4 method for SparseNeuroVol,numeric linear_access(x, i)  # S4 method for AbstractSparseNeuroVec,numeric linear_access(x, i)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/linear_access-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract values from an array-like object using linear indexing. — linear_access","text":"x data source. vector indices. ... additional arguments passed methods.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/load_data-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Load data from a data source. — load_data","title":"Load data from a data source. — load_data","text":"function loads data data source returns format compatible functions neuroim2 package. format returned data depends type data source used.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/load_data-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load data from a data source. — load_data","text":"","code":"load_data(x, ...)  # S4 method for MappedNeuroVecSource load_data(x)  # S4 method for NeuroVecSource load_data(x)  # S4 method for H5NeuroVecSource load_data(x)  # S4 method for LatentNeuroVecSource load_data(x)  # S4 method for NeuroVolSource load_data(x)  # S4 method for SparseNeuroVecSource load_data(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/load_data-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load data from a data source. — load_data","text":"x data source. ... additional arguments passed methods.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/load_data-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load data from a data source. — load_data","text":"instance class NeuroVec","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/lookup-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"lookup — lookup,IndexLookupVol,numeric-method","title":"lookup — lookup,IndexLookupVol,numeric-method","text":"lookup","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/lookup-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"lookup — lookup,IndexLookupVol,numeric-method","text":"","code":"# S4 method for IndexLookupVol,numeric lookup(x, i)  # S4 method for AbstractSparseNeuroVec,numeric lookup(x, i)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Index Lookup operation — lookup","title":"Index Lookup operation — lookup","text":"Index Lookup operation","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Index Lookup operation — lookup","text":"","code":"lookup(x, i, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/lookup.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Index Lookup operation — lookup","text":"x object query index lookup ... additional arguments","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/map-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a function to an object. — mapf","title":"Apply a function to an object. — mapf","text":"function applies function object, additional arguments passed function using ... argument. mapping object specifies function applied, can take many different forms, depending object function used. return value depends function used.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/map-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a function to an object. — mapf","text":"","code":"mapf(x, m, ...)  # S4 method for NeuroVol,Kernel mapf(x, m, mask = NULL)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/map-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a function to an object. — mapf","text":"x object mapped. m mapping object. ... additional arguments passed function. mask restrict application kernel masked area","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/map_values-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Map Values from One Set to Another Using a User-supplied Lookup Table — map_values","title":"Map Values from One Set to Another Using a User-supplied Lookup Table — map_values","text":"function maps values one set another using lookup table provided user.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/map_values-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map Values from One Set to Another Using a User-supplied Lookup Table — map_values","text":"","code":"map_values(x, lookup)  # S4 method for NeuroVol,list map_values(x, lookup)  # S4 method for NeuroVol,matrix map_values(x, lookup)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/map_values-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map Values from One Set to Another Using a User-supplied Lookup Table — map_values","text":"x object values mapped. lookup lookup table. first column \"key\" second column \"value\".","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/map_values-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map Values from One Set to Another Using a User-supplied Lookup Table — map_values","text":"new object original values replaced values lookup table.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/map_values-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map Values from One Set to Another Using a User-supplied Lookup Table — map_values","text":"","code":"x <- NeuroSpace(c(10, 10, 10), c(1, 1, 1)) vol <- NeuroVol(sample(1:10, 10 * 10 * 10, replace = TRUE), x)  ## Lookup table is a list lookup <- lapply(1:10, function(i) i * 10) names(lookup) <- 1:10 ovol <- map_values(vol, lookup)  ## Lookup table is a matrix. The first column is the key, and the second column is the value names(lookup) <- 1:length(lookup) lookup.mat <- cbind(as.numeric(names(lookup)), unlist(lookup)) ovol2 <- map_values(vol, lookup.mat) all.equal(as.vector(ovol2), as.vector(ovol)) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/matchAnatomy2D.html","id":null,"dir":"Reference","previous_headings":"","what":"given two named axes return AxisSet2D singleton — matchAnatomy2D","title":"given two named axes return AxisSet2D singleton — matchAnatomy2D","text":"given two named axes return AxisSet2D singleton","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/matchAnatomy2D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"given two named axes return AxisSet2D singleton — matchAnatomy2D","text":"","code":"matchAnatomy2D(axis1, axis2)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/matchAnatomy2D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"given two named axes return AxisSet2D singleton — matchAnatomy2D","text":"axis1 first axis axis2 second axis","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/matchAnatomy3D.html","id":null,"dir":"Reference","previous_headings":"","what":"given three named axes return AxisSet3D singleton — matchAnatomy3D","title":"given three named axes return AxisSet3D singleton — matchAnatomy3D","text":"given three named axes return AxisSet3D singleton","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/matchAnatomy3D.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"given three named axes return AxisSet3D singleton — matchAnatomy3D","text":"","code":"matchAnatomy3D(axis1, axis2, axis3)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/matchAnatomy3D.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"given three named axes return AxisSet3D singleton — matchAnatomy3D","text":"axis1 first axis axis2 second axis axis3 third axis","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/matricized_access-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract values from a matricized (x,y,z) of a 4D tensor using a space-time coordinate matrix. — matricized_access","title":"Extract values from a matricized (x,y,z) of a 4D tensor using a space-time coordinate matrix. — matricized_access","text":"function extracts values elements 4D tensor, first three dimensions (x,y,z) matricized single dimension, using space-time coordinate matrix. input index matrix, row specifies (x,y,z,t) coordinate. output vector containing values elements x specified space-time coordinates.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/matricized_access-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract values from a matricized (x,y,z) of a 4D tensor using a space-time coordinate matrix. — matricized_access","text":"","code":"matricized_access(x, i, ...)  # S4 method for LatentNeuroVec,matrix matricized_access(x, i)  # S4 method for LatentNeuroVec,integer matricized_access(x, i)  # S4 method for LatentNeuroVec,numeric matricized_access(x, i)  # S4 method for SparseNeuroVec,matrix matricized_access(x, i)  # S4 method for SparseNeuroVec,integer matricized_access(x, i)  # S4 method for SparseNeuroVec,numeric matricized_access(x, i)  # S4 method for BigNeuroVec,matrix matricized_access(x, i)  # S4 method for BigNeuroVec,integer matricized_access(x, i)  # S4 method for BigNeuroVec,numeric matricized_access(x, i)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/matricized_access-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract values from a matricized (x,y,z) of a 4D tensor using a space-time coordinate matrix. — matricized_access","text":"x data source. index matrix specifying space-time coordinates. ... additional arguments passed methods.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ndim-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract the number of dimensions of an object — ndim","title":"Extract the number of dimensions of an object — ndim","text":"Extract number dimensions object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ndim-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract the number of dimensions of an object — ndim","text":"","code":"ndim(x, ...)  # S4 method for AxisSet ndim(x, ...)  # S4 method for NeuroObj ndim(x)  # S4 method for NeuroSpace ndim(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ndim-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract the number of dimensions of an object — ndim","text":"x n-dimensional object ... additional arguments","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ndim-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract the number of dimensions of an object — ndim","text":"number dimensions input object `x`","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/ndim-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract the number of dimensions of an object — ndim","text":"","code":"x = NeuroSpace(c(10,10,10), spacing=c(1,1,1)) ndim(x) == 3 #> [1] TRUE x = NeuroSpace(c(10,10,10,3), spacing=c(1,1,1)) ndim(x) == 4 #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/neuro_space.html","id":null,"dir":"Reference","previous_headings":"","what":"Constructor function for NeuroSpace class — NeuroSpace","title":"Constructor function for NeuroSpace class — NeuroSpace","text":"Constructor function NeuroSpace class","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/neuro_space.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Constructor function for NeuroSpace class — NeuroSpace","text":"","code":"NeuroSpace(dim, spacing = NULL, origin = NULL, axes = NULL, trans = NULL)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/neuro_space.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Constructor function for NeuroSpace class — NeuroSpace","text":"dim integer vector describing dimensions image grid. spacing numeric vector representing real-valued voxel dimensions (e.g., millimeters). provided, default set vector ones length dimensions. origin numeric vector representing coordinate origin image space. provided, default set vector zeroes length dimensions. axes AxisSet object representing image axes ordering. provided, default axes determined based NIFTI standard (Left-Posterior-Inferior). trans matrix representing coordinate transformation associated image space. provided, default based NIFTI standard (\"Neurological\" orientation).","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/neuro_space.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Constructor function for NeuroSpace class — NeuroSpace","text":"instance NeuroSpace class.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/neuro_space.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Constructor function for NeuroSpace class — NeuroSpace","text":"Users rarely need create new NeuroSpace instance, almost always created automatically using information stored image header. existing image object available, NeuroSpace instance can easily extracted space method.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/neuro_space.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Constructor function for NeuroSpace class — NeuroSpace","text":"","code":"bspace <- NeuroSpace(c(64, 64, 64), origin = c(0, 0, 0), spacing = c(2, 2, 2)) bspace #> NeuroSpace #>   Type           : NeuroSpace  #>   Dimension      : 64 64 64  #>   Spacing        : 2  X  2  X  2  #>   Origin         : 0  X  0  X  0  #>   Coordinate Transform : 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 1  origin(bspace) #> [1] 0 0 0 axes(bspace) #> instance of class: AxisSet3D  #>  #> Axis 1: Left-to-Right  #> Axis 2: Posterior-to-Anterior  #> Axis 3: Inferior-to-Superior  trans(bspace) #>      [,1] [,2] [,3] [,4] #> [1,]    2    0    0    0 #> [2,]    0    2    0    0 #> [3,]    0    0    2    0 #> [4,]    0    0    0    1"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/neuroim2.html","id":null,"dir":"Reference","previous_headings":"","what":"neuroim2 — neuroim2","title":"neuroim2 — neuroim2","text":"Data structures neuroimaging data.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/neuroim2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"neuroim2 — neuroim2","text":"none","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/num_clusters-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Clusters — num_clusters,ClusteredNeuroVol-method","title":"Number of Clusters — num_clusters,ClusteredNeuroVol-method","text":"function returns number clusters ClusteredNeuroVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/num_clusters-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Clusters — num_clusters,ClusteredNeuroVol-method","text":"","code":"# S4 method for ClusteredNeuroVol num_clusters(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/num_clusters-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Clusters — num_clusters,ClusteredNeuroVol-method","text":"x ClusteredNeuroVol object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/num_clusters-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Number of Clusters — num_clusters,ClusteredNeuroVol-method","text":"integer representing number clusters input object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/num_clusters.html","id":null,"dir":"Reference","previous_headings":"","what":"Number of Clusters — num_clusters","title":"Number of Clusters — num_clusters","text":"Number Clusters","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/num_clusters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Number of Clusters — num_clusters","text":"","code":"num_clusters(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/num_clusters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Number of Clusters — num_clusters","text":"x object extract number clusters","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/origin-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Image Origin — origin","title":"Extract Image Origin — origin","text":"Extract Image Origin","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/origin-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Image Origin — origin","text":"","code":"origin(x)  # S4 method for NeuroSpace origin(x)  # S4 method for NeuroVol origin(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/origin-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Image Origin — origin","text":"x object origin","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/origin-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Image Origin — origin","text":"origin image","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/origin-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Image Origin — origin","text":"","code":"bspace <- NeuroSpace(c(10,10,10), c(2,2,2)) stopifnot(origin(bspace) == c(0,0,0))"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/partition-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Partition an image into a set of disjoint clusters — partition","title":"Partition an image into a set of disjoint clusters — partition","text":"function partitions image set disjoint clusters using k-means clustering.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/partition-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Partition an image into a set of disjoint clusters — partition","text":"","code":"partition(x, k, ...)  # S4 method for LogicalNeuroVol,integer partition(x, k)  # S4 method for LogicalNeuroVol,numeric partition(x, k)  # S4 method for DenseNeuroVol,numeric partition(x, k)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/partition-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Partition an image into a set of disjoint clusters — partition","text":"x image partition, represented 3D array. k number clusters form. ... additional arguments passed kmeans function.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/partition-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Partition an image into a set of disjoint clusters — partition","text":"3D array voxel assigned cluster.","code":""},{"path":[]},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/partition-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Partition an image into a set of disjoint clusters — partition","text":"","code":"# Load an example 3D image library(neuroim2) img <- read_vol(system.file(\"extdata\", \"global_mask.nii\", package = \"neuroim2\"))  # Partition the image into 5 clusters using default options clusters <- partition(img, 5)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/patch_set-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a patch set from a NeuroVol object — patch_set,NeuroVol,numeric,missing-method","title":"Create a patch set from a NeuroVol object — patch_set,NeuroVol,numeric,missing-method","text":"function creates patch set NeuroVol object given specified dimensions function creates patch set NeuroVol object given specified dimensions mask.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/patch_set-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a patch set from a NeuroVol object — patch_set,NeuroVol,numeric,missing-method","text":"","code":"# S4 method for NeuroVol,numeric,missing patch_set(x, dims, mask, ...)  # S4 method for NeuroVol,numeric,LogicalNeuroVol patch_set(x, dims, mask, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/patch_set-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a patch set from a NeuroVol object — patch_set,NeuroVol,numeric,missing-method","text":"x NeuroVol object dims dimensions patch mask mask defining valid patch centers ... additional args","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/patch_set-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a patch set from a NeuroVol object — patch_set,NeuroVol,numeric,missing-method","text":"deferred list patches. deferred list patches.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/patch_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a set of coordinate ","title":"Generate a set of coordinate ","text":"Generate set coordinate \"patches\" fixed size image object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/patch_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a set of coordinate ","text":"","code":"patch_set(x, dims, mask, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/patch_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a set of coordinate ","text":"x object extract patches dims vector indicating dimensions patches mask mask indicating valid patch area ... additional args","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/perm_mat-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract permutation matrix associated with an image — perm_mat","title":"Extract permutation matrix associated with an image — perm_mat","text":"permutation matrix defines native voxel coordinates can transformed standard (LPI) orientation.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/perm_mat-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract permutation matrix associated with an image — perm_mat","text":"","code":"perm_mat(x, ...)  # S4 method for AxisSet2D perm_mat(x, ...)  # S4 method for AxisSet3D perm_mat(x, ...)  # S4 method for NeuroSpace perm_mat(x, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/perm_mat-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract permutation matrix associated with an image — perm_mat","text":"x object ... additional arguments","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/perm_mat-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract permutation matrix associated with an image — perm_mat","text":"N x N permutation matrix, N dimensionality image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/perm_mat-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract permutation matrix associated with an image — perm_mat","text":"permutation matrix can used convert cardinal image orientations. example, image stored \"RPI\" (Right-Posterior-Inferior) format, coordinate space can converted LPI (Left-Posterior-Inferior) multiplying coordinate vector permutation matrix.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/perm_mat-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract permutation matrix associated with an image — perm_mat","text":"","code":"fname <- system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\") vol <- read_vol(fname) pmat <- perm_mat(space(vol))  vox <- c(12,12,8) pvox <- vox %*% perm_mat(space(vol))  stopifnot(all(pvox == c(-12,12,8)))"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/plot-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"plot an NeuroVol as a series of 2D slices — plot,NeuroSlice-method","title":"plot an NeuroVol as a series of 2D slices — plot,NeuroSlice-method","text":"plot NeuroVol series 2D slices","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/plot-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot an NeuroVol as a series of 2D slices — plot,NeuroSlice-method","text":"","code":"# S4 method for NeuroSlice plot(   x,   cmap = gray(seq(0, 1, length.out = 255)),   irange = range(x, na.rm = TRUE) )  # S4 method for NeuroVol plot(   x,   cmap = gray(seq(0, 1, length.out = 255)),   zlevels = unique(round(seq(1, dim(x)[3], length.out = 6))),   irange = range(x, na.rm = TRUE),   thresh = c(0, 0),   alpha = 1,   bgvol = NULL,   bgcmap = gray(seq(0, 1, length.out = 255)) )"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/plot-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot an NeuroVol as a series of 2D slices — plot,NeuroSlice-method","text":"x object display cmap color map consisting vector colors hex format (e.g. gray(n=255)) irange intensity range indicating low high values color scale. zlevels series slice indices display. thresh 2-element vector indicating lower upper transparency thresholds. alpha level alpha transparency bgvol background volume serves image underlay (currently ignored). bgcmap color map backround layer consisting vector colors hex format (e.g. gray(n=255))","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/plot-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"plot an NeuroVol as a series of 2D slices — plot,NeuroSlice-method","text":"","code":"dat <- matrix(rnorm(100*100), 100, 100) slice <- NeuroSlice(dat, NeuroSpace(c(100,100))) #plot(slice)  dat <- matrix(rnorm(100*100), 100, 100) slice <- NeuroSlice(dat, NeuroSpace(c(100,100))) #plot(slice)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/print_-AxisSet2D-method.html","id":null,"dir":"Reference","previous_headings":"","what":"print a AxisSet2D instance — print_,AxisSet2D-method","title":"print a AxisSet2D instance — print_,AxisSet2D-method","text":"print AxisSet2D instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/print_-AxisSet2D-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print a AxisSet2D instance — print_,AxisSet2D-method","text":"","code":"# S4 method for AxisSet2D print_(x, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/print_-AxisSet2D-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print a AxisSet2D instance — print_,AxisSet2D-method","text":"x object ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/print_-AxisSet3D-method.html","id":null,"dir":"Reference","previous_headings":"","what":"print a AxisSet3D instance — print_,AxisSet3D-method","title":"print a AxisSet3D instance — print_,AxisSet3D-method","text":"print AxisSet3D instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/print_-AxisSet3D-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print a AxisSet3D instance — print_,AxisSet3D-method","text":"","code":"# S4 method for AxisSet3D print_(x, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/print_-AxisSet3D-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print a AxisSet3D instance — print_,AxisSet3D-method","text":"x object ... extra args","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/print_-NamedAxis-method.html","id":null,"dir":"Reference","previous_headings":"","what":"print a NamedAxis — print_,NamedAxis-method","title":"print a NamedAxis — print_,NamedAxis-method","text":"print NamedAxis","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/print_-NamedAxis-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print a NamedAxis — print_,NamedAxis-method","text":"","code":"# S4 method for NamedAxis print_(x, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/print_-NamedAxis-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print a NamedAxis — print_,NamedAxis-method","text":"x object ... extra arguments","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/print_.html","id":null,"dir":"Reference","previous_headings":"","what":"print an object — print_","title":"print an object — print_","text":"print object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/print_.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"print an object — print_","text":"","code":"print_(x, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/print_.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"print an object — print_","text":"x object print ... additional arguments","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/random_searchlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a spherical random searchlight iterator — random_searchlight","title":"Create a spherical random searchlight iterator — random_searchlight","text":"function generates spherical random searchlight iterator, can used analyze local neighborhood voxels within given radius brain mask.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/random_searchlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a spherical random searchlight iterator — random_searchlight","text":"","code":"random_searchlight(mask, radius)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/random_searchlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a spherical random searchlight iterator — random_searchlight","text":"mask NeuroVol object representing brain mask. radius numeric value specifying radius searchlight sphere voxel units.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/random_searchlight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a spherical random searchlight iterator — random_searchlight","text":"list ROIVolWindow objects, representing spherical searchlight region.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/random_searchlight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a spherical random searchlight iterator — random_searchlight","text":"","code":"# Create a simple brain mask mask <- array(TRUE, c(10, 10, 10)) mask[1, 1, 1] <- FALSE mask <- LogicalNeuroVol(mask, NeuroSpace(c(10,10,10))) # Generate random searchlight iterator with a radius of 2 voxels  if (FALSE) searchlights <- random_searchlight(mask, radius = 2)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_afni_header.html","id":null,"dir":"Reference","previous_headings":"","what":"read_afni_header — read_afni_header","title":"read_afni_header — read_afni_header","text":"read_afni_header","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_afni_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read_afni_header — read_afni_header","text":"","code":"read_afni_header(file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_afni_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read_afni_header — read_afni_header","text":"file_name name AFNI header file (ending .HEAD)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_afni_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read_afni_header — read_afni_header","text":"list representation AFNI header","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_columns-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a set of column vector from an input source (e.g. ColumnReader) — read_columns","title":"Read a set of column vector from an input source (e.g. ColumnReader) — read_columns","text":"Read set column vector input source (e.g. ColumnReader)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_columns-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a set of column vector from an input source (e.g. ColumnReader) — read_columns","text":"","code":"read_columns(x, column_indices)  # S4 method for ColumnReader,integer read_columns(x, column_indices)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_columns-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a set of column vector from an input source (e.g. ColumnReader) — read_columns","text":"x input channel column_indices column indices","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_columns-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a set of column vector from an input source (e.g. ColumnReader) — read_columns","text":"matrix consisting requested column vectors","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_elements-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a sequence of elements from an input source — read_elements","title":"Read a sequence of elements from an input source — read_elements","text":"Read sequence elements input source read_elements","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_elements-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a sequence of elements from an input source — read_elements","text":"","code":"read_elements(x, num_elements)  # S4 method for BinaryReader,numeric read_elements(x, num_elements)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_elements-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a sequence of elements from an input source — read_elements","text":"x input channel num_elements number elements read","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_elements-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a sequence of elements from an input source — read_elements","text":"elements vector","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_header.html","id":null,"dir":"Reference","previous_headings":"","what":"read header information of an image file — read_header","title":"read header information of an image file — read_header","text":"read header information image file","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_header.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read header information of an image file — read_header","text":"","code":"read_header(file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_header.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read header information of an image file — read_header","text":"file_name name file read","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_header.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read header information of an image file — read_header","text":"instance class FileMetaInfo","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_meta_info-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to read image meta info given a file and a FileFormat instance. — read_meta_info","title":"Generic function to read image meta info given a file and a FileFormat instance. — read_meta_info","text":"Generic function read image meta info given file FileFormat instance.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_meta_info-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to read image meta info given a file and a FileFormat instance. — read_meta_info","text":"","code":"read_meta_info(x, file_name)  # S4 method for NIFTIFormat read_meta_info(x, file_name)  # S4 method for AFNIFormat read_meta_info(x, file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_meta_info-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to read image meta info given a file and a FileFormat instance. — read_meta_info","text":"x descriptor instance file_name file name contianing meta information","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vec.html","id":null,"dir":"Reference","previous_headings":"","what":"read_vec — read_vec","title":"read_vec — read_vec","text":"load image volume file","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read_vec — read_vec","text":"","code":"read_vec(   file_name,   indices = NULL,   mask = NULL,   mode = c(\"normal\", \"mmap\", \"bigvec\", \"filebacked\") )"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read_vec — read_vec","text":"file_name name(s) file(s) load. one file_name specified, files loaded concatenated. indices indices sub-volumes load (e.g. file 4-dimensional) mask mask defining spatial elements load mode IO mode one \"normal\", \"mmap\", \"bigvec\", \"filebacked\".","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vec.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read_vec — read_vec","text":"NeuroVec object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vec.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"read_vec — read_vec","text":"memory-mapping gzipped file currently allowed.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vol.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an image volume from a file — read_vol","title":"Load an image volume from a file — read_vol","text":"Load image volume file","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an image volume from a file — read_vol","text":"","code":"read_vol(file_name, index = 1)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an image volume from a file — read_vol","text":"file_name name file load index index volume (e.g. file 4-dimensional)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load an image volume from a file — read_vol","text":"instance class DenseNeuroVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vol.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load an image volume from a file — read_vol","text":"","code":"fname <- system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\") x <- read_vol(fname) print(dim(x)) #> [1] 64 64 25 space(x) #> NeuroSpace #>   Type           : NeuroSpace  #>   Dimension      : 64 64 25  #>   Spacing        : 3.5  X  3.5  X  3.7  #>   Origin         : 112  X  -108  X  -46.2  #>   Coordinate Transform : -3.5 0 0 0 0 3.5 0 0 0 0 3.7 0 112 -108 -46.2 1"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vol_list.html","id":null,"dir":"Reference","previous_headings":"","what":"read_vol_list — read_vol_list","title":"read_vol_list — read_vol_list","text":"load list image volumes return NeuroVec instance","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vol_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read_vol_list — read_vol_list","text":"","code":"read_vol_list(file_names, mask = NULL)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vol_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read_vol_list — read_vol_list","text":"file_names list files load mask optional mask indicating subset voxels load","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/read_vol_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read_vol_list — read_vol_list","text":"instance class NeuroVec","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/render-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Render an image to create a drawable image. — render","title":"Render an image to create a drawable image. — render","text":"Map image intensities image color values.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/render-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render an image to create a drawable image. — render","text":"","code":"render(x, width, height, colmap, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/render-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render an image to create a drawable image. — render","text":"x object, e.g. instance type NeuroSlice width width rendered image height height rendered image colmap colors used map values RGBA colors. ... additional arguments","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/render_slice-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a slice at z coordinate — render_slice","title":"Render a slice at z coordinate — render_slice","text":"Render slice z coordinate","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/render_slice-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a slice at z coordinate — render_slice","text":"","code":"render_slice(x, zpos, width, height, colmap, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/render_slice-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a slice at z coordinate — render_slice","text":"x object, e.g. instance type Layer Overlay zpos z coordinate slice . width width rendered image height height rendered image colmap colors used map values RGBA colors. ... additional arguments","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/reorient-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Remap the grid-to-world coordinates mapping of an image. — reorient","title":"Remap the grid-to-world coordinates mapping of an image. — reorient","text":"Remap grid--world coordinates mapping image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/reorient-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remap the grid-to-world coordinates mapping of an image. — reorient","text":"","code":"reorient(x, orient)  # S4 method for NeuroSpace,character reorient(x, orient)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/reorient-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remap the grid-to-world coordinates mapping of an image. — reorient","text":"x object orient orientation code indicating \"remapped\" axes.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/reorient-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remap the grid-to-world coordinates mapping of an image. — reorient","text":"reoriented image space","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/resample-NeuroVol-NeuroSpace-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample a NeuroVol object to match a NeuroSpace object — resample,NeuroVol,NeuroSpace-method","title":"Resample a NeuroVol object to match a NeuroSpace object — resample,NeuroVol,NeuroSpace-method","text":"method resamples NeuroVol object (source) match dimensions orientation NeuroSpace object (target).","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/resample-NeuroVol-NeuroSpace-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample a NeuroVol object to match a NeuroSpace object — resample,NeuroVol,NeuroSpace-method","text":"","code":"# S4 method for NeuroVol,NeuroSpace resample(source, target, interpolation = 3L)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/resample-NeuroVol-NeuroSpace-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample a NeuroVol object to match a NeuroSpace object — resample,NeuroVol,NeuroSpace-method","text":"source NeuroVol object representing source volume resampled. target NeuroSpace object representing target space match dimensions orientation source volume. interpolation single integer specifying type interpolation applied final resampled image. May 0 (nearest neighbor), 1 (trilinear), 3 (cubic spline). values valid.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/resample-NeuroVol-NeuroSpace-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample a NeuroVol object to match a NeuroSpace object — resample,NeuroVol,NeuroSpace-method","text":"NeuroVol object resampled source volume matched target space's dimensions orientation.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/resample-NeuroVol-NeuroVol-method.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample a NeuroVol object — resample,NeuroVol,NeuroVol-method","title":"Resample a NeuroVol object — resample,NeuroVol,NeuroVol-method","text":"method resamples NeuroVol object (source) match dimensions orientation target NeuroVol object (target).","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/resample-NeuroVol-NeuroVol-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample a NeuroVol object — resample,NeuroVol,NeuroVol-method","text":"","code":"# S4 method for NeuroVol,NeuroVol resample(source, target, interpolation = 3L)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/resample-NeuroVol-NeuroVol-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample a NeuroVol object — resample,NeuroVol,NeuroVol-method","text":"source NeuroVol object representing source volume resampled. target NeuroVol object representing target volume match dimensions orientation source volume. interpolation single integer specifying type interpolation applied final resampled image. May 0 (nearest neighbor), 1 (trilinear), 3 (cubic spline). values valid.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/resample-NeuroVol-NeuroVol-method.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample a NeuroVol object — resample,NeuroVol,NeuroVol-method","text":"NeuroVol object resampled source volume matched target volume's dimensions orientation.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/resample-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Resample an Image to Match the Space of Another Image — resample","title":"Resample an Image to Match the Space of Another Image — resample","text":"function resamples source image match spatial properties (dimensions, resolution, orientation) target image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/resample-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Resample an Image to Match the Space of Another Image — resample","text":"","code":"resample(source, target, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/resample-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Resample an Image to Match the Space of Another Image — resample","text":"source object representing source image resampled. 3D 4D image object, depending use case. target object representing target image, whose spatial properties used reference resampling source image. ... Additional arguments passed resampling function, interpolation method, boundary handling, resampling options.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/resample-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Resample an Image to Match the Space of Another Image — resample","text":"object representing resampled source image, spatial properties target image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/resample-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Resample an Image to Match the Space of Another Image — resample","text":"","code":"img <- read_vol(system.file(\"extdata\", \"global_mask.nii\", package = \"neuroim2\")) rspace <- space(img)  ### normally, one would resample from two existing soource and target spaces. ### But here we manually create the target space, which is a bit ugly.  newtrans4X3 <- trans(img)[1:4, 1:3] newtrans4X3 <- newtrans4X3 * c(.5,.5,.5,1) newtrans <- cbind(newtrans4X3, c(space(img)@origin,1))  rspace <- NeuroSpace(rspace@dim*2, rspace@spacing/2, origin=rspace@origin, trans=trans(img)) rvol <- resample(img, rspace)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/scale_series-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic functions to scale (center and/or normalize by standard deviation) each series of a 4D image\nThat is, if the 4th dimension is 'time' each series is a 1D time series. — scale_series","title":"Generic functions to scale (center and/or normalize by standard deviation) each series of a 4D image\nThat is, if the 4th dimension is 'time' each series is a 1D time series. — scale_series","text":"Generic functions scale (center /normalize standard deviation) series 4D image , 4th dimension 'time' series 1D time series.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/scale_series-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic functions to scale (center and/or normalize by standard deviation) each series of a 4D image\nThat is, if the 4th dimension is 'time' each series is a 1D time series. — scale_series","text":"","code":"scale_series(x, center, scale)  # S4 method for NeuroVec,logical,missing scale_series(x, center, scale)  # S4 method for NeuroVec,logical,logical scale_series(x, center, scale)  # S4 method for NeuroVec,missing,logical scale_series(x, center, scale)  # S4 method for NeuroVec,missing,missing scale_series(x, center, scale)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/scale_series-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic functions to scale (center and/or normalize by standard deviation) each series of a 4D image\nThat is, if the 4th dimension is 'time' each series is a 1D time series. — scale_series","text":"x four dimensional image center logical value indicating whether series centered scale logical value indicating whether series divided standard deviation","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/scale_series-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic functions to scale (center and/or normalize by standard deviation) each series of a 4D image\nThat is, if the 4th dimension is 'time' each series is a 1D time series. — scale_series","text":"","code":"bvec <- NeuroVec(array(rnorm(24*24*24*24), c(24,24,24,24)), NeuroSpace(c(24,24,24,24), c(1,1,1))) res <- scale_series(bvec, TRUE, TRUE)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/searchlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a clustered searchlight iterator — clustered_searchlight","title":"Create a clustered searchlight iterator — clustered_searchlight","text":"function generates searchlight iterator iterates successive spatial clusters image volume. allows exploration spatially clustered regions within provided mask using either pre-defined clustered volume performing k-means clustering generate clusters.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/searchlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a clustered searchlight iterator — clustered_searchlight","text":"","code":"clustered_searchlight(mask, cvol = NULL, csize = NULL)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/searchlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a clustered searchlight iterator — clustered_searchlight","text":"mask NeuroVol object representing brain mask, containing valid central voxels roving searchlight. cvol optional ClusteredNeuroVol instance representing pre-defined clusters within mask. provided, 'csize' parameter ignored. csize optional integer specifying number clusters generated using k-means clustering (ignored cvol provided).","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/searchlight.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a clustered searchlight iterator — clustered_searchlight","text":"deferred_list object containing ROIVol objects, representing clustered region within image volume.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/searchlight.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a clustered searchlight iterator — clustered_searchlight","text":"","code":"# Load an example brain mask mask <- read_vol(system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\"))  # Generate a clustered searchlight iterator with 5 clusters if (FALSE) { clust_searchlight <- clustered_searchlight(mask, csize = 5) }"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/searchlight_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an exhaustive searchlight iterator that only returns voxel coordinates — searchlight_coords","title":"Create an exhaustive searchlight iterator that only returns voxel coordinates — searchlight_coords","text":"function generates exhaustive searchlight iterator returns voxel coordinates searchlight sphere within provided mask. searchlight iterator visits every non-zero voxel mask potential center voxel. function generates exhaustive searchlight iterator returns voxel coordinates searchlight sphere within provided mask. searchlight iterator visits every non-zero voxel mask potential center voxel.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/searchlight_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an exhaustive searchlight iterator that only returns voxel coordinates — searchlight_coords","text":"","code":"searchlight_coords(mask, radius, nonzero = FALSE, cores = 0)  searchlight(mask, radius, eager = FALSE, nonzero = FALSE, cores = 0)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/searchlight_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an exhaustive searchlight iterator that only returns voxel coordinates — searchlight_coords","text":"mask NeuroVol object representing brain mask, containing valid central voxels roving searchlight. radius numeric value specifying radius (mm) spherical searchlight. nonzero logical value indicating whether include coordinates nonzero values supplied mask (default FALSE). cores integer specifying number cores use parallel computation (default 0, uses single core). eager logical value specifying whether eagerly compute searchlight ROIs (default FALSE, uses lazy evaluation).","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/searchlight_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an exhaustive searchlight iterator that only returns voxel coordinates — searchlight_coords","text":"deferred_list object containing matrices integer-valued voxel coordinates, representing searchlight region. deferred_list object containing matrices integer-valued voxel coordinates, representing searchlight region.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/searchlight_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an exhaustive searchlight iterator that only returns voxel coordinates — searchlight_coords","text":"","code":"# Load an example brain mask mask <- read_vol(system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\"))  # Generate an exhaustive searchlight iterator with a radius of 6 mm if (FALSE)  searchlights <- searchlight_coords(mask, radius = 6)   # Load an example brain mask mask <- read_vol(system.file(\"extdata\", \"global_mask.nii\", package=\"neuroim2\"))  # Generate an exhaustive searchlight iterator with a radius of 6 mm if (FALSE) { searchlights <- searchlight(mask, radius = 6, eager = TRUE) }"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/series-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract one or more series from object and return as ROI object — series_roi","title":"Extract one or more series from object and return as ROI object — series_roi","text":"Extract one series object return ROI object Extract one series object #' @rdname series-methods #' @export setMethod(\"series\", signature(x=\"NeuroVec\", =\"integer\"),           def=function(x, , j, k)              (missing(j) && missing(k))                vdim <- dim(x)[1:3]               mat <- arrayInd(, vdim)               apply(mat, 1, function() x[[1], [2], [3],])              else                x[,j,k,]          )","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/series-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract one or more series from object and return as ROI object — series_roi","text":"","code":"series_roi(x, i, ...)  series(x, i, ...)  # S4 method for NeuroVec,matrix series(x, i)  # S4 method for NeuroVec,matrix series_roi(x, i)  # S4 method for NeuroVec,ROICoords series(x, i)  # S4 method for NeuroVec,ROICoords series_roi(x, i)  # S4 method for NeuroVec,LogicalNeuroVol series(x, i)  # S4 method for NeuroVec,NeuroVol series(x, i)  # S4 method for NeuroVec,LogicalNeuroVol series_roi(x, i)  # S4 method for NeuroVec,integer series(x, i, j, k, drop = TRUE)  # S4 method for DenseNeuroVec,integer series(x, i, j, k, drop = TRUE)  # S4 method for H5NeuroVec,integer series(x, i, j, k, drop = TRUE)  # S4 method for NeuroVec,numeric series(x, i, j, k)  # S4 method for NeuroVec,numeric series_roi(x, i, j, k)  # S4 method for H5NeuroVec,numeric series(x, i, j, k)  # S4 method for H5NeuroVec,matrix series(x, i)  # S4 method for AbstractSparseNeuroVec,ROICoords series(x, i)  # S4 method for AbstractSparseNeuroVec,matrix series(x, i)  # S4 method for AbstractSparseNeuroVec,numeric series(x, i, j, k)  # S4 method for AbstractSparseNeuroVec,integer series(x, i, j, k)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/series-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract one or more series from object and return as ROI object — series_roi","text":"x object series indices ... additional arguments j index 2nd dimension k index 3rd dimension drop whether drop dimension length 1","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-AxisSet1D-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show an AxisSet1D — show,AxisSet1D-method","title":"show an AxisSet1D — show,AxisSet1D-method","text":"show AxisSet1D","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-AxisSet1D-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show an AxisSet1D — show,AxisSet1D-method","text":"","code":"# S4 method for AxisSet1D show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-AxisSet1D-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show an AxisSet1D — show,AxisSet1D-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-AxisSet2D-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show an AxisSet2D — show,AxisSet2D-method","title":"show an AxisSet2D — show,AxisSet2D-method","text":"show AxisSet2D","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-AxisSet2D-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show an AxisSet2D — show,AxisSet2D-method","text":"","code":"# S4 method for AxisSet2D show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-AxisSet2D-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show an AxisSet2D — show,AxisSet2D-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-AxisSet3D-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show an AxisSet3D — show,AxisSet3D-method","title":"show an AxisSet3D — show,AxisSet3D-method","text":"show AxisSet3D","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-AxisSet3D-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show an AxisSet3D — show,AxisSet3D-method","text":"","code":"# S4 method for AxisSet3D show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-AxisSet3D-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show an AxisSet3D — show,AxisSet3D-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-AxisSet4D-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show an AxisSet4D — show,AxisSet4D-method","title":"show an AxisSet4D — show,AxisSet4D-method","text":"show AxisSet4D","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-AxisSet4D-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show an AxisSet4D — show,AxisSet4D-method","text":"","code":"# S4 method for AxisSet4D show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-AxisSet4D-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show an AxisSet4D — show,AxisSet4D-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-ClusteredNeuroVol-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show a ClusteredNeuroVol — show,ClusteredNeuroVol-method","title":"show a ClusteredNeuroVol — show,ClusteredNeuroVol-method","text":"show ClusteredNeuroVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-ClusteredNeuroVol-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show a ClusteredNeuroVol — show,ClusteredNeuroVol-method","text":"","code":"# S4 method for ClusteredNeuroVol show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-ClusteredNeuroVol-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show a ClusteredNeuroVol — show,ClusteredNeuroVol-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-FileMetaInfo-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show a FileMetaInfo — show,FileMetaInfo-method","title":"show a FileMetaInfo — show,FileMetaInfo-method","text":"show FileMetaInfo","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-FileMetaInfo-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show a FileMetaInfo — show,FileMetaInfo-method","text":"","code":"# S4 method for FileMetaInfo show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-FileMetaInfo-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show a FileMetaInfo — show,FileMetaInfo-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NamedAxis-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show an NamedAxis — show,NamedAxis-method","title":"show an NamedAxis — show,NamedAxis-method","text":"show NamedAxis","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NamedAxis-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show an NamedAxis — show,NamedAxis-method","text":"","code":"# S4 method for NamedAxis show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NamedAxis-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show an NamedAxis — show,NamedAxis-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroSlice-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show a NeuroSlice — show,NeuroSlice-method","title":"show a NeuroSlice — show,NeuroSlice-method","text":"show NeuroSlice","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroSlice-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show a NeuroSlice — show,NeuroSlice-method","text":"","code":"# S4 method for NeuroSlice show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroSlice-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show a NeuroSlice — show,NeuroSlice-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroSpace-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show a NeuroSpace — show,NeuroSpace-method","title":"show a NeuroSpace — show,NeuroSpace-method","text":"show NeuroSpace","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroSpace-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show a NeuroSpace — show,NeuroSpace-method","text":"","code":"# S4 method for NeuroSpace show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroSpace-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show a NeuroSpace — show,NeuroSpace-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroVec-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show a NeuroVec — show,NeuroVec-method","title":"show a NeuroVec — show,NeuroVec-method","text":"show NeuroVec","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroVec-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show a NeuroVec — show,NeuroVec-method","text":"","code":"# S4 method for NeuroVec show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroVec-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show a NeuroVec — show,NeuroVec-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroVecSource-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show a NeuroVecSource — show,NeuroVecSource-method","title":"show a NeuroVecSource — show,NeuroVecSource-method","text":"show NeuroVecSource","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroVecSource-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show a NeuroVecSource — show,NeuroVecSource-method","text":"","code":"# S4 method for NeuroVecSource show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroVecSource-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show a NeuroVecSource — show,NeuroVecSource-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroVol-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show a NeuroVol — show,NeuroVol-method","title":"show a NeuroVol — show,NeuroVol-method","text":"show NeuroVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroVol-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show a NeuroVol — show,NeuroVol-method","text":"","code":"# S4 method for NeuroVol show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-NeuroVol-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show a NeuroVol — show,NeuroVol-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-ROIVec-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show an ROIVec — show,ROIVec-method","title":"show an ROIVec — show,ROIVec-method","text":"show ROIVec","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-ROIVec-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show an ROIVec — show,ROIVec-method","text":"","code":"# S4 method for ROIVec show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-ROIVec-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show an ROIVec — show,ROIVec-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-ROIVol-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show an ROIVol — show,ROIVol-method","title":"show an ROIVol — show,ROIVol-method","text":"show ROIVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-ROIVol-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show an ROIVol — show,ROIVol-method","text":"","code":"# S4 method for ROIVol show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-ROIVol-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show an ROIVol — show,ROIVol-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-SparseNeuroVec-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show a SparseNeuroVec — show,SparseNeuroVec-method","title":"show a SparseNeuroVec — show,SparseNeuroVec-method","text":"show SparseNeuroVec","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-SparseNeuroVec-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show a SparseNeuroVec — show,SparseNeuroVec-method","text":"","code":"# S4 method for SparseNeuroVec show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-SparseNeuroVec-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show a SparseNeuroVec — show,SparseNeuroVec-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-SparseNeuroVol-method.html","id":null,"dir":"Reference","previous_headings":"","what":"show a SparseNeuroVol — show,SparseNeuroVol-method","title":"show a SparseNeuroVol — show,SparseNeuroVol-method","text":"show SparseNeuroVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-SparseNeuroVol-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"show a SparseNeuroVol — show,SparseNeuroVol-method","text":"","code":"# S4 method for SparseNeuroVol show(object)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/show-SparseNeuroVol-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"show a SparseNeuroVol — show,SparseNeuroVol-method","text":"object object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/slice-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract image slice — slice","title":"Extract image slice — slice","text":"Extract 2D slice image volume","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/slice-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract image slice — slice","text":"","code":"slice(x, zlevel, along, orientation, ...)  # S4 method for NeuroVol,numeric,numeric,missing slice(x, zlevel, along, orientation)  # S4 method for NeuroVol,numeric,NeuroSpace,AxisSet3D slice(x, zlevel, along, orientation)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/slice-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract image slice — slice","text":"x object zlevel coordinate (voxel units) along sliced axis along axis along slice orientation target orientation 2D slice ... additional arguments","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/slices-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract an ordered series of 2D slices from a 3D or 4D object — slices","title":"Extract an ordered series of 2D slices from a 3D or 4D object — slices","text":"function extracts ordered series 2D slices 3D 4D object. returned slices order appear original object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/slices-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract an ordered series of 2D slices from a 3D or 4D object — slices","text":"","code":"slices(x, ...)  # S4 method for NeuroVol slices(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/slices-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract an ordered series of 2D slices from a 3D or 4D object — slices","text":"x 3D 4D object extract slices ... Additional arguments passed underlying methods","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/slices-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract an ordered series of 2D slices from a 3D or 4D object — slices","text":"list 2D matrices, containing slice input object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/space-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Geometric Properties of an Image — space","title":"Extract Geometric Properties of an Image — space","text":"function retrieves geometric properties given image, dimensions voxel size.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/space-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Geometric Properties of an Image — space","text":"","code":"space(x, ...)  # S4 method for IndexLookupVol space(x)  # S4 method for ROICoords space(x)  # S4 method for NeuroObj space(x)  # S4 method for NeuroSpace space(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/space-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Geometric Properties of an Image — space","text":"x object query, can instance NeuroVol NeuroVec. ... Additional arguments, needed.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/space-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Geometric Properties of an Image — space","text":"object representing geometric space image, type NeuroSpace.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/space-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Geometric Properties of an Image — space","text":"","code":"# Create a NeuroSpace object with dimensions (10, 10, 10) and voxel size (1, 1, 1) x <- NeuroSpace(c(10, 10, 10), c(1, 1, 1))  # Create a NeuroVol object with random data and the specified NeuroSpace vol <- NeuroVol(rnorm(10 * 10 * 10), x)  # Retrieve the geometric properties of the NeuroVol object identical(x, space(vol)) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/spacing-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Voxel Dimensions of an Image — spacing","title":"Extract Voxel Dimensions of an Image — spacing","text":"function extracts voxel dimensions image represented input object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/spacing-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Voxel Dimensions of an Image — spacing","text":"","code":"spacing(x)  # S4 method for ROICoords spacing(x)  # S4 method for NeuroObj spacing(x)  # S4 method for NeuroSpace spacing(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/spacing-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Voxel Dimensions of an Image — spacing","text":"x object representing image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/spacing-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Voxel Dimensions of an Image — spacing","text":"numeric vector containing voxel dimensions image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/spacing-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Voxel Dimensions of an Image — spacing","text":"","code":"bspace <- NeuroSpace(c(10, 10, 10), c(2, 2, 2)) all.equal(spacing(bspace), c(2, 2, 2)) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/spherical_roi.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Spherical Region of Interest — spherical_roi","title":"Create a Spherical Region of Interest — spherical_roi","text":"Creates Spherical ROI based centroid.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/spherical_roi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Spherical Region of Interest — spherical_roi","text":"","code":"spherical_roi(   bvol,   centroid,   radius,   fill = NULL,   nonzero = FALSE,   use_cpp = TRUE )"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/spherical_roi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Spherical Region of Interest — spherical_roi","text":"bvol NeuroVol NeuroSpace instance centroid center sphere positive-coordinate (,j,k) voxel space. radius radius real units (e.g. millimeters) spherical ROI fill optional value(s) store data nonzero TRUE, keep nonzero elements bvol use_cpp whether use compiled c++ code","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/spherical_roi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Spherical Region of Interest — spherical_roi","text":"instance class ROIVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/spherical_roi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Spherical Region of Interest — spherical_roi","text":"","code":"sp1 <- NeuroSpace(c(10,10,10), c(1,2,3))  # create an ROI centered around the integer-valued positive voxel coordinate: i=5, j=5, k=5  cube <- spherical_roi(sp1, c(5,5,5), 3.5)  vox <- coords(cube)  cds <- coords(cube, real=TRUE)  ## fill in ROI with value of 6  cube1 <- spherical_roi(sp1, c(5,5,5), 3.5, fill=6)  all(cube1 == 6) #> [1] TRUE   # create an ROI centered around the real-valued coordinates: x=5, y=5, z=5  vox <- coord_to_grid(sp1, c(5, 5, 5))  cube <- spherical_roi(sp1, vox, 3.5)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_blocks-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut a vector-valued object into a list of sub-blocks — split_blocks","title":"Cut a vector-valued object into a list of sub-blocks — split_blocks","text":"Splits vector-valued object list sub-blocks defined vector indices.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_blocks-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut a vector-valued object into a list of sub-blocks — split_blocks","text":"","code":"split_blocks(x, indices, ...)  # S4 method for NeuroVec,integer split_blocks(x, indices, ...)  # S4 method for NeuroVec,factor split_blocks(x, indices, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_blocks-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut a vector-valued object into a list of sub-blocks — split_blocks","text":"x vector-valued object indices vector indices defining sub-blocks. Must match length input vector. ... additional arguments","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_clusters-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Cut an object into a list of spatial or spatiotemporal clusters — split_clusters","title":"Cut an object into a list of spatial or spatiotemporal clusters — split_clusters","text":"function cuts object list sub-objects based vector cluster indices. resulting list contains clusters separate objects.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_clusters-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cut an object into a list of spatial or spatiotemporal clusters — split_clusters","text":"","code":"split_clusters(x, clusters, ...)  # S4 method for NeuroVol,ClusteredNeuroVol split_clusters(x, clusters)  # S4 method for NeuroVol,integer split_clusters(x, clusters)  # S4 method for NeuroVol,numeric split_clusters(x, clusters)  # S4 method for ClusteredNeuroVol,missing split_clusters(x, clusters)  # S4 method for NeuroVec,integer split_clusters(x, clusters, ...)  # S4 method for NeuroVec,numeric split_clusters(x, clusters, ...)  # S4 method for NeuroVec,ClusteredNeuroVol split_clusters(x, clusters, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_clusters-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cut an object into a list of spatial or spatiotemporal clusters — split_clusters","text":"x object split. input object must 4D tensor, first three dimensions correspond spatial dimensions data fourth dimension corresponds time. clusters vector cluster indices split . ... Additional arguments passed methods.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_clusters-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cut an object into a list of spatial or spatiotemporal clusters — split_clusters","text":"","code":"## split 'NeuroVol' with a 'ClusteredNeuroVol' vol <- NeuroVol(array(runif(10*10*10),c(10,10,10)), NeuroSpace(c(10,10,10))) mask <- as.logical(vol > .5) mask.idx <- which(mask != 0) grid <- index_to_coord(mask, mask.idx) vox <- index_to_grid(mask, mask.idx)  library(purrr) ## partition coordinates into 50 clusters using 'kmeans' kres <- kmeans(grid, centers=50, iter.max=500) kvol <- ClusteredNeuroVol(mask, kres$cluster) klis <- split_clusters(mask, kvol) ret1 <- vol %>% split_clusters(kvol) %>% purrr::map_dbl(~ mean(values(.)))  ## split NeuroVol with 'integer' vector of clusters. indices <- numeric(prod(dim(mask)[1:3]))  ## locations with a cluster value of 0 are ignored indices[mask.idx] <- kres$cluster  ret2 <- vol %>% split_clusters(as.integer(indices)) %>% purrr::map_dbl(~ mean(values(.))) all(ret1 == ret1) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_fill-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Fill Disjoint Sets of Values with the Output of a Function — split_fill","title":"Fill Disjoint Sets of Values with the Output of a Function — split_fill","text":"function splits object disjoint sets values based factor, applies specified function set, returns new object original values replaced function's output.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_fill-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fill Disjoint Sets of Values with the Output of a Function — split_fill","text":"","code":"split_fill(x, fac, FUN)  # S4 method for NeuroVol,factor,`function` split_fill(x, fac, FUN)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_fill-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fill Disjoint Sets of Values with the Output of a Function — split_fill","text":"x object split. fac factor split . FUN function used summarize sets.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_fill-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fill Disjoint Sets of Values with the Output of a Function — split_fill","text":"new object original values replaced output function.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_fill-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fill Disjoint Sets of Values with the Output of a Function — split_fill","text":"FUN function can either return scalar input vector vector equal length input vector. returns scalar, every voxel set filled value output vector.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_fill-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fill Disjoint Sets of Values with the Output of a Function — split_fill","text":"","code":"## Summarize with mean -- FUN returns a scalar x <- NeuroSpace(c(10, 10, 10), c(1, 1, 1)) vol <- NeuroVol(rnorm(10 * 10 * 10), x) fac <- factor(rep(1:10, length.out=1000)) ovol.mean <- split_fill(vol, fac, mean) identical(dim(ovol.mean), dim(vol)) #> [1] TRUE length(unique(as.vector(ovol.mean))) == 10 #> [1] TRUE  ## Transform by reversing vector -- FUN returns a vector ovol2 <- split_fill(vol, fac, rev)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_reduce-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize Subsets of an Object by Splitting by Row and Applying a Summary Function — split_reduce","title":"Summarize Subsets of an Object by Splitting by Row and Applying a Summary Function — split_reduce","text":"function summarizes subsets numeric matrix matrix-like object first splitting object row applying summary function.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_reduce-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize Subsets of an Object by Splitting by Row and Applying a Summary Function — split_reduce","text":"","code":"split_reduce(x, fac, FUN)  # S4 method for matrix,integer,`function` split_reduce(x, fac, FUN)  # S4 method for matrix,integer,missing split_reduce(x, fac)  # S4 method for matrix,factor,missing split_reduce(x, fac)  # S4 method for matrix,factor,`function` split_reduce(x, fac, FUN)  # S4 method for NeuroVec,factor,`function` split_reduce(x, fac, FUN)  # S4 method for NeuroVec,factor,missing split_reduce(x, fac, FUN)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_reduce-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize Subsets of an Object by Splitting by Row and Applying a Summary Function — split_reduce","text":"x numeric matrix matrix-like object. fac factor define subsets object. FUN summary function apply subset. provided, mean sub-matrix column computed.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_reduce-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize Subsets of an Object by Splitting by Row and Applying a Summary Function — split_reduce","text":"new matrix original values \"reduced\" supplied function.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_reduce-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Summarize Subsets of an Object by Splitting by Row and Applying a Summary Function — split_reduce","text":"'FUN' supplied, must take vector return single scalar value. returns one value, error occur. 'x' NeuroVec instance, voxels (dimensions 1:3) treated columns time-series (dimension 4) rows. summary function applied groups voxels. However, goal apply function groups time-points, can achieved follows: split_reduce(t(.matrix(bvec)), fac)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_reduce-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize Subsets of an Object by Splitting by Row and Applying a Summary Function — split_reduce","text":"","code":"mat = matrix(rnorm(100*100), 100, 100) fac = factor(sample(1:3, nrow(mat), replace=TRUE)) ## Compute column means of each sub-matrix ms <- split_reduce(mat, fac) all.equal(row.names(ms), levels(fac)) #> [1] TRUE  ## Compute column medians of each sub-matrix ms <- split_reduce(mat, fac, median)  ## Compute time-series means grouped over voxels. ## Here, 'length(fac)' must equal the number of voxels: 'prod(dim(bvec)[1:3])' bvec <- NeuroVec(array(rnorm(24*24*24*24), c(24,24,24,24)), NeuroSpace(c(24,24,24,24), c(1,1,1))) fac <- factor(sample(1:3, prod(dim(bvec)[1:3]), replace=TRUE)) ms <- split_reduce(bvec, fac) ms2 <- split_reduce(bvec, fac, mean) all.equal(row.names(ms), levels(fac)) #> [1] TRUE all.equal(ms, ms2) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_scale-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Center and/or Scale Row-subsets of a Matrix or Matrix-like Object — split_scale","title":"Center and/or Scale Row-subsets of a Matrix or Matrix-like Object — split_scale","text":"function centers /scales row-subsets numeric matrix matrix-like object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_scale-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Center and/or Scale Row-subsets of a Matrix or Matrix-like Object — split_scale","text":"","code":"split_scale(x, f, center, scale)  # S4 method for matrix,factor,logical,logical split_scale(x, f, center = TRUE, scale = TRUE)  # S4 method for matrix,factor,missing,missing split_scale(x, f)  # S4 method for DenseNeuroVec,factor,missing,missing split_scale(x, f)  # S4 method for DenseNeuroVec,factor,logical,missing split_scale(x, f, center)  # S4 method for DenseNeuroVec,factor,logical,logical split_scale(x, f, center, scale)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_scale-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Center and/or Scale Row-subsets of a Matrix or Matrix-like Object — split_scale","text":"x numeric matrix matrix-like object. f splitting object, typically factor set integer indices. Must equal number rows matrix. center values within submatrix centered? TRUE, mean removed column submatrix. scale values scaled? TRUE, vector divided standard deviation column submatrix.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_scale-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Center and/or Scale Row-subsets of a Matrix or Matrix-like Object — split_scale","text":"new matrix matrix-like object original rows grouped 'f' centered /scaled grouping.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/split_scale-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Center and/or Scale Row-subsets of a Matrix or Matrix-like Object — split_scale","text":"","code":"M <- matrix(rnorm(1000), 10, 100) fac <- factor(rep(1:2, each=5)) Ms <- split_scale(M, fac)  ## Correctly centered all(abs(apply(Ms[fac == 1,], 2, mean)) < .000001) #> [1] TRUE all(abs(apply(Ms[fac == 2,], 2, mean)) < .000001) #> [1] TRUE  ## Correctly scaled all.equal(apply(Ms[fac == 1,], 2, sd), rep(1, ncol(Ms))) #> [1] TRUE all.equal(apply(Ms[fac == 2,], 2, sd), rep(1, ncol(Ms))) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/square_roi.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a square region of interest — square_roi","title":"Create a square region of interest — square_roi","text":"function creates square region interest (ROI) 3D volume, z-dimension fixed one voxel coordinate. ROI defined within given NeuroVol NeuroSpace instance.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/square_roi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a square region of interest — square_roi","text":"","code":"square_roi(bvol, centroid, surround, fill = NULL, nonzero = FALSE, fixdim = 3)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/square_roi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a square region of interest — square_roi","text":"bvol NeuroVol NeuroSpace instance representing 3D volume space. centroid numeric vector length 3, representing center square ROI voxel coordinates. surround non-negative integer specifying number voxels either side central voxel. fill optional value values assign data slot resulting ROI. provided, data assigned. nonzero logical value indicating whether keep nonzero elements bvol. bvol NeuroSpace instance, argument ignored. fixdim logical value indicating whether fixed dimension third, z, dimension. Default TRUE.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/square_roi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a square region of interest — square_roi","text":"instance class ROIVol representing square ROI.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/square_roi.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a square region of interest — square_roi","text":"","code":"sp1 <- NeuroSpace(c(10, 10, 10), c(1, 1, 1)) square <- square_roi(sp1, c(5, 5, 5), 1) vox <- coords(square) ## a 3 X 3 X 1 grid nrow(vox) == 9 #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/strip_extension-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to strip extension from file name, given a FileFormat instance. — strip_extension","title":"Generic function to strip extension from file name, given a FileFormat instance. — strip_extension","text":"Generic function strip extension file name, given FileFormat instance.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/strip_extension-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to strip extension from file name, given a FileFormat instance. — strip_extension","text":"","code":"strip_extension(x, file_name)  # S4 method for FileFormat,character strip_extension(x, file_name)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/strip_extension-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to strip extension from file name, given a FileFormat instance. — strip_extension","text":"x descriptor instance file_name file name stripped extension","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/strip_extension-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to strip extension from file name, given a FileFormat instance. — strip_extension","text":"file_name without extension","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/sub-AbstractSparseNeuroVec-numeric-numeric-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"extractor — [,AbstractSparseNeuroVec,numeric,numeric,ANY-method","title":"extractor — [,AbstractSparseNeuroVec,numeric,numeric,ANY-method","text":"extractor","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/sub-AbstractSparseNeuroVec-numeric-numeric-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extractor — [,AbstractSparseNeuroVec,numeric,numeric,ANY-method","text":"","code":"# S4 method for AbstractSparseNeuroVec,numeric,numeric,ANY [(x, i, j, k, m, ..., drop = TRUE)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/sub-AbstractSparseNeuroVec-numeric-numeric-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extractor — [,AbstractSparseNeuroVec,numeric,numeric,ANY-method","text":"x object first index j second index k third index m fourth index ... additional args drop dimension","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/sub-SparseNeuroVol-numeric-numeric-ANY-method.html","id":null,"dir":"Reference","previous_headings":"","what":"extractor — [,SparseNeuroVol,numeric,numeric,ANY-method","title":"extractor — [,SparseNeuroVol,numeric,numeric,ANY-method","text":"extractor","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/sub-SparseNeuroVol-numeric-numeric-ANY-method.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extractor — [,SparseNeuroVol,numeric,numeric,ANY-method","text":"","code":"# S4 method for SparseNeuroVol,numeric,numeric,ANY [(x, i, j, k, ..., drop = TRUE)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/sub-SparseNeuroVol-numeric-numeric-ANY-method.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extractor — [,SparseNeuroVol,numeric,numeric,ANY-method","text":"x object first index j second index k third index ... additional args drop dimension","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/sub_vector-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Generic function to extract a sub-vector from a NeuroVec object. — sub_vector","title":"Generic function to extract a sub-vector from a NeuroVec object. — sub_vector","text":"Generic function extract sub-vector NeuroVec object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/sub_vector-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generic function to extract a sub-vector from a NeuroVec object. — sub_vector","text":"","code":"sub_vector(x, i, ...)  # S4 method for FileBackedNeuroVec,numeric sub_vector(x, i)  # S4 method for NeuroVec,numeric sub_vector(x, i)  # S4 method for NeuroVecSeq,numeric sub_vector(x, i)  # S4 method for SparseNeuroVec,numeric sub_vector(x, i)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/sub_vector-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generic function to extract a sub-vector from a NeuroVec object. — sub_vector","text":"x four-dimensional image indices volume(s) extract ... additional arguments","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/sub_vector-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generic function to extract a sub-vector from a NeuroVec object. — sub_vector","text":" NeuroVec object sub-sequence supplied object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/sub_vector-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generic function to extract a sub-vector from a NeuroVec object. — sub_vector","text":"","code":"bvec <- NeuroVec(array(rnorm(24*24*24*24), c(24,24,24,24)), NeuroSpace(c(24,24,24,24), c(1,1,1))) vec <- sub_vector(bvec,1:2) all.equal(2, dim(vec)[4]) #> [1] TRUE  vec <- sub_vector(bvec, c(1,3,5,7)) all.equal(4, dim(vec)[4]) #> [1] TRUE  mask <- LogicalNeuroVol(rep(TRUE, 24*24*24), NeuroSpace(c(24,24,24), c(1,1,1))) svec <- SparseNeuroVec(array(rnorm(24*24*24*24), c(24,24,24,24)), NeuroSpace(c(24,24,24,24), c(1,1,1)), mask) vec <- sub_vector(svec, c(1,3,5)) all.equal(3, dim(vec)[4]) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/trans-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract image coordinate transformation — trans","title":"Extract image coordinate transformation — trans","text":"Extract image coordinate transformation","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/trans-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract image coordinate transformation — trans","text":"","code":"trans(x)  # S4 method for MetaInfo trans(x)  # S4 method for NIFTIMetaInfo trans(x)  # S4 method for NeuroObj trans(x)  # S4 method for NeuroSpace trans(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/trans-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract image coordinate transformation — trans","text":"x object transformation","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/trans-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract image coordinate transformation — trans","text":"function returns transformation can used go \"grid coordinates\" \"real world coordinates\" millimeters. function returns transformation can used go \"grid coordinates\" \"real world coordinates\" millimeters. see NeuroSpace","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/trans-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract image coordinate transformation — trans","text":"","code":"bspace <- NeuroSpace(c(10,10,10), c(2,2,2)) trans(bspace) #>      [,1] [,2] [,3] [,4] #> [1,]    2    0    0    0 #> [2,]    0    2    0    0 #> [3,]    0    0    2    0 #> [4,]    0    0    0    1 all.equal(dim(trans(bspace)), c(4,4)) #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/values-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Data Values of an Object — values","title":"Extract Data Values of an Object — values","text":"Extract Data Values Object","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/values-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Data Values of an Object — values","text":"","code":"values(x, ...)  # S4 method for ROIVol values(x, ...)  # S4 method for ROIVec values(x, ...)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/values-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Data Values of an Object — values","text":"x object get values ... additional arguments","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/vectors-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract an ordered list of 1D vectors. — vectors","title":"Extract an ordered list of 1D vectors. — vectors","text":"function extracts ordered list 1D vectors object supplies vector data. subset argument specifies subset vectors extract, can vector indices logical vector. return value list containing extracted vectors order specified indices.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/vectors-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract an ordered list of 1D vectors. — vectors","text":"","code":"vectors(x, subset, ...)  # S4 method for NeuroVec,missing vectors(x)  # S4 method for DenseNeuroVec,missing vectors(x)  # S4 method for NeuroVec,numeric vectors(x, subset)  # S4 method for NeuroVec,logical vectors(x, subset)  # S4 method for ROIVec,missing vectors(x)  # S4 method for matrix,missing vectors(x)  # S4 method for ROIVec,integer vectors(x, subset)  # S4 method for matrix,integer vectors(x, subset)  # S4 method for matrix,numeric vectors(x, subset)  # S4 method for ROIVec,numeric vectors(x, subset)  # S4 method for ROIVec,logical vectors(x, subset)  # S4 method for SparseNeuroVec,missing vectors(x, nonzero = FALSE)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/vectors-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract an ordered list of 1D vectors. — vectors","text":"x object supplies vector data. subset subset vectors extract. ... additional arguments passed methods. nonzero include nonzero vectors output list","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/vectors-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract an ordered list of 1D vectors. — vectors","text":"","code":"file_name <- system.file(\"extdata\", \"global_mask_v4.nii\", package=\"neuroim2\") vec <- read_vec(file_name) v <- vectors(vec) mean(v[[1]]) #> [1] 0"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/vol_subset-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"subset an ROIVol — [,ROIVol,numeric,missing,ANY-method","title":"subset an ROIVol — [,ROIVol,numeric,missing,ANY-method","text":"subset ROIVol","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/vol_subset-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"subset an ROIVol — [,ROIVol,numeric,missing,ANY-method","text":"","code":"# S4 method for ROIVol,numeric,missing,ANY [(x, i, j, drop)  # S4 method for ROIVol,logical,missing,ANY [(x, i, j, drop)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/vol_subset-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"subset an ROIVol — [,ROIVol,numeric,missing,ANY-method","text":"x object first index j second index drop drop dimension","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/vols-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract an ordered series of 3D volumes. — vols","title":"Extract an ordered series of 3D volumes. — vols","text":"function extracts ordered series 3D volumes object supplies volume data. indices argument specifies subset volumes extract, can vector indices logical vector. return value list containing extracted volumes order specified indices.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/vols-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract an ordered series of 3D volumes. — vols","text":"","code":"vols(x, indices, ...)  # S4 method for NeuroVec,numeric vols(x, indices)  # S4 method for NeuroVec,missing vols(x)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/vols-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract an ordered series of 3D volumes. — vols","text":"x object supplies volume data. indices subset volumes extract. ... additional arguments passed methods.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/vols-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract an ordered series of 3D volumes. — vols","text":"","code":"vec <- read_vec(system.file(\"extdata\", \"global_mask_v4.nii\", package=\"neuroim2\")) vs <- vols(vec) length(vs) == dim(vec)[4] #> [1] TRUE  vs <- vols(vec, indices=1:3) length(vs) == 3 #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/voxels-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"extract voxel coordinates — voxels","title":"extract voxel coordinates — voxels","text":"extract voxel coordinates","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/voxels-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"extract voxel coordinates — voxels","text":"","code":"voxels(x, ...)  # S4 method for Kernel voxels(x, center_voxel = NULL)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/voxels-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"extract voxel coordinates — voxels","text":"x object extract voxels ... additional arguments function center_voxel absolute location center voxel, default (0,0,0)","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/which_dim-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Dimensions of a Given Axis — which_dim","title":"Find Dimensions of a Given Axis — which_dim","text":"function returns dimension specified axis given object, matrix array.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/which_dim-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Dimensions of a Given Axis — which_dim","text":"","code":"which_dim(x, axis)  # S4 method for NeuroSpace,NamedAxis which_dim(x, axis)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/which_dim-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Dimensions of a Given Axis — which_dim","text":"x object representing input data, matrix array. axis integer representing axis dimension requested. example, 1 rows, 2 columns, 3 depth 3D array.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/which_dim-methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find Dimensions of a Given Axis — which_dim","text":"integer representing dimension specified axis given object.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/which_dim-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find Dimensions of a Given Axis — which_dim","text":"","code":"x <- NeuroSpace(c(10,10,10), spacing=c(1,1,1)) which_dim(x, x@axes@j) == 2 #> [1] TRUE"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/write_elements-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a sequence of elements from an input source — write_elements","title":"Write a sequence of elements from an input source — write_elements","text":"Write sequence elements input source write_elements","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/write_elements-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a sequence of elements from an input source — write_elements","text":"","code":"write_elements(x, els)  # S4 method for BinaryWriter,numeric write_elements(x, els)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/write_elements-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a sequence of elements from an input source — write_elements","text":"x output channel els elements write","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/write_vec-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a 4d image vector to disk — write_vec","title":"Write a 4d image vector to disk — write_vec","text":"Write 4d image vector disk","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/write_vec-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a 4d image vector to disk — write_vec","text":"","code":"write_vec(x, file_name, format, data_type, ...)  # S4 method for LatentNeuroVec,character,missing,missing write_vec(x, file_name, nbit = FALSE, compression = 9, chunk_dim = NULL)  # S4 method for ROIVec,character,missing,missing write_vec(x, file_name)  # S4 method for NeuroVec,character,missing,missing write_vec(x, file_name)  # S4 method for NeuroVec,character,character,missing write_vec(   x,   file_name,   format,   nbit = FALSE,   compression = 5,   chunk_dim = c(10, 10, 10, dim(x)[4]) )  # S4 method for NeuroVec,character,missing,character write_vec(x, file_name, data_type)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/write_vec-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a 4d image vector to disk — write_vec","text":"x image object, typically NeuroVec instance. file_name output file name. format file format string. Since \"NIFTI\" currently supported format, parameter can safely ignored omitted. data_type numeric data type. specified character vector : \"BINARY\", \"UBYTE\", \"SHORT\", \"INT\", \"FLOAT\", \"DOUBLE\". Otherwise output format inferred R datatype image. ... extra args nbit set nbit compression compression compression level 1 9 chunk_dim dimensions chunk","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/write_vec-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a 4d image vector to disk — write_vec","text":"","code":"bvec <- NeuroVec(array(0, c(10,10,10,10)), NeuroSpace(c(10,10,10,10), c(1,1,1))) if (FALSE) { write_vec(bvol, \"out.nii\") write_vec(bvol, \"out.nii.gz\") write_vec(bvec, \"out.nii\") write_vec(bvec, \"out.nii.gz\") }"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/write_vol-methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a 3d image volume to disk — write_vol","title":"Write a 3d image volume to disk — write_vol","text":"Write 3d image volume disk","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/write_vol-methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a 3d image volume to disk — write_vol","text":"","code":"write_vol(x, file_name, format, data_type)  # S4 method for NeuroVol,character,missing,missing write_vol(x, file_name)  # S4 method for ClusteredNeuroVol,character,missing,missing write_vol(x, file_name)  # S4 method for NeuroVol,character,character,missing write_vol(x, file_name, format)  # S4 method for ROIVol,character,character,missing write_vol(x, file_name, format)  # S4 method for NeuroVol,character,missing,character write_vol(x, file_name, data_type)"},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/write_vol-methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a 3d image volume to disk — write_vol","text":"x image object, typically NeuroVol instance. file_name output file name format file format string. Since \"NIFTI\" currently supported format, parameter can safely ignored omitted. data_type output data type, specified character vector : \"BINARY\", \"UBYTE\", \"SHORT\", \"INT\", \"FLOAT\", \"DOUBLE\". Otherwise output format inferred R datatype image.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/write_vol-methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a 3d image volume to disk — write_vol","text":"output format inferred file extension. output format inferred file extension.  write_vol(x, \".nii\") outputs NIFTI file.  write_vol(x, \".nii.gz\") outputs gzipped NIFTI file. file output formats currently supported.","code":""},{"path":"https://bbuchsbaum.github.io/neuroim2/reference/write_vol-methods.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Write a 3d image volume to disk — write_vol","text":"","code":"bvol <- NeuroVol(array(0, c(10,10,10)), NeuroSpace(c(10,10,10), c(1,1,1))) if (FALSE) { write_vol(bvol, \"out.nii\") write_vol(bvol, \"out.nii.gz\") }"}]
