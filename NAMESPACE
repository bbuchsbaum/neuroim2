# Generated by roxygen2: do not edit by hand

S3method("[",deferred_list)
S3method("[",deferred_list2)
S3method("[[",deferred_list)
S3method("[[",deferred_list2)
S3method(as.list,deferred_list)
S3method(as.list,deferred_list2)
S3method(length,deferred_list2)
S3method(print,deferred_list)
S3method(print,deferred_list2)
export()
export(AFNIMetaInfo)
export(BinaryReader)
export(BinaryWriter)
export(ClusteredNeuroVol)
export(ColumnReader)
export(DenseNeuroVec)
export(DenseNeuroVol)
export(FileBackedNeuroVec)
export(IndexLookupVol)
export(Kernel)
export(LogicalNeuroVol)
export(MappedNeuroVec)
export(MappedNeuroVecSource)
export(MetaInfo)
export(NIFTIMetaInfo)
export(NeuroHyperVec)
export(NeuroSlice)
export(NeuroSpace)
export(NeuroVec)
export(NeuroVecSeq)
export(NeuroVecSource)
export(NeuroVol)
export(NeuroVolSource)
export(ROIVec)
export(ROIVol)
export(SparseNeuroVec)
export(SparseNeuroVecSource)
export(SparseNeuroVol)
export(add_dim)
export(as)
export(as.mask)
export(as.matrix)
export(as.sparse)
export(axes)
export(bootstrap_searchlight)
export(centroid)
export(centroids)
export(clustered_searchlight)
export(concat)
export(conn_comp)
export(conn_comp_3D)
export(coord_to_grid)
export(coord_to_index)
export(coords)
export(cuboid_roi)
export(data_file)
export(data_file_matches)
export(data_reader)
export(deferred_list)
export(deferred_list2)
export(drop)
export(drop_dim)
export(embed_kernel)
export(file_matches)
export(gaussian_blur)
export(grid_to_coord)
export(grid_to_grid)
export(grid_to_index)
export(guided_filter)
export(header_file)
export(header_file_matches)
export(index_to_coord)
export(index_to_grid)
export(indices)
export(inverse_trans)
export(linear_access)
export(load_data)
export(lookup)
export(map_values)
export(mapf)
export(ndim)
export(num_clusters)
export(origin)
export(partition)
export(perm_mat)
export(plot)
export(print)
export(random_searchlight)
export(read_columns)
export(read_elements)
export(read_header)
export(read_meta_info)
export(read_vec)
export(read_vol)
export(read_vol_list)
export(reorient)
export(scale_series)
export(searchlight)
export(searchlight_coords)
export(series)
export(slice)
export(slices)
export(space)
export(spacing)
export(spherical_roi)
export(split_blocks)
export(split_clusters)
export(split_fill)
export(split_reduce)
export(split_scale)
export(square_roi)
export(strip_extension)
export(sub_vector)
export(trans)
export(values)
export(vectors)
export(vols)
export(voxels)
export(write_elements)
export(write_vec)
export(write_vol)
exportClasses(AFNIFormat)
exportClasses(AFNIMetaInfo)
exportClasses(AxisSet)
exportClasses(AxisSet1D)
exportClasses(AxisSet2D)
exportClasses(AxisSet3D)
exportClasses(AxisSet4D)
exportClasses(AxisSet5D)
exportClasses(BasisNeuroVec)
exportClasses(BinaryReader)
exportClasses(BinaryWriter)
exportClasses(ClusteredNeuroVol)
exportClasses(ColumnReader)
exportClasses(DenseNeuroVec)
exportClasses(DenseNeuroVol)
exportClasses(FileFormat)
exportClasses(FileMetaInfo)
exportClasses(FileSource)
exportClasses(IndexLookupVol)
exportClasses(Kernel)
exportClasses(LogicalNeuroVol)
exportClasses(MappedNeuroVec)
exportClasses(MappedNeuroVecSource)
exportClasses(MetaInfo)
exportClasses(NIFTIFormat)
exportClasses(NIFTIMetaInfo)
exportClasses(NamedAxis)
exportClasses(NeuroBucket)
exportClasses(NeuroHyperVec)
exportClasses(NeuroSlice)
exportClasses(NeuroSpace)
exportClasses(NeuroVec)
exportClasses(NeuroVecSeq)
exportClasses(NeuroVecSource)
exportClasses(NeuroVol)
exportClasses(NeuroVolSource)
exportClasses(ROI)
exportClasses(ROIVec)
exportClasses(ROIVol)
exportClasses(ROIVolWindow)
exportClasses(SparseNeuroVecSource)
exportClasses(SparseNeuroVol)
exportMethods("[")
exportMethods("[[")
exportMethods(add_dim)
exportMethods(as.dense)
exportMethods(as.list)
exportMethods(as.logical)
exportMethods(as.mask)
exportMethods(as.matrix)
exportMethods(as.numeric)
exportMethods(as.sparse)
exportMethods(axes)
exportMethods(bounds)
exportMethods(centroid)
exportMethods(centroids)
exportMethods(close)
exportMethods(concat)
exportMethods(conn_comp)
exportMethods(coord_to_grid)
exportMethods(coord_to_index)
exportMethods(coords)
exportMethods(dim)
exportMethods(dim_of)
exportMethods(drop)
exportMethods(drop_dim)
exportMethods(embed_kernel)
exportMethods(grid_to_coord)
exportMethods(grid_to_grid)
exportMethods(grid_to_index)
exportMethods(index_to_coord)
exportMethods(index_to_grid)
exportMethods(indices)
exportMethods(inverse_trans)
exportMethods(length)
exportMethods(linear_access)
exportMethods(load_data)
exportMethods(lookup)
exportMethods(map_values)
exportMethods(mapf)
exportMethods(ndim)
exportMethods(num_clusters)
exportMethods(origin)
exportMethods(patch_set)
exportMethods(perm_mat)
exportMethods(plot)
exportMethods(print)
exportMethods(read_columns)
exportMethods(read_elements)
exportMethods(read_meta_info)
exportMethods(reorient)
exportMethods(scale_series)
exportMethods(series)
exportMethods(series_roi)
exportMethods(show)
exportMethods(slice)
exportMethods(slices)
exportMethods(space)
exportMethods(spacing)
exportMethods(split_blocks)
exportMethods(split_clusters)
exportMethods(split_reduce)
exportMethods(split_scale)
exportMethods(sub_vector)
exportMethods(trans)
exportMethods(values)
exportMethods(vectors)
exportMethods(vols)
exportMethods(voxels)
exportMethods(which_dim)
exportMethods(write_vec)
exportMethods(write_vol)
import(Matrix)
import(assertthat)
import(methods)
import(purrr)
importFrom(Gmedian,Gmedian)
importFrom(Matrix,sparseVector)
importFrom(RNifti,readNifti)
importFrom(Rcpp,evalCpp)
importFrom(assertthat,assert_that)
importFrom(bigstatsr,FBM)
importFrom(grDevices,col2rgb)
importFrom(grDevices,gray)
importFrom(grDevices,heat.colors)
importFrom(graphics,plot)
importFrom(mmap,char)
importFrom(mmap,int16)
importFrom(mmap,int32)
importFrom(mmap,int8)
importFrom(mmap,mmap)
importFrom(mmap,mmapFlags)
importFrom(mmap,munmap)
importFrom(mmap,real32)
importFrom(mmap,real64)
importFrom(mmap,uint8)
importFrom(purrr,map_dbl)
importFrom(purrr,map_int)
importFrom(purrr,map_lgl)
importFrom(rflann,Neighbour)
importFrom(rflann,RadiusSearch)
importFrom(stats,dnorm)
importFrom(stats,kmeans)
importFrom(stringr,str_split)
importFrom(stringr,str_sub)
importFrom(stringr,str_trim)
importFrom(utils,str)
useDynLib(neuroim2)
